import{_ as t,c as a,a as i,o as r}from"./app-HB0Nuzez.js";const o={};function s(l,e){return r(),a("div",null,e[0]||(e[0]=[i('<h1 id="生命科学-snapgene-构建载体方法分享" tabindex="-1"><a class="header-anchor" href="#生命科学-snapgene-构建载体方法分享"><span>[生命科学] snapgene 构建载体方法分享</span></a></h1><h2 id="_1-snapgene-构建载体—酶切位点法" tabindex="-1"><a class="header-anchor" href="#_1-snapgene-构建载体—酶切位点法"><span>1. Snapgene 构建载体—酶切位点法</span></a></h2><ol><li>本文以拟南芥相关基因ATG7为例，打开Tair网页（专门的拟南芥基因库网站），找到基因那一栏，输入目标基因后得到结果。从图中可以看到描述这一栏写的这个基因的名称，其中就包括了ATG7。确认基因后点击目标基因。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/1392f9c6ed8140ebb3d6cce0473e60fa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="2"><li>找到Sequence RNA Data：点击<strong>full length CDS.</strong></li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/3ec4219ce31342a3a3fd42d16d0243d2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="3"><li>打开页面后，复制全部序列。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/7ab78ae37be942c2939bbaa6b721d6ab.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="4"><li>打开snapgene，点击new dna file。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/de85d4a8c78d4ff98dc9eef919570718.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="5"><li>黏贴复制文件，并重命名DNA文件，点击OK。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/489a59f188d948469af96c9ab1eda35a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_15,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="6"><li>选择全部序列后，点击Features&gt;add feature&gt;label name(CDS),type(CDS),点击OK。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/8c4c489891ce4d37a9f80123c4632ef4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="7"><li><p>从Star开始CSD序列前25个左右碱基，此时注意温度最好在60度左右（22-40碱基数目之间都可以），点击Primers&gt;add primer&gt;top strand，点OK。</p></li><li><p>从END开始CSD序列后25个左右碱基，此时注意温度最好在60度左右（22-40碱基数目之间都可以），但也要兼顾碱基的长度，如果太长则不好扩增PCR。点击Primers&gt;add primer&gt;bottom strand，点OK. 这一步先做到这，后续再添加酶和碱基。</p></li><li><p>点击Emazy&gt;choose emazy&gt;先移除右边框中的酶，然后再添加你所在实验室中已有的酶，我在这里随便选了6种。如下图所示，然后点确定。</p></li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/a6e273b8bc644c269de65ac83acc0eee.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="10"><li>得到的结果如下图所示。下图中显示的酶是能够切断目的基因的酶，因此要排除。所以我们剩下的可以选择的酶包括Nde1,EcoR1,Pst1共3种酶。下一步打开载体DNA文件。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/1512c8689d014f63b6cbe5ed266e57d0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="11"><li>打开载体以pGADT7 AD为例，查看切入位点的酶有哪些。在筛选的过程中还要注意酶切位点不能把基因切断。因此在选择酶切位点时候要保证两点。1.<strong>载体中多克隆位点</strong>中<strong>包含</strong>该限制性内切酶。2.<strong>目标基因</strong>可酶切的位置<strong>不包含</strong>该限制性内切酶。点击图中标记的地方MCS（多克隆位点）插入基因的位置。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/82f7ff3c0b56465697047b60229b3764.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="12"><li>点击序列可以查看区域内的可用酶切位点。我们可以看到所有酶切位点中，在我们实验室有的酶又不会把基因切碎的酶仅有<strong>Nde1,EcoR1</strong>,而Pst1不在载体的酶切位点上，所以排除。这里我们选择双酶切法，所以选择了<strong>Nde1,EcoR1</strong>两个位点，其中<strong>Nde1在前，EcoR1在后</strong></li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/4155982970ef4a4fa13c7c951e9165a4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="13"><li>查看可以插入的酶切位点后，返回到目的基因的DNA文件。点击primer forward序列，点击Insertions,第一列绿色方框不要管，这个方框是用来添加氨基酸，在构建载体过程不需要调整。把第二列红色方框改成第一个酶切位点基因Nde1, 然后点击insert.并在前面添加G或者C为保护碱基（也可以网络查询适用的保护碱基）。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/7571e45a32564dbd8adee688d1988361.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><p>我的示例图中添加的碱基G。如下图所示：<img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/0cf61c7f56684aa2865264d0b7b8b112.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" loading="lazy"></p><ol start="14"><li>接下里再编辑末端引物。点击primer end（这个是我自己命名的，反正你记住弄完第一个引物，再弄第二个就行了，一个top strand 一个bottom strand）序列，点击Insertions, 添加EcoR1酶，步骤和上面说的是一样的。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/ded36a06a1654c5296be54752d221a0a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="15"><li>点击ACTION,点击pcr. 选上两个引物。注意顺序，在右下角<strong>重命名为pcr文件</strong>方便下一步操作。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/76bbd0f610504ac2b2c3b6e47c1922b3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><p>得到如下结果后点击保存文件。</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/4645eb61c6aa40b69c185b61e6b8826c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="16"><li>回到载体中，点击ACTIONs&gt;restriction cloning&gt;insert fragment</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/c56a7a8c857b4c6faca5554f1b65c60c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="17"><li>得到结果如下图所示。在Vector界面选择两个酶切位点，注意两个酶切位点的顺序。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/ba2a37d2aa424c85bed0469209b7135e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="18"><li>进入Insert界面，打开之前保存的PCR文件, 选择酶切位点。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/9c4c82498b8e4ef8bb34860f297dc59f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/c88c402e8d0744988d7aa034bccbe52f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="19"><li>最后一步点击PRODUCT查看结果。一般习惯修改文件名字为<strong>载体名+基因.dna</strong>，点击clone。从结果可以看出，插入位点是完全结合到一起了，初步证明插入成功。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/0c6c5644baa247acb348e507d05c8d10.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="20"><li><strong>检查</strong>：返回到碱基序列查看我们之前插入的两个酶切位点是不是为当时插入的基因序列，有没有错误，以及插入片段是否完整。</li></ol><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/1e2fe4c8a9304b93a42397862d246334.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><p><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/7f4da3fe07eb4d51b2ceab21439eec7b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" loading="lazy">可以看到插入尾端位点为3的倍数碱基，且为当时插入的酶，证明实验成功。</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/052638a717c845a6a67c9d5d0dd385ff.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><p>也能通过插入的片段完整来验证实验成功（图中圆圈标记位置）。</p><h2 id="_2-载体构建——同源重组法" tabindex="-1"><a class="header-anchor" href="#_2-载体构建——同源重组法"><span>2. 载体构建——同源重组法</span></a></h2><ol><li>还是以基因ATG7为例，首先在NCBI, TAIR等基因网站找到这个基因，复制CDS序列。</li><li>将序列插入new dna file，然后重命名文件。</li><li>选中全长后，点击Features&gt; add feature&gt;label name 改为CDS&gt; type 改为CDS。这样的目的是为了方便后续检测基因是否插入成功。</li><li>查看实验室已有的酶，点击Emazy&gt;choose emazy&gt;先移除右边框中的酶，然后再添加你所在实验室中已购买的酶。</li><li>保存文件为<strong>ATG7.dna</strong>文件。后续要在载体中插入到这个文件所以要先保存。</li><li>打开<strong>载体文件</strong>, 找到到多酶切位点序列。<strong>查看哪些酶切位点可用且不会切到基因片段</strong>，然后确定酶切位点，可用一个酶，也可以用两个酶，不过最好选两个酶。（步骤5-6的详细介绍参考上文的酶切位点法步骤9-12）</li><li><strong>在载体文件中</strong>选择要两个酶切位点，点击Action&gt;In-fusion cloning&gt; Insert fragment <img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/477ed3bd362a423abfad25b2509b53e9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" loading="lazy"></li><li>切换到Sequence, 点击要两个酶切位点。 <img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/17afe679b8244f079b8078e475732476.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" loading="lazy"></li><li>这一步进行PCR。点击Fragment&gt;Source of fragment&gt;<strong>ATG7.dna（目的基因的CDS序列)</strong>，在下方切换到map, 选择CDS的全长（Star to End）。 <img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/17cf84cfe6fb4d6fb4228b4935b9fe5b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" loading="lazy"></li><li>最后一步。点击PRODUCT&gt;Overlaping PCR primer&gt;重命名文件（载体名+基因名）。温度一般选择60℃， base在16-25都行。下面两个选择都勾上。 <img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/5c47dfcdc95d40c486eb19166b7bfcd9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" loading="lazy"></li><li><strong>检查</strong>：可以看到下方的小方框中都连接上切闭合了。此外，基因组序列中的片段是完整且连续的。最后再点击Sequence进行检测，可以看到基因酶切碱基数目为6证明连接成功。 <img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/2b05998226a84d1aa9d354099d78b452.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" loading="lazy"></li></ol><h2 id="_3-总结" tabindex="-1"><a class="header-anchor" href="#_3-总结"><span>3. 总结</span></a></h2><p>同源重组法比双酶切酶位点法要简单很多，步骤也要少的多，但假阳性率略高。 不过从实践经验来看，同源重组挺好用，比较推荐。</p>',49)]))}const _=t(o,[["render",s],["__file","2022-03-04-_生命科学_ snapgene 构建载体方法分享.html.vue"]]),n=JSON.parse('{"path":"/blog/%E8%83%BD%E6%BA%90%E5%8C%96%E5%B7%A5%E4%B8%8E%E4%BB%AA%E5%99%A8%E7%A7%91%E5%AD%A6/2022-03-04-_%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6_%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB.html","title":"[生命科学] snapgene 构建载体方法分享","lang":"zh-CN","frontmatter":{"date":"2022-03-04T19:27:18.000Z","category":["能源化工与仪器科学"],"tag":["能源化工与仪器科学"],"description":"[生命科学] snapgene 构建载体方法分享 1. Snapgene 构建载体—酶切位点法 本文以拟南芥相关基因ATG7为例，打开Tair网页（专门的拟南芥基因库网站），找到基因那一栏，输入目标基因后得到结果。从图中可以看到描述这一栏写的这个基因的名称，其中就包括了ATG7。确认基因后点击目标基因。 在这里插入图片描述在这里插入图片描述 找到Seq...","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E8%83%BD%E6%BA%90%E5%8C%96%E5%B7%A5%E4%B8%8E%E4%BB%AA%E5%99%A8%E7%A7%91%E5%AD%A6/2022-03-04-_%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6_%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[生命科学] snapgene 构建载体方法分享"}],["meta",{"property":"og:description","content":"[生命科学] snapgene 构建载体方法分享 1. Snapgene 构建载体—酶切位点法 本文以拟南芥相关基因ATG7为例，打开Tair网页（专门的拟南芥基因库网站），找到基因那一栏，输入目标基因后得到结果。从图中可以看到描述这一栏写的这个基因的名称，其中就包括了ATG7。确认基因后点击目标基因。 在这里插入图片描述在这里插入图片描述 找到Seq..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/1392f9c6ed8140ebb3d6cce0473e60fa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"能源化工与仪器科学"}],["meta",{"property":"article:published_time","content":"2022-03-04T19:27:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[生命科学] snapgene 构建载体方法分享\\",\\"image\\":[\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/1392f9c6ed8140ebb3d6cce0473e60fa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/3ec4219ce31342a3a3fd42d16d0243d2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/7ab78ae37be942c2939bbaa6b721d6ab.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/de85d4a8c78d4ff98dc9eef919570718.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/489a59f188d948469af96c9ab1eda35a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_15,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/8c4c489891ce4d37a9f80123c4632ef4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/a6e273b8bc644c269de65ac83acc0eee.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/1512c8689d014f63b6cbe5ed266e57d0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/82f7ff3c0b56465697047b60229b3764.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/4155982970ef4a4fa13c7c951e9165a4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/7571e45a32564dbd8adee688d1988361.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/0cf61c7f56684aa2865264d0b7b8b112.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/ded36a06a1654c5296be54752d221a0a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/76bbd0f610504ac2b2c3b6e47c1922b3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/4645eb61c6aa40b69c185b61e6b8826c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/c56a7a8c857b4c6faca5554f1b65c60c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/ba2a37d2aa424c85bed0469209b7135e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/9c4c82498b8e4ef8bb34860f297dc59f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/c88c402e8d0744988d7aa034bccbe52f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/0c6c5644baa247acb348e507d05c8d10.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/1e2fe4c8a9304b93a42397862d246334.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/7f4da3fe07eb4d51b2ceab21439eec7b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/052638a717c845a6a67c9d5d0dd385ff.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/477ed3bd362a423abfad25b2509b53e9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/17afe679b8244f079b8078e475732476.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/17cf84cfe6fb4d6fb4228b4935b9fe5b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/5c47dfcdc95d40c486eb19166b7bfcd9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\",\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/%5B%E7%94%9F%E5%91%BD%E7%A7%91%E5%AD%A6%5D%20snapgene%20%E6%9E%84%E5%BB%BA%E8%BD%BD%E4%BD%93%E6%96%B9%E6%B3%95%E5%88%86%E4%BA%AB/2b05998226a84d1aa9d354099d78b452.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\"],\\"datePublished\\":\\"2022-03-04T19:27:18.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1. Snapgene 构建载体—酶切位点法","slug":"_1-snapgene-构建载体—酶切位点法","link":"#_1-snapgene-构建载体—酶切位点法","children":[]},{"level":2,"title":"2. 载体构建——同源重组法","slug":"_2-载体构建——同源重组法","link":"#_2-载体构建——同源重组法","children":[]},{"level":2,"title":"3. 总结","slug":"_3-总结","link":"#_3-总结","children":[]}],"git":{},"readingTime":{"minutes":11.56,"words":3469},"filePathRelative":"blog/能源化工与仪器科学/2022-03-04-[生命科学] snapgene 构建载体方法分享.md","localizedDate":"2022年3月5日","excerpt":"\\n<h2>1. Snapgene 构建载体—酶切位点法</h2>\\n<ol>\\n<li>本文以拟南芥相关基因ATG7为例，打开Tair网页（专门的拟南芥基因库网站），找到基因那一栏，输入目标基因后得到结果。从图中可以看到描述这一栏写的这个基因的名称，其中就包括了ATG7。确认基因后点击目标基因。</li>\\n</ol>\\n<figure><img src=\\"https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[生命科学] snapgene 构建载体方法分享/1392f9c6ed8140ebb3d6cce0473e60fa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5b2t5b2t5Yqg5rK56bit,size_20,color_FFFFFF,t_70,g_se,x_16\\" alt=\\"在这里插入图片描述\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>在这里插入图片描述</figcaption></figure>","autoDesc":true}');export{_ as comp,n as data};
