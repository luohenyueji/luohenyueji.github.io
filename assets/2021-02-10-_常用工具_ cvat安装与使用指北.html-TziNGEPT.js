import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as l,c as d,a as e,b as a,d as n,e as i}from"./app-MsA2k2kn.js";const o={},c=e("h1",{id:"常用工具-cvat安装与使用指北",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#常用工具-cvat安装与使用指北","aria-hidden":"true"},"#"),a(" [常用工具] cvat安装与使用指北")],-1),u=e("p",null,"cvat是一个非常好用的标注工具，但是也是非常难以安装的标注工具，所以本文简单讲一讲如何安装与使用cvat。cvat最好在ubuntu18.04安装，windows平台安装难度很大，然后在其他平台使用。",-1),v=e("h2",{id:"_1-安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-安装","aria-hidden":"true"},"#"),a(" 1 安装")],-1),p={href:"https://github.com/openvinotoolkit/cvat/blob/develop/cvat/apps/documentation/installation.md",target:"_blank",rel:"noopener noreferrer"},m=i(`<p><strong>step1 安装docker</strong></p><p>cvat在docker下运行，所以慢慢安装吧。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo apt-get update
sudo apt-get --no-install-recommends install -y \\
  apt-transport-https \\
  ca-certificates \\
  curl \\
  gnupg-agent \\
  software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository \\
  &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\
  $(lsb_release -cs) \\
  stable&quot;
sudo apt-get update
sudo apt-get --no-install-recommends install -y docker-ce docker-ce-cli containerd.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>step2 获取权限</strong></p><p>在没有root权限的情况下运行docker需要获取权限，获取权限后务必重启系统。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo groupadd docker
sudo usermod -aG docker $USER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>step3 获取权限</strong></p><p>安装docker-compose（1.19.0或更高版本）。Compose是用于定义和运行多容器Docker应用程序的工具</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo apt-get --no-install-recommends install -y python3-pip python3-setuptools
sudo python3 -m pip install setuptools docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>step4 克隆cvat源代码</strong></p><p>官方github仓库很慢，所以我就用了gitee镜像。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo apt-get --no-install-recommends install -y git
git clone https://gitee.com/luohenyueji/cvat
cd cvat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>step5 构建docker镜像</strong></p><p>这一步是最难也是耗时最长的一步，会下载很多东西包括一堆python库，所以慢慢等待。对于python库得安装建议使用镜像。具体做法，打开上一步下载的源代码目录cvat/Dockerfile文件，找到Install requirements这项。然后修改并添加相应的python镜像。我用的是阿里云镜像，可以换成别的。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#RUN DATUMARO_HEADLESS=1 python3 -m pip install --no-cache-dir -r /tmp/requirements/\${DJANGO_CONFIGURATION}.txt
RUN DATUMARO_HEADLESS=1 python3 -m pip install -r /tmp/requirements/\${DJANGO_CONFIGURATION}.txt -i https://mirrors.aliyun.com/pypi/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在cvat目录输入以下指令就慢慢等待吧，如果中途安装失败，再次输入指令就好了，注意要使用sudo。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo docker-compose build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>step6 运行Docker容器和创建管理员用户</strong> 这一步要下载公共docker映像，耗时看网速，但是不会太久。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,19),g={href:"https://blog.csdn.net/dair6/article/details/113730812",target:"_blank",rel:"noopener noreferrer"},h=i(`<p>这时候谷歌浏览器打开localhost:8080就能够看到cvat页面，如下所示 <img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[常用工具] cvat安装与使用指北/image/1.jpg" alt="" loading="lazy"></p><p>点击creaate an account就能够创建普通用户，但是第一次使用最好创建管理员账户，具体看下一步。</p><p>输入以下命令，然后有提示创建管理员账户密码就行了。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker exec -it cvat bash -ic &#39;python3 ~/manage.py createsuperuser&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>step7 关闭cvat服务</strong></p><p>运行step6后，哪怕重启服务器，cvat服务还是继续运行的。要关闭在cvat目录输入以下指令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要重新开启就重复step6。</p><h2 id="_2-使用" tabindex="-1"><a class="header-anchor" href="#_2-使用" aria-hidden="true">#</a> 2 使用</h2>`,9),_={href:"https://alex007.blog.csdn.net/article/details/107711076",target:"_blank",rel:"noopener noreferrer"},b=i(`<h3 id="_2-1-其他机器访问cvat服务器" tabindex="-1"><a class="header-anchor" href="#_2-1-其他机器访问cvat服务器" aria-hidden="true">#</a> 2.1 其他机器访问cvat服务器</h3><p>如果要在cvat服务器之外访问，需要指定CVAT_HOST环境变量。最好的方法是创建docker-compose.override.yml并将所有其他设置放在此处。具体做法先把docker-compose.yml复制到cvat目录后命名为docker-compose.override.yml。然后修改docker-compose.override.yml。改动services/cvat/labels/traefik.http.routers.cvat.rule和services/cvat_ui/labels/traefik.http.routers.cvat.rule，将localhost改为你的服务器ip，例如改服务器ip为114.114.114.114。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>services:
  cvat:
    labels:
      #- traefik.http.routers.cvat.rule=Host(\`\${CVAT_HOST:-localhost}\`) &amp;&amp;     
      - traefik.http.routers.cvat.rule=Host(\`\${CVAT_HOST:-114.114.114.114}\`) &amp;&amp; 
          PathPrefix(\`/api/\`, \`/git/\`, \`/opencv/\`, \`/analytics/\`, \`/static/\`, \`/admin\`, \`/documentation/\`, \`/django-rq\`)
  cvat_ui:
    labels:
      # - traefik.http.routers.cvat-ui.rule=Host(\`\${CVAT_HOST:-localhost}\`) 
      - traefik.http.routers.cvat-ui.rule=Host(\`\${CVAT_HOST:-114.114.114.114}\`)
  traefik:
    ports:
      - 8080:8080 # 修改端口
      - 8090:8090
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后step6启动的命令改为</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose -f docker-compose.override.yml up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后在另外一台电脑（系统版本无所谓可以是windows或者linux）的谷歌浏览器中，输入114.114.114.114:8080即可访问。要注意的是，重启或者关闭命令行后，服务自动关闭。但是关闭命令窗口前需要输入step7的关闭命令。</p><h3 id="_2-2-共享目录配置" tabindex="-1"><a class="header-anchor" href="#_2-2-共享目录配置" aria-hidden="true">#</a> 2.2 共享目录配置</h3><p>通常情况下我们创建标注任务，需要自己上传数据或者选择某个硬盘地址的数据。自己上传数据当数据量过大很容易崩溃（大概超过1万张图片就会特别慢），所以大型数据选择某个硬盘地址的数据最靠谱，就是下图中的connected file share。</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[常用工具] cvat安装与使用指北/image/2.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>具体需要修改我们上一步的docker-compose.override.yml文件，一共需要添加两处。</p><p><strong>第一处</strong></p><p>在services/cvat/environment中添加CVAT_SHARE_URL项，内容为&quot;Mounted from {/home/my/data} host directory&quot;。<strong>{}中是你要载入的数据地址，注意修改</strong>。然后services/cvat/volumes中添加cvat_share项，内容为- cvat_share:/home/django/share:r。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>services:

  cvat:
    environment:
      DJANGO_MODWSGI_EXTRA_ARGS: &#39;&#39;
      ALLOWED_HOSTS: &#39;*&#39;
      CVAT_REDIS_HOST: &#39;cvat_redis&#39;
      CVAT_POSTGRES_HOST: &#39;cvat_db&#39;
      CVAT_SHARE_URL: &quot;Mounted from {/home/my/data} host directory&quot; # 新加
    volumes:
      - cvat_data:/home/django/data
      - cvat_keys:/home/django/keys
      - cvat_logs:/home/django/logs
      - cvat_models:/home/django/models
      - cvat_share:/home/django/share:ro # 新加
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第二处</strong></p><p>第二处在volumes下添加cvat_share项目，直接复制下面的命令就行了，注意将volumes/cvat_share/driver_opts/device中的内容改为你要载入的数据地址。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>volumes:
  cvat_db:
  cvat_data:
  cvat_keys:
  cvat_logs:
  cvat_models:
  cvat_share: # 整块新加
    driver_opts:
      type: none
      device: {/home/my/data}
      o: bind
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重启，建立任务时就可以选择硬盘文件路径地址了。</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[常用工具] cvat安装与使用指北/image/3.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-3-标注替换" tabindex="-1"><a class="header-anchor" href="#_2-3-标注替换" aria-hidden="true">#</a> 2.3 标注替换</h3><p>cvat能够通过模型打伪标签，实现自动标注的功能，但是载入模型比较麻烦。个人觉得这个自动标注功能最好不要用，直接本地模型给图像打标注，然后替换标注文件即可。或者你想查看已有标注文件也可以用这种方式。具体如下</p><p><strong>step1 下载标注</strong></p><p>建立图像数据标注任务，然后下载你本地保存同类型的标注，比如我已经有了当前demo任务的pascal标注，我就下载pascal标注。如下图所示：</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[常用工具] cvat安装与使用指北/image/4.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>step2 替换标注文件</strong></p><p>在远程服务器下载标注文件后，会得到一个压缩包，解压压缩包找到标注文件。这些标注文件都是空的，用已有标注文件替换这些标注文件。然后原封不动重新打包压缩整个文件夹。</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[常用工具] cvat安装与使用指北/image/5.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>重新打包后的压缩文件包注意和原来的文件包内容都是一样的，比如原来是a.zip，现在我们上传的压缩包除了标注，其他和a.zip中的内容一样。然后压缩文件夹，我们可以改名为b.zip，但是不能是a.rar。</p><p><strong>step3 上传标注</strong></p><p>我们直接上传上一步的标注压缩包，替换文件就行了。</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[常用工具] cvat安装与使用指北/image/6.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[常用工具] cvat安装与使用指北/image/7.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最后倒入后的标注如下图所示，成功搞定。</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[常用工具] cvat安装与使用指北/image/8.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-4-其他使用" tabindex="-1"><a class="header-anchor" href="#_2-4-其他使用" aria-hidden="true">#</a> 2.4 其他使用</h3><p><strong>用户权限管理</strong></p>`,35),f={href:"https://blog.csdn.net/irving512/article/details/110435730",target:"_blank",rel:"noopener noreferrer"},x=e("p",null,[e("strong",null,"windows下安装cvat")],-1),k={href:"https://blog.csdn.net/qq_38689395/article/details/105771849",target:"_blank",rel:"noopener noreferrer"},y=e("p",null,[e("strong",null,"cvat自动标注")],-1),w={href:"https://docs.onepanel.ai/docs/getting-started/use-cases/computervision/annotation/cvat/cvat_annotation_model",target:"_blank",rel:"noopener noreferrer"},A=e("h2",{id:"_3-参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-参考","aria-hidden":"true"},"#"),a(" 3 参考")],-1),S={href:"https://github.com/openvinotoolkit/cvat/blob/develop/cvat/apps/documentation/installation.md",target:"_blank",rel:"noopener noreferrer"},T={href:"https://blog.csdn.net/dair6/article/details/113730812",target:"_blank",rel:"noopener noreferrer"},C={href:"https://alex007.blog.csdn.net/article/details/107711076",target:"_blank",rel:"noopener noreferrer"},j={href:"https://blog.csdn.net/Castlehe/article/details/107529261",target:"_blank",rel:"noopener noreferrer"},D={href:"https://blog.csdn.net/irving512/article/details/110435730",target:"_blank",rel:"noopener noreferrer"},N={href:"https://blog.csdn.net/qq_38689395/article/details/105771849",target:"_blank",rel:"noopener noreferrer"},O={href:"https://docs.onepanel.ai/docs/getting-started/use-cases/computervision/annotation/cvat/cvat_annotation_model",target:"_blank",rel:"noopener noreferrer"};function V(H,R){const t=r("ExternalLinkIcon");return l(),d("div",null,[c,u,v,e("p",null,[a("安装其实一步一步按照官方教程执行就好了，官方地址文档为"),e("a",p,[a("cvat安装文档"),n(t)]),a("。安装最大的问题就是网速不好。具体步骤如下。")]),m,e("p",null,[a("这一步结束后，就能打开你的cvat网站，但是需要用谷歌浏览器使用。安装过了谷歌浏览器就不用管，没有见安装方法"),e("a",g,[a("ubuntu18.10安装chrome浏览器"),n(t)]),a("。")]),h,e("p",null,[a("cvat的使用具体不多说，官方文档很详细，或者查看文章"),e("a",_,[a("CVAT 用户指南"),n(t)]),a("。本文具体讲几个配置要点。")]),b,e("p",null,[a("比如管理普通用户能否标注，创建任务，可以参考"),e("a",f,[a("CVAT用户管理"),n(t)])]),x,e("p",null,[a("参考"),e("a",k,[a("CVAT windows安装"),n(t)]),a("。但是非常不建议在windows下安装cvat。")]),y,e("p",null,[a("参考"),e("a",w,[a("cvat自动标注"),n(t)]),a("实现cvat加载模型标注数据。cvat自动标注也非常不推荐使用，具体查看2.3。")]),A,e("ul",null,[e("li",null,[e("a",S,[a("cvat安装文档"),n(t)])]),e("li",null,[e("a",T,[a("ubuntu18.10安装chrome浏览器"),n(t)])]),e("li",null,[e("a",C,[a("CVAT 用户指南"),n(t)])]),e("li",null,[e("a",j,[a("Ubuntu18.04 CVAT配置/安装"),n(t)])]),e("li",null,[e("a",D,[a("CVAT用户管理"),n(t)])]),e("li",null,[e("a",N,[a("CVAT windows安装"),n(t)])]),e("li",null,[e("a",O,[a("cvat自动标注"),n(t)])])])])}const z=s(o,[["render",V],["__file","2021-02-10-_常用工具_ cvat安装与使用指北.html.vue"]]);export{z as default};
