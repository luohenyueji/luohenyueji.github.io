import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o as c,c as i,a as n,b as s,d as p,e as t}from"./app-MsA2k2kn.js";const l={},u=t('<h1 id="数据分析与可视化-基于python绘制简单动图" tabindex="-1"><a class="header-anchor" href="#数据分析与可视化-基于python绘制简单动图" aria-hidden="true">#</a> [数据分析与可视化] 基于Python绘制简单动图</h1><p>动画是一种高效的可视化工具，能够提升用户的吸引力和视觉体验，有助于以富有意义的方式呈现数据可视化。本文的主要介绍在Python中两种简单制作动图的方法。其中一种方法是使用matplotlib的Animations模块绘制动图，另一种方法是基于Pillow生成GIF动图。</p><p>[toc]</p><h2 id="_1-animations模块" tabindex="-1"><a class="header-anchor" href="#_1-animations模块" aria-hidden="true">#</a> 1 Animations模块</h2><p>Matplotlib的Animations模块提供了FuncAnimation和ArtistAnimation类来创建matplotlib绘图动画，FuncAnimation和ArtistAnimation都是Animation类的子类。它们的区别在于实现动画的方式和使用场景不同。FuncAnimation适用于根据时间更新图形状态的动画效果，且更加灵活和常用。而ArtistAnimation适用于将已有的静态图像序列组合成动画的效果。具体区别如下：</p><ul><li><p><code>FuncAnimation</code>：FuncAnimation是基于函数的方法来创建动画的。它使用用户提供的一个或多个函数来更新图形的状态，并按照一定的时间间隔连续地调用这些函数，从而实现动画效果。用户需要定义一个更新函数，该函数在每个时间步长上更新图形对象的属性，然后FuncAnimation会根据用户指定的帧数、时间间隔等参数来自动计算动画的帧序列。这种方法适用于需要根据时间变化来更新图形状态的动画效果。</p></li><li><p><code>ArtistAnimation</code>：ArtistAnimation是基于静态图像的方法来创建动画的。它要求用户提供一系列的静态图像，称为艺术家对象。这些图像可以是通过Matplotlib创建的任何类型的可视化对象，例如Figure、Axes、Line2D等。用户需要将这些静态图像存储在一个列表中，然后通过ArtistAnimation来显示这些图像的序列。ArtistAnimation会按照用户指定的时间间隔逐帧地显示这些图像，从而实现动画效果。这种方法适用于已经有一系列静态图像需要组合成动画的场景。</p></li></ul>',6),k={href:"https://matplotlib.org/stable/gallery/animation/index.html",target:"_blank",rel:"noopener noreferrer"},r=t(`<h3 id="_1-1-funcanimation类" tabindex="-1"><a class="header-anchor" href="#_1-1-funcanimation类" aria-hidden="true">#</a> 1.1 FuncAnimation类</h3><p>FuncAnimation构造函数的参数含义如下：</p><ul><li><code>fig</code>：要绘制动画的Figure对象。</li><li><code>func</code>：用于更新每一帧的函数，该函数接受一个参数frame，表示当前待绘制的数据帧。</li><li><code>frames</code>：用于产生待绘制的数据，可以是整数、生成器函数或迭代器。</li><li><code>init_func</code>：在绘制动画之前调用的初始化函数。</li><li><code>fargs</code>：传递给<code>func</code>函数的附加参数（可选）。</li><li><code>save_count</code>：指定动画中缓存的帧数量（可选），默认为100。注意该参数用于确定最后生成动图和视频所用图像的数量。</li><li><code>interval</code>：每一帧之间的时间间隔，以毫秒为单位，默认为200。</li><li><code>repeat</code>：控制动画是否重复播放，默认为True。</li><li><code>repeat_delay</code>：重复动画之间的延迟时间（以毫秒为单位），默认为0。</li><li><code>blit</code>：指定是否使用blitting技术来进行绘制优化，默认为False。</li><li><code>cache_frame_data</code>：指定是否缓存帧数据，默认为True。</li></ul><p><strong>示例-生成动态的正弦波动画</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> itertools
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> animation

<span class="token comment">## 定义生成数据的函数</span>
<span class="token keyword">def</span> <span class="token function">data_gen</span><span class="token punctuation">(</span>max_range<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## 使用itertools.count()生成无限递增的计数器</span>
    <span class="token keyword">for</span> cnt <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">## 当计数器超过最大范围时停止生成数据</span>
        <span class="token keyword">if</span> cnt <span class="token operator">&gt;</span> max_range<span class="token punctuation">:</span>
            <span class="token keyword">break</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>cnt<span class="token punctuation">)</span>
        <span class="token comment">## 计算时间t和对应的y值，使用np.sin()计算sin函数，np.exp()计算指数函数</span>
        t <span class="token operator">=</span> cnt <span class="token operator">/</span> <span class="token number">10</span>
        <span class="token keyword">yield</span> t<span class="token punctuation">,</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">*</span>t<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>t<span class="token operator">/</span><span class="token number">10.</span><span class="token punctuation">)</span>

<span class="token comment">## 初始化函数，设置坐标轴范围和清空数据</span>
<span class="token keyword">def</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    ax<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">del</span> xdata<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    <span class="token keyword">del</span> ydata<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    line<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>xdata<span class="token punctuation">,</span> ydata<span class="token punctuation">)</span>
    <span class="token keyword">return</span> line<span class="token punctuation">,</span>


<span class="token comment">## 创建图形对象以及子图对象</span>
fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">## 创建线条对象</span>
line<span class="token punctuation">,</span> <span class="token operator">=</span> ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">## 创建文本对象用于显示 x 和 y 值</span>
text <span class="token operator">=</span> ax<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.</span><span class="token punctuation">,</span> <span class="token number">0.</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>ax<span class="token punctuation">.</span>transAxes<span class="token punctuation">)</span>
<span class="token comment">## 设置文本位置</span>
text<span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">0.95</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">## 将文本对象添加到图形中</span>
ax<span class="token punctuation">.</span>add_artist<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token punctuation">)</span>
xdata<span class="token punctuation">,</span> ydata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token comment">## 更新函数，将新的数据添加到图形中</span>
<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## 获取传入的数据</span>
    t<span class="token punctuation">,</span> y <span class="token operator">=</span> data
    <span class="token comment">## 将时间和对应的y值添加到xdata和ydata中</span>
    xdata<span class="token punctuation">.</span>append<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
    ydata<span class="token punctuation">.</span>append<span class="token punctuation">(</span>y<span class="token punctuation">)</span>
    <span class="token comment">## 获取当前坐标轴的范围</span>
    xmin<span class="token punctuation">,</span> xmax <span class="token operator">=</span> ax<span class="token punctuation">.</span>get_xlim<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">## 更新文本对象的值</span>
    text<span class="token punctuation">.</span>set_text<span class="token punctuation">(</span><span class="token string">&#39;x = {:.2f}, y = {:.2f}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">## 如果时间t超过当前范围，更新坐标轴范围</span>
    <span class="token keyword">if</span> t <span class="token operator">&gt;=</span> xmax<span class="token punctuation">:</span>
        ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span>xmin<span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>xmax<span class="token punctuation">)</span>
        <span class="token comment">## 重绘图形</span>
        ax<span class="token punctuation">.</span>figure<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>draw<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">## 更新线条的数据</span>
    line<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>xdata<span class="token punctuation">,</span> ydata<span class="token punctuation">)</span>

    <span class="token keyword">return</span> line<span class="token punctuation">,</span> text

<span class="token comment">## 创建动画对象</span>
<span class="token comment">## fig：图形对象</span>
<span class="token comment">## run：更新函数，用于更新图形中的数据</span>
<span class="token comment">## data_gen(20)：生成器函数，产生数据的最大范围为20</span>
<span class="token comment">## interval=100：每帧动画的时间间隔为100毫秒</span>
<span class="token comment">## init_func=init：初始化函数，用于设置图形的初始状态</span>
<span class="token comment">## repeat=True：动画重复播放</span>
ani <span class="token operator">=</span> animation<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> run<span class="token punctuation">,</span> data_gen<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> init_func<span class="token operator">=</span>init<span class="token punctuation">,</span> repeat<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment">## 显示图形</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例-创建动态散点图与折线图</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> animation

<span class="token comment">## 创建一个图形窗口和坐标轴</span>
fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">## 创建时间数组</span>
t <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>

<span class="token comment">## 自由落体加速度</span>
g <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">9.81</span>

<span class="token comment">## 初始速度</span>
v0 <span class="token operator">=</span> <span class="token number">12</span>

<span class="token comment">## 计算高度</span>
z <span class="token operator">=</span> g <span class="token operator">*</span> t<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> v0 <span class="token operator">*</span> t

<span class="token comment">## 第二个初始速度</span>
v02 <span class="token operator">=</span> <span class="token number">5</span>

<span class="token comment">## 计算第二个高度</span>
z2 <span class="token operator">=</span> g <span class="token operator">*</span> t<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> v02 <span class="token operator">*</span> t

<span class="token comment">## 创建散点图</span>
scat <span class="token operator">=</span> ax<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> z<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&#39;v0 = </span><span class="token interpolation"><span class="token punctuation">{</span>v0<span class="token punctuation">}</span></span><span class="token string"> m/s&#39;</span></span><span class="token punctuation">)</span>

<span class="token comment">## 创建线图</span>
line2 <span class="token operator">=</span> ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> z2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&#39;v0 = </span><span class="token interpolation"><span class="token punctuation">{</span>v02<span class="token punctuation">}</span></span><span class="token string"> m/s&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

<span class="token comment">## 设置坐标轴范围和标签</span>
ax<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>xlim<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ylim<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> xlabel<span class="token operator">=</span><span class="token string">&#39;Time [s]&#39;</span><span class="token punctuation">,</span> ylabel<span class="token operator">=</span><span class="token string">&#39;Z [m]&#39;</span><span class="token punctuation">)</span>

<span class="token comment">## 添加图例</span>
ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    x <span class="token operator">=</span> t<span class="token punctuation">[</span><span class="token punctuation">:</span>frame<span class="token punctuation">]</span>
    y <span class="token operator">=</span> z<span class="token punctuation">[</span><span class="token punctuation">:</span>frame<span class="token punctuation">]</span>
    
    <span class="token comment">## 更新散点图</span>
    data <span class="token operator">=</span> np<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>T
    <span class="token comment">## 更新散点图中每个点的位置</span>
    scat<span class="token punctuation">.</span>set_offsets<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    
    <span class="token comment">## 更新线图</span>
    line2<span class="token punctuation">.</span>set_xdata<span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token punctuation">:</span>frame<span class="token punctuation">]</span><span class="token punctuation">)</span>
    line2<span class="token punctuation">.</span>set_ydata<span class="token punctuation">(</span>z2<span class="token punctuation">[</span><span class="token punctuation">:</span>frame<span class="token punctuation">]</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> <span class="token punctuation">(</span>scat<span class="token punctuation">,</span> line2<span class="token punctuation">)</span>

<span class="token comment">## 创建动画</span>
<span class="token comment">## frames为数值表示动画的总帧数，即每次更新参数传入当前帧号</span>
ani <span class="token operator">=</span> animation<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>fig<span class="token operator">=</span>fig<span class="token punctuation">,</span> func<span class="token operator">=</span>update<span class="token punctuation">,</span> frames<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>

<span class="token comment">## 显示图形</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例-贝叶斯更新动画</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">import</span> FuncAnimation

<span class="token comment">## 定义分布概率密度函数</span>
<span class="token keyword">def</span> <span class="token function">beta_pdf</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token punctuation">(</span>a<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token operator">**</span><span class="token punctuation">(</span>b<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> math<span class="token punctuation">.</span>gamma<span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span>
            <span class="token operator">/</span> <span class="token punctuation">(</span>math<span class="token punctuation">.</span>gamma<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">*</span> math<span class="token punctuation">.</span>gamma<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## 更新分布类，用于更新动态图</span>
<span class="token keyword">class</span> <span class="token class-name">UpdateDist</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> ax<span class="token punctuation">,</span> prob<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>success <span class="token operator">=</span> <span class="token number">0</span>
        self<span class="token punctuation">.</span>prob <span class="token operator">=</span> prob
        self<span class="token punctuation">.</span>line<span class="token punctuation">,</span> <span class="token operator">=</span> ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;k-&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>ax <span class="token operator">=</span> ax

        <span class="token comment">## 设置图形参数</span>
        self<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>

        <span class="token comment">## 这条竖直线代表了理论值，图中的分布应该趋近于这个值</span>
        self<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>axvline<span class="token punctuation">(</span>prob<span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">&#39;--&#39;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;black&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">## 这样图形可以连续运行，我们只需不断观察过程的新实现</span>
        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>success <span class="token operator">=</span> <span class="token number">0</span>
            self<span class="token punctuation">.</span>line<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> self<span class="token punctuation">.</span>line<span class="token punctuation">,</span>

        <span class="token comment">## 根据超过阈值与均匀选择来选择成功</span>
        <span class="token keyword">if</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>prob<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>success <span class="token operator">+=</span> <span class="token number">1</span>
        y <span class="token operator">=</span> beta_pdf<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">,</span> self<span class="token punctuation">.</span>success <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> self<span class="token punctuation">.</span>success<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>line<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>line<span class="token punctuation">,</span>

<span class="token comment">## 设置随机状态以便再现结果</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment">## 创建图形和坐标轴对象</span>
fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">## 创建更新分布对象，并应该收敛到的理论值为0.7</span>
ud <span class="token operator">=</span> UpdateDist<span class="token punctuation">(</span>ax<span class="token punctuation">,</span> prob<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">)</span>

<span class="token comment">## 创建动画对象</span>
anim <span class="token operator">=</span> FuncAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> ud<span class="token punctuation">,</span> frames<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>
                     blit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> repeat_delay<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>

<span class="token comment">## 显示动画</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例-模拟雨滴</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">import</span> FuncAnimation

<span class="token comment">## 设置随机种子以确保可复现性</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment">## 创建画布和坐标轴对象</span>
fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">## 在画布上添加一个坐标轴对象。</span>
<span class="token comment">## [0, 0, 1, 1]参数指定了坐标轴的位置和大小，分别表示左下角的 x 坐标、左下角的 y 坐标、宽度和高度。</span>
<span class="token comment">## frameon=False参数表示不显示坐标轴的边框</span>
ax <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> frameon<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ax<span class="token punctuation">.</span>set_xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ax<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">## 创建雨滴数据</span>
n_drops <span class="token operator">=</span> <span class="token number">50</span>
rain_drops <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>n_drops<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;position&#39;</span><span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                      <span class="token punctuation">(</span><span class="token string">&#39;size&#39;</span><span class="token punctuation">,</span>     <span class="token builtin">float</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                      <span class="token punctuation">(</span><span class="token string">&#39;growth&#39;</span><span class="token punctuation">,</span>   <span class="token builtin">float</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                      <span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">,</span>    <span class="token builtin">float</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">## 随机初始化雨滴的位置和生长速率</span>
rain_drops<span class="token punctuation">[</span><span class="token string">&#39;position&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>n_drops<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
rain_drops<span class="token punctuation">[</span><span class="token string">&#39;growth&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> n_drops<span class="token punctuation">)</span>

<span class="token comment">## 创建散点图对象，用于在动画中更新雨滴的状态</span>
scat <span class="token operator">=</span> ax<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>rain_drops<span class="token punctuation">[</span><span class="token string">&#39;position&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rain_drops<span class="token punctuation">[</span><span class="token string">&#39;position&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  s<span class="token operator">=</span>rain_drops<span class="token punctuation">[</span><span class="token string">&#39;size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> edgecolors<span class="token operator">=</span>rain_drops<span class="token punctuation">[</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  facecolors<span class="token operator">=</span><span class="token string">&#39;none&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>frame_number<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## 获取一个索引，用于重新生成最旧的雨滴</span>
    current_index <span class="token operator">=</span> frame_number <span class="token operator">%</span> n_drops

    <span class="token comment">## 随着时间的推移，使所有雨滴的颜色更加透明</span>
    rain_drops<span class="token punctuation">[</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1.0</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>rain_drops<span class="token punctuation">)</span>
    rain_drops<span class="token punctuation">[</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>rain_drops<span class="token punctuation">[</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token comment">## 所有雨滴变大</span>
    rain_drops<span class="token punctuation">[</span><span class="token string">&#39;size&#39;</span><span class="token punctuation">]</span> <span class="token operator">+=</span> rain_drops<span class="token punctuation">[</span><span class="token string">&#39;growth&#39;</span><span class="token punctuation">]</span>

    <span class="token comment">## 为最旧的雨滴选择一个新的位置，重置其大小、颜色和生长速率</span>
    rain_drops<span class="token punctuation">[</span><span class="token string">&#39;position&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>current_index<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    rain_drops<span class="token punctuation">[</span><span class="token string">&#39;size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>current_index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span>
    rain_drops<span class="token punctuation">[</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>current_index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    rain_drops<span class="token punctuation">[</span><span class="token string">&#39;growth&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>current_index<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>

    <span class="token comment">## 使用新的颜色、大小和位置更新散点图对象</span>
    scat<span class="token punctuation">.</span>set_edgecolors<span class="token punctuation">(</span>rain_drops<span class="token punctuation">[</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    scat<span class="token punctuation">.</span>set_sizes<span class="token punctuation">(</span>rain_drops<span class="token punctuation">[</span><span class="token string">&#39;size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    scat<span class="token punctuation">.</span>set_offsets<span class="token punctuation">(</span>rain_drops<span class="token punctuation">[</span><span class="token string">&#39;position&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">## 创建动画，并将update函数作为动画的回调函数</span>
animation <span class="token operator">=</span> FuncAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> update<span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> save_count<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例-跨子图动画</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> animation
<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>patches <span class="token keyword">import</span> ConnectionPatch

<span class="token comment">## 创建一个包含左右两个子图的图形对象</span>
fig<span class="token punctuation">,</span> <span class="token punctuation">(</span>axl<span class="token punctuation">,</span> axr<span class="token punctuation">)</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>
    ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">## 指定一行中子图的列数为2，即创建两个子图</span>
    sharey<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token comment">## 共享y轴刻度</span>
    figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
    <span class="token comment">## width_ratios=[1, 3]指定第二个子图的宽度为第一个子图的三倍</span>
    <span class="token comment">## wspace=0 设置子图之间的水平间距为0</span>
    gridspec_kw<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>width_ratios<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> wspace<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
<span class="token punctuation">)</span>

<span class="token comment">## 设置左侧子图纵横比为1，即使得它的宽度和高度相等</span>
axl<span class="token punctuation">.</span>set_aspect<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">## 设置右侧子图纵横比为1/3，即高度是宽度的三分之一</span>
axr<span class="token punctuation">.</span>set_box_aspect<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span>

<span class="token comment">## 右子图不显示y轴刻度</span>
axr<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment">## 设置右子图x轴刻度以及对应的标签</span>
axr<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_ticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token string">r&quot;$\\pi$&quot;</span><span class="token punctuation">,</span> <span class="token string">r&quot;$2\\pi$&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">## 在左子图上绘制圆</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
axl<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;k&quot;</span><span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">)</span>

<span class="token comment">## 在左子图上绘制初始点</span>
point<span class="token punctuation">,</span> <span class="token operator">=</span> axl<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;o&quot;</span><span class="token punctuation">)</span>

<span class="token comment">## 在右子图上绘制完整的正弦曲线，以设置视图限制</span>
sine<span class="token punctuation">,</span> <span class="token operator">=</span> axr<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## 绘制连接两个图表的连线</span>
con <span class="token operator">=</span> ConnectionPatch<span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">## 连接线的起始点坐标</span>
    <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">## 连接线的终点坐标</span>
    <span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span>
    axesA<span class="token operator">=</span>axl<span class="token punctuation">,</span> <span class="token comment">## 指定连接线的起始点所在的坐标轴</span>
    axesB<span class="token operator">=</span>axr<span class="token punctuation">,</span> <span class="token comment">## 指定连接线的终点所在的坐标轴</span>
    color<span class="token operator">=</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> 
    ls<span class="token operator">=</span><span class="token string">&quot;dotted&quot;</span><span class="token punctuation">,</span> <span class="token comment">## 连接线类型</span>
<span class="token punctuation">)</span>
fig<span class="token punctuation">.</span>add_artist<span class="token punctuation">(</span>con<span class="token punctuation">)</span>

<span class="token comment">## 定义动画函数</span>
<span class="token keyword">def</span> <span class="token function">animate</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>
    x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">25</span> <span class="token operator">/</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">)</span><span class="token punctuation">)</span>
    sine<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>x<span class="token punctuation">,</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
    x<span class="token punctuation">,</span> y <span class="token operator">=</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    point<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span>
    con<span class="token punctuation">.</span>xy1 <span class="token operator">=</span> x<span class="token punctuation">,</span> y
    con<span class="token punctuation">.</span>xy2 <span class="token operator">=</span> i<span class="token punctuation">,</span> y
    <span class="token keyword">return</span> point<span class="token punctuation">,</span> sine<span class="token punctuation">,</span> con

<span class="token comment">## 创建动画对象</span>
ani <span class="token operator">=</span> animation<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>
    fig<span class="token punctuation">,</span>
    animate<span class="token punctuation">,</span>
    interval<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span>  
    blit<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>   <span class="token comment">## 不使用blitting技术，这里Figure artists不支持blitting</span>
    frames<span class="token operator">=</span>x<span class="token punctuation">,</span>     
    repeat_delay<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>  <span class="token comment">## 动画重复播放延迟100毫秒</span>
<span class="token punctuation">)</span>

<span class="token comment">## 展示动画</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例-动态示波器</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> animation
<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>lines <span class="token keyword">import</span> Line2D

<span class="token comment">## 创建一个 Scope 类用于绘制动态图形</span>
<span class="token keyword">class</span> <span class="token class-name">Scope</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> ax<span class="token punctuation">,</span> maxt<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> dt<span class="token operator">=</span><span class="token number">0.02</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        :param ax: Matplotlib 的坐标轴对象
        :param maxt: 时间的最大值，默认为2
        :param dt: 时间步长，默认为0.02
        &quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>ax <span class="token operator">=</span> ax
        self<span class="token punctuation">.</span>dt <span class="token operator">=</span> dt
        self<span class="token punctuation">.</span>maxt <span class="token operator">=</span> maxt
        self<span class="token punctuation">.</span>tdata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">## 时间数据的列表</span>
        self<span class="token punctuation">.</span>ydata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">## y轴数据的列表</span>
        self<span class="token punctuation">.</span>line <span class="token operator">=</span> Line2D<span class="token punctuation">(</span>self<span class="token punctuation">.</span>tdata<span class="token punctuation">,</span> self<span class="token punctuation">.</span>ydata<span class="token punctuation">)</span>  <span class="token comment">## 创建一条线对象</span>
        self<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>add_line<span class="token punctuation">(</span>self<span class="token punctuation">.</span>line<span class="token punctuation">)</span>  <span class="token comment">## 将线对象添加到坐标轴上</span>
        self<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">.1</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">)</span>  <span class="token comment">## 设置y轴范围</span>
        self<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>maxt<span class="token punctuation">)</span>  <span class="token comment">## 设置x轴范围</span>

    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        更新图形数据
        :param y: 新的y轴数据
        :return: 更新后的线对象
        &quot;&quot;&quot;</span>
        lastt <span class="token operator">=</span> self<span class="token punctuation">.</span>tdata<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> lastt <span class="token operator">&gt;=</span> self<span class="token punctuation">.</span>tdata<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>maxt<span class="token punctuation">:</span>  <span class="token comment">## 如果当前时间超过了最大时间，重新设置数组</span>
            self<span class="token punctuation">.</span>tdata <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>tdata<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
            self<span class="token punctuation">.</span>ydata <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>ydata<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
            self<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span>self<span class="token punctuation">.</span>tdata<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>tdata<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>maxt<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>figure<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>draw<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment">## 进行时间的计算</span>
        t <span class="token operator">=</span> self<span class="token punctuation">.</span>tdata<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>tdata<span class="token punctuation">)</span> <span class="token operator">*</span> self<span class="token punctuation">.</span>dt

        self<span class="token punctuation">.</span>tdata<span class="token punctuation">.</span>append<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>ydata<span class="token punctuation">.</span>append<span class="token punctuation">(</span>y<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>line<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>self<span class="token punctuation">.</span>tdata<span class="token punctuation">,</span> self<span class="token punctuation">.</span>ydata<span class="token punctuation">)</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>line<span class="token punctuation">,</span>

<span class="token keyword">def</span> <span class="token function">emitter</span><span class="token punctuation">(</span>p<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;以概率p（范围为[0, 1)）返回一个随机值，否则返回0&quot;&quot;&quot;</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        v <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> v <span class="token operator">&gt;</span> p<span class="token punctuation">:</span>
            <span class="token keyword">yield</span> <span class="token number">0.</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">yield</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span>

np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">## 创建一个图形窗口和一对坐标轴</span>
scope <span class="token operator">=</span> Scope<span class="token punctuation">(</span>ax<span class="token punctuation">)</span>  <span class="token comment">## 创建一个Scope对象，用于绘制动态图</span>

<span class="token comment">## 使用scope的类函数update作为更新函数</span>
ani <span class="token operator">=</span> animation<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> scope<span class="token punctuation">.</span>update<span class="token punctuation">,</span> emitter<span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> blit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> save_count<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例-世界主要城市的人口数量动态展示</strong></p>`,16),d={href:"https://www.geeksforgeeks.org/how-to-create-animations-in-python/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/dexplo/bar_chart_race",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/JackMcKew/pandas_alive",target:"_blank",rel:"noopener noreferrer"},b=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd 
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>ticker <span class="token keyword">as</span> ticker 
<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">import</span> FuncAnimation  
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>patches <span class="token keyword">as</span> mpatches 

<span class="token comment">## 定义一个函数，用于生成颜色列表</span>
<span class="token keyword">def</span> <span class="token function">generate_colors</span><span class="token punctuation">(</span>string_list<span class="token punctuation">)</span><span class="token punctuation">:</span>
    num_colors <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>string_list<span class="token punctuation">)</span>
    <span class="token comment">## 使用tab10调色板，可以根据需要选择不同的调色板</span>
    colormap <span class="token operator">=</span> plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>get_cmap<span class="token punctuation">(</span><span class="token string">&#39;tab10&#39;</span><span class="token punctuation">,</span> num_colors<span class="token punctuation">)</span>

    colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>num_colors<span class="token punctuation">)</span><span class="token punctuation">:</span>
        color <span class="token operator">=</span> colormap<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        colors<span class="token punctuation">.</span>append<span class="token punctuation">(</span>color<span class="token punctuation">)</span>

    <span class="token keyword">return</span> colors

<span class="token comment">## 读取CSV文件，并选择所需的列</span>
<span class="token comment">## 数据地址：https://media.geeksforgeeks.org/wp-content/cdn-uploads/20210901121516/city_populations.csv</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;city_populations.csv&#39;</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">[</span>
                 <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;group&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;year&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">## 将年份列转换为整数型</span>
df<span class="token punctuation">[</span><span class="token string">&#39;year&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;year&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token comment">## 将人口数量列转换为浮点型</span>
df<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">)</span>

<span class="token comment">## 获取城市分组列表</span>
group <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>group<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## 生成城市分组对应的颜色字典</span>
group_clolor <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> generate_colors<span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## 创建城市名称与分组的字典</span>
group_name <span class="token operator">=</span> df<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;group&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to_dict<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token comment">## 定义绘制柱状图的函数</span>
<span class="token keyword">def</span> <span class="token function">draw_barchart</span><span class="token punctuation">(</span>year<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## 根据年份筛选数据，并按人口数量进行降序排序，取出最大范围的数据</span>
    df_year <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;year&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>eq<span class="token punctuation">(</span>year<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>
        by<span class="token operator">=</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>tail<span class="token punctuation">(</span>max_range<span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">## 绘制水平柱状图，并设置颜色</span>
    ax<span class="token punctuation">.</span>barh<span class="token punctuation">(</span>df_year<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df_year<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">[</span>
            group_clolor<span class="token punctuation">[</span>group_name<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> df_year<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    
    <span class="token comment">## 在柱状图上方添加文字标签</span>
    dx <span class="token operator">=</span> df_year<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">200</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>df_year<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df_year<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">## 城市名</span>
        ax<span class="token punctuation">.</span>text<span class="token punctuation">(</span>value<span class="token operator">-</span>dx<span class="token punctuation">,</span> i<span class="token punctuation">,</span> name<span class="token punctuation">,</span>
                size<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> weight<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">,</span>
                ha<span class="token operator">=</span><span class="token string">&#39;right&#39;</span><span class="token punctuation">,</span> va<span class="token operator">=</span><span class="token string">&#39;bottom&#39;</span><span class="token punctuation">)</span>
        ax<span class="token punctuation">.</span>text<span class="token punctuation">(</span>value<span class="token operator">-</span>dx<span class="token punctuation">,</span> i<span class="token operator">-</span><span class="token number">0.25</span><span class="token punctuation">,</span> group_name<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">,</span>
                size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;#333333&#39;</span><span class="token punctuation">,</span>
                ha<span class="token operator">=</span><span class="token string">&#39;right&#39;</span><span class="token punctuation">,</span> va<span class="token operator">=</span><span class="token string">&#39;baseline&#39;</span><span class="token punctuation">)</span>
        <span class="token comment">## 地区名</span>
        ax<span class="token punctuation">.</span>text<span class="token punctuation">(</span>value<span class="token operator">+</span>dx<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>value<span class="token punctuation">:</span><span class="token format-spec">,.0f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
                size<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>  va<span class="token operator">=</span><span class="token string">&#39;center&#39;</span><span class="token punctuation">)</span>

    <span class="token comment">## 设置其他样式</span>
    ax<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> year<span class="token punctuation">,</span> transform<span class="token operator">=</span>ax<span class="token punctuation">.</span>transAxes<span class="token punctuation">,</span>
            color<span class="token operator">=</span><span class="token string">&#39;#777777&#39;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">46</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">&#39;right&#39;</span><span class="token punctuation">,</span>
            weight<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1.06</span><span class="token punctuation">,</span> <span class="token string">&#39;Population (thousands)&#39;</span><span class="token punctuation">,</span>
            transform<span class="token operator">=</span>ax<span class="token punctuation">.</span>transAxes<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span>
            color<span class="token operator">=</span><span class="token string">&#39;#777777&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">## 添加图例</span>
    handles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> name<span class="token punctuation">,</span> color <span class="token keyword">in</span> group_clolor<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        patch <span class="token operator">=</span> mpatches<span class="token punctuation">.</span>Patch<span class="token punctuation">(</span>color<span class="token operator">=</span>color<span class="token punctuation">,</span> label<span class="token operator">=</span>name<span class="token punctuation">)</span>
        handles<span class="token punctuation">.</span>append<span class="token punctuation">(</span>patch<span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>handles<span class="token operator">=</span>handles<span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span> bbox_to_anchor<span class="token operator">=</span><span class="token punctuation">(</span>
        <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.03</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ncol<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>group_clolor<span class="token punctuation">)</span><span class="token punctuation">,</span> frameon<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    
    <span class="token comment">## x轴的主要刻度格式化，不保留小数</span>
    ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_major_formatter<span class="token punctuation">(</span>ticker<span class="token punctuation">.</span>StrMethodFormatter<span class="token punctuation">(</span><span class="token string">&#39;{x:,.0f}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">## 将x轴的刻度位置设置在图的顶部</span>
    ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_ticks_position<span class="token punctuation">(</span><span class="token string">&#39;top&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">## 设置x轴的刻度颜色为灰色(#777777)，字体大小为16</span>
    ax<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> colors<span class="token operator">=</span><span class="token string">&#39;#777777&#39;</span><span class="token punctuation">,</span> labelsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>
    <span class="token comment">## 清除y轴的刻度标签</span>
    ax<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment">## 在x轴和y轴上设置0.01的边距</span>
    ax<span class="token punctuation">.</span>margins<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>
    <span class="token comment">## 在x轴上绘制主要网格线，线条样式为实线</span>
    ax<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>which<span class="token operator">=</span><span class="token string">&#39;major&#39;</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">## 设置网格线绘制在图像下方</span>
    ax<span class="token punctuation">.</span>set_axisbelow<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token comment">## 添加绘图信息</span>
    ax<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1.10</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;The </span><span class="token interpolation"><span class="token punctuation">{</span>max_range<span class="token punctuation">}</span></span><span class="token string"> most populous cities in the world from </span><span class="token interpolation"><span class="token punctuation">{</span>start_year<span class="token punctuation">}</span></span><span class="token string"> to </span><span class="token interpolation"><span class="token punctuation">{</span>end_year<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
            transform<span class="token operator">=</span>ax<span class="token punctuation">.</span>transAxes<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">24</span><span class="token punctuation">,</span> weight<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>

    ax<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;Produced by luohenyueji&#39;</span><span class="token punctuation">,</span>
            transform<span class="token operator">=</span>ax<span class="token punctuation">.</span>transAxes<span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">&#39;right&#39;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;#777777&#39;</span><span class="token punctuation">,</span>
            bbox<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>facecolor<span class="token operator">=</span><span class="token string">&#39;white&#39;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">&#39;white&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>box<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>


<span class="token comment">## 创建绘图所需的figure和axes</span>
fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
start_year <span class="token operator">=</span> <span class="token number">2000</span>
end_year <span class="token operator">=</span> <span class="token number">2020</span>
<span class="token comment">## 设置最多显示城市数量</span>
max_range <span class="token operator">=</span> <span class="token number">15</span>

<span class="token comment">## 获取数据中的最小年份和最大年份，并进行校验</span>
min_year<span class="token punctuation">,</span> max_year <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> min_year <span class="token operator">&lt;=</span> start_year<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;end_year cannot be lower than </span><span class="token interpolation"><span class="token punctuation">{</span>min_year<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
<span class="token keyword">assert</span> end_year <span class="token operator">&lt;=</span> max_year<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;end_year cannot be higher  than </span><span class="token interpolation"><span class="token punctuation">{</span>max_year<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>

<span class="token comment">## 创建动画对象，调用draw_barchart函数进行绘制</span>
ani <span class="token operator">=</span> FuncAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> draw_barchart<span class="token punctuation">,</span> frames<span class="token operator">=</span><span class="token builtin">range</span><span class="token punctuation">(</span>
    start_year<span class="token punctuation">,</span> end_year<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> repeat_delay<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>
fig<span class="token punctuation">.</span>subplots_adjust<span class="token punctuation">(</span>left<span class="token operator">=</span><span class="token number">0.04</span><span class="token punctuation">,</span> right<span class="token operator">=</span><span class="token number">0.94</span><span class="token punctuation">,</span> bottom<span class="token operator">=</span><span class="token number">0.05</span><span class="token punctuation">)</span>

<span class="token comment">## 显示图形</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下:</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/Python-Study-Notes/Data Analysis/[数据分析与可视化] 基于Python绘制简单动图/image/img1.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-2-artistanimation类" tabindex="-1"><a class="header-anchor" href="#_1-2-artistanimation类" aria-hidden="true">#</a> 1.2 ArtistAnimation类</h3><p>ArtistAnimation构造函数的参数含义如下：</p><ul><li><code>fig</code>：要绘制动画的Figure对象。</li><li><code>artists</code>：包含了一系列绘图对象的列表，这些绘图对象将被作为动画的帧。</li><li><code>interval</code>：每一帧之间的时间间隔，以毫秒为单位，默认为200。</li><li><code>repeat</code>：控制动画是否重复播放，默认为True。</li><li><code>repeat_delay</code>：重复动画之间的延迟时间（以毫秒为单位），默认为0。</li><li><code>blit</code>：指定是否使用blitting技术来进行绘制优化，默认为False。</li></ul><p><strong>示例-ArtistAnimation简单使用</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> animation

fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">## 定义函数 f(x, y)，返回 np.sin(x) + np.cos(y)</span>
<span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>y<span class="token punctuation">)</span>

<span class="token comment">## 生成 x 和 y 的取值范围</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment">## ims 是一个列表的列表，每一行是当前帧要绘制的艺术品列表；</span>
<span class="token comment">## 在这里我们只在每一帧动画中绘制一个艺术家，即图像</span>
ims <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token comment">## 循环生成动画的每一帧，并存入一个列表</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## 更新 x 和 y 的取值</span>
    x <span class="token operator">+=</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">15</span>
    y <span class="token operator">+=</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">30</span>
    <span class="token comment">## 调用函数 f(x, y)，并绘制其返回的图像</span>
    im <span class="token operator">=</span> ax<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>f<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> animated<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token comment">## 首先显示一个初始的图像</span>
        ax<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>f<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">## 将当前帧添加到ims中</span>
    ims<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>im<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">## 基于ims中的绘图对象绘制动图</span>
ani <span class="token operator">=</span> animation<span class="token punctuation">.</span>ArtistAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> ims<span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> blit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                                repeat_delay<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>

<span class="token comment">## 显示动画</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例-创建动态柱状图</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt  
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> animation  

fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span> 
rng <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>default_rng<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> 
<span class="token comment">## ## 创建一个包含5个元素的数组，表示数据集</span>
data <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  
<span class="token comment">## 创建一个包含5个字符串的列表，表示数据集的标签</span>
x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;E&quot;</span><span class="token punctuation">]</span>  

<span class="token comment">## 创建一个空列表，用于存储图形对象</span>
artists <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  
<span class="token comment">## 创建一个包含5个颜色值的列表，用于绘制图形</span>
colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;tab:blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tab:red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tab:green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tab:purple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tab:orange&#39;</span><span class="token punctuation">]</span>  

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## 随机生成一个与data形状相同的数组，并将其加到data中</span>
    data <span class="token operator">+=</span> rng<span class="token punctuation">.</span>integers<span class="token punctuation">(</span>low<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> high<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> size<span class="token operator">=</span>data<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>  
    <span class="token comment">## 创建一个水平条形图，并设置颜色</span>
    container <span class="token operator">=</span> ax<span class="token punctuation">.</span>barh<span class="token punctuation">(</span>x<span class="token punctuation">,</span> data<span class="token punctuation">,</span> color<span class="token operator">=</span>colors<span class="token punctuation">)</span>
    <span class="token comment">## 设置x轴范围</span>
    ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">)</span>
    <span class="token comment">## 将创建的图形对象添加到列表中</span>
    artists<span class="token punctuation">.</span>append<span class="token punctuation">(</span>container<span class="token punctuation">)</span>  

<span class="token comment">## 创建一个ArtistAnimation对象，指定图形窗口和图形对象列表以及动画间隔时间</span>
ani <span class="token operator">=</span> animation<span class="token punctuation">.</span>ArtistAnimation<span class="token punctuation">(</span>fig<span class="token operator">=</span>fig<span class="token punctuation">,</span> artists<span class="token operator">=</span>artists<span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span> 
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-动画保存" tabindex="-1"><a class="header-anchor" href="#_1-3-动画保存" aria-hidden="true">#</a> 1.3 动画保存</h3><p>Matplotlib通过plot方法创建和显示动画。为了保存动画为动图或视频，Animation类提供了save函数。save函数的常见参数如下：</p><ul><li><code>filename</code>：保存文件的路径和名称。</li><li><code>writer</code>：指定要使用的写入器（Writer）。如果未指定，则默认使用ffmpeg写入器。</li><li><code>fps</code>：设置帧速率（每秒显示多少帧），默认值为None，表示使用Animation对象中的interval属性作为帧速率。</li><li><code>dpi</code>：设置输出图像的分辨率，默认值为None，表示使用系统默认值。</li><li><code>codec</code>：指定视频编解码器，仅当writer为ffmpeg_writer时有效。</li><li><code>bitrate</code>：设置比特率，仅当writer为ffmpeg_writer时有效。</li><li><code>extra_args</code>：用于传递给写入器的额外参数。</li><li><code>metadata</code>：包含文件元数据的字典。</li><li><code>extra_anim</code>：与主要动画同时播放的其他动画。</li><li><code>savefig_kwargs</code>：传递给savefig()的关键字参数。</li><li><code>progress_callback</code>：用于在保存过程中更新进度的回调函数。</li></ul><p>writer写入器可以指定使用各种多媒体写入程序（例如：Pillow、ffpmeg、imagemagik）保存到本地，如下所示：</p><table><thead><tr><th>Writer</th><th>Supported Formats</th></tr></thead><tbody><tr><td><code>~matplotlib.animation.PillowWriter</code></td><td>.gif, .apng, .webp</td></tr><tr><td><code>~matplotlib.animation.HTMLWriter</code></td><td>.htm, .html, .png</td></tr><tr><td><code>~matplotlib.animation.FFMpegWriter</code></td><td>All formats supported by ffmpeg: ffmpeg -formats</td></tr><tr><td><code>~matplotlib.animation.ImageMagickWriter</code></td><td>All formats supported by imagemagick: magick -list format</td></tr></tbody></table><p>保存动图和视频的代码如下:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 动图</span>
ani<span class="token punctuation">.</span>save<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">&quot;pillow_example.gif&quot;</span><span class="token punctuation">,</span> writer<span class="token operator">=</span><span class="token string">&quot;pillow&quot;</span><span class="token punctuation">)</span>
ani<span class="token punctuation">.</span>save<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">&quot;pillow_example.apng&quot;</span><span class="token punctuation">,</span> writer<span class="token operator">=</span><span class="token string">&quot;pillow&quot;</span><span class="token punctuation">)</span>

<span class="token comment">## 视频，需要安装ffmpeg</span>
ani<span class="token punctuation">.</span>save<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">&quot;ffmpeg_example.mkv&quot;</span><span class="token punctuation">,</span> writer<span class="token operator">=</span><span class="token string">&quot;ffmpeg&quot;</span><span class="token punctuation">)</span>
ani<span class="token punctuation">.</span>save<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">&quot;ffmpeg_example.mp4&quot;</span><span class="token punctuation">,</span> writer<span class="token operator">=</span><span class="token string">&quot;ffmpeg&quot;</span><span class="token punctuation">)</span>
ani<span class="token punctuation">.</span>save<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">&quot;ffmpeg_example.mjpeg&quot;</span><span class="token punctuation">,</span> writer<span class="token operator">=</span><span class="token string">&quot;ffmpeg&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是动图构建对象时所设置的参数不会影响save函数，如下所示，在FuncAnimation中设置repeat=False，即动图只播放一次。但是保存的gif文件却循环播放。这是因为save函数调用了其他第三库的动图或者视频保持函数，需要重新设置参数。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">import</span> FuncAnimation

<span class="token comment">## 创建画布和坐标轴</span>
fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>
xdata<span class="token punctuation">,</span> ydata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
ln<span class="token punctuation">,</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;r-&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> ln<span class="token punctuation">,</span>


<span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    y <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x <span class="token operator">+</span> frame<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span>
    ln<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    <span class="token keyword">return</span> ln<span class="token punctuation">,</span>


<span class="token comment">## 创建动画对象</span>
ani <span class="token operator">=</span> FuncAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> update<span class="token punctuation">,</span> frames<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>
                    init_func<span class="token operator">=</span>init<span class="token punctuation">,</span> blit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> repeat<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

ani<span class="token punctuation">.</span>save<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">&quot;pillow_example.gif&quot;</span><span class="token punctuation">,</span> writer<span class="token operator">=</span>writer<span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要解决保存动画问题，需要自定义动画保存类，如下所示：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">import</span> FuncAnimation
<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> animation

<span class="token comment">## 创建画布和坐标轴</span>
fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>
xdata<span class="token punctuation">,</span> ydata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
ln<span class="token punctuation">,</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;r-&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> ln<span class="token punctuation">,</span>


<span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span><span class="token punctuation">:</span>
    x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    y <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x <span class="token operator">+</span> frame<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span>
    ln<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    <span class="token keyword">return</span> ln<span class="token punctuation">,</span>


<span class="token comment">## 创建动画对象</span>
ani <span class="token operator">=</span> FuncAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> update<span class="token punctuation">,</span> frames<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>
                    init_func<span class="token operator">=</span>init<span class="token punctuation">,</span> blit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> repeat<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment">## 创建自定义的动画写入类</span>
<span class="token keyword">class</span> <span class="token class-name">SubPillowWriter</span><span class="token punctuation">(</span>animation<span class="token punctuation">.</span>PillowWriter<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> loop<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
        <span class="token comment">## 将loop设置为0，表示无限循环播放；如果设置为一个大于0的数值，表示循环播放指定次数</span>
        self<span class="token punctuation">.</span>loop <span class="token operator">=</span> loop

    <span class="token comment">## 定义播放结束时，保存图片的代码</span>
    <span class="token keyword">def</span> <span class="token function">finish</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">## 调用了pillow包</span>
        self<span class="token punctuation">.</span>_frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>self<span class="token punctuation">.</span>outfile<span class="token punctuation">,</span> save_all<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> append_images<span class="token operator">=</span>self<span class="token punctuation">.</span>_frames<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>
            <span class="token number">1000</span> <span class="token operator">/</span> self<span class="token punctuation">.</span>fps<span class="token punctuation">)</span><span class="token punctuation">,</span> loop<span class="token operator">=</span>self<span class="token punctuation">.</span>loop<span class="token punctuation">)</span>


<span class="token comment">## 创建动画写入对象</span>
<span class="token comment">## fps=15：每秒帧数，表示动画的播放速度为每秒 15 帧。</span>
<span class="token comment">## metadata=dict(artist=&#39;luohenyueji&#39;)：元数据信息，包括艺术家信息，将被添加到生成的GIF文件中。</span>
writer <span class="token operator">=</span> SubPillowWriter<span class="token punctuation">(</span>fps<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span> metadata<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>artist<span class="token operator">=</span><span class="token string">&#39;luohenyueji&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ani<span class="token punctuation">.</span>save<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">&quot;pillow_example.gif&quot;</span><span class="token punctuation">,</span> writer<span class="token operator">=</span>writer<span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-基于pillow库生成动图" tabindex="-1"><a class="header-anchor" href="#_2-基于pillow库生成动图" aria-hidden="true">#</a> 2 基于Pillow库生成动图</h2><p>使用Pillow库生成动图非常简单。首先，准备一个包含一系列图像帧的列表。这些图像帧可以是连续的图片，每张图片表示动画的一个时间点。接下来，使用Pillow库中的save()方法将这些图像帧保存为一个gif文件。在保存动图时，还可以设置一些参数来控制动画效果。参考以下示例，可获取具体的使用说明。</p><p><strong>示例-滑动动图</strong></p><p>该示例展示了一种图像滑动展示的动画效果，即通过滑动渐变的方式逐步将起始黑白图片转变为目标彩色图片。所示起始图片和目标图片如下所示：</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/Python-Study-Notes/Data Analysis/[数据分析与可视化] 基于Python绘制简单动图/image/img2.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/Python-Study-Notes/Data Analysis/[数据分析与可视化] 基于Python绘制简单动图/image/img3.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>动画结果如下所示：</p><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/Python-Study-Notes/Data Analysis/[数据分析与可视化] 基于Python绘制简单动图/image/img4.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>本示例所提供代码主要可调参数介绍如下：</p><ul><li><p><code>span</code> (int): 分割步长，默认为100。此参数用于控制图片合并过程中的分割步长，即每次移动的距离。</p></li><li><p><code>save</code> (bool): 是否保存中间帧图像，默认为False。如果设置为True，则会将生成的每一帧图像保存到指定的文件夹中。</p></li><li><p><code>orient</code> (str): 合并方向，默认水平。可选值为&#39;horizontal&#39;（水平方向）或&#39;vertical&#39;（垂直方向）。用于控制图像的合并方向。</p></li><li><p><code>loop</code> (int): 循环次数，默认为0（无限循环）。设置为正整数时，动画会循环播放指定次数；设置为0时，动画会无限循环播放。</p></li><li><p><code>duration</code> (int): 帧持续时间（毫秒），默认为100。用于设置每一帧图像在动画中的显示时间。</p></li><li><p><code>repeat_delay</code> (int): 循环之间的延迟时间（毫秒），默认为500。用于设置每次循环之间的延迟时间。</p></li><li><p><code>save_name</code> (str): 保存动画的文件名，默认为&quot;output&quot;。用于设置生成的动画文件的名称。</p></li></ul><p>以下是代码实现的示例。该代码首先读取起始图片和目标图片，然后指定分割位置以设置图片两侧的效果。最后，通过调整分割位置来实现滑动渐变效果。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token punctuation">,</span> ImageDraw
<span class="token keyword">import</span> os


<span class="token keyword">def</span> <span class="token function">merge_image</span><span class="token punctuation">(</span>in_img<span class="token punctuation">,</span> out_img<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> orient<span class="token operator">=</span><span class="token string">&quot;horizontal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    合并图像的函数

    参数:
        in_img (PIL.Image): 输入图像
        out_img (PIL.Image): 输出图像
        pos (int): 分割位置
        orient (str): 图像合并方向，默认水平horizontal,可选垂直vertical

    返回:
        result_image (PIL.Image): 合并后的图像
    &quot;&quot;&quot;</span>
    <span class="token keyword">if</span> orient <span class="token operator">==</span> <span class="token string">&quot;horizontal&quot;</span><span class="token punctuation">:</span>
        <span class="token comment">## 将图像分为左右两部分</span>
        left_image <span class="token operator">=</span> out_img<span class="token punctuation">.</span>crop<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pos<span class="token punctuation">,</span> out_img<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        right_image <span class="token operator">=</span> in_img<span class="token punctuation">.</span>crop<span class="token punctuation">(</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> in_img<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> in_img<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment">## 合并左右两部分图像</span>
        result_image <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span>
            <span class="token string">&#39;RGB&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>left_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> right_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> left_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        result_image<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>left_image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        result_image<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>right_image<span class="token punctuation">,</span> <span class="token punctuation">(</span>left_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment">## 添加滑动线条</span>
        draw <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>result_image<span class="token punctuation">)</span>
        draw<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>left_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>left_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  left_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>

    <span class="token keyword">elif</span> orient <span class="token operator">==</span> <span class="token string">&#39;vertical&#39;</span><span class="token punctuation">:</span>
        <span class="token comment">## 将图像分为上下两部分</span>
        top_image <span class="token operator">=</span> out_img<span class="token punctuation">.</span>crop<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> out_img<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">)</span>
        bottom_image <span class="token operator">=</span> in_img<span class="token punctuation">.</span>crop<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> pos<span class="token punctuation">,</span> in_img<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> in_img<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment">## 合并上下两部分图像</span>
        result_image <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span>
            <span class="token string">&#39;RGB&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>top_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> top_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> bottom_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        result_image<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>top_image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        result_image<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>bottom_image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> top_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment">## 添加滑动线条</span>
        draw <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>result_image<span class="token punctuation">)</span>
        draw<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> top_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>top_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  top_image<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> result_image


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>img_in_path<span class="token punctuation">,</span> img_out_path<span class="token punctuation">,</span> span<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> save<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> orient<span class="token operator">=</span><span class="token string">&#39;horizontal&#39;</span><span class="token punctuation">,</span> loop<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> repeat_delay<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span> save_name<span class="token operator">=</span><span class="token string">&quot;output&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    主函数

    参数:
        img_in_path (str): 起始图片路径
        img_out_path (str): 目标图片路径
        span (int): 分割步长，默认为100
        save (bool): 是否保存中间帧图像，默认为False
        orient (str): 合并方向，默认水平
        loop (int): 循环次数，默认为0（无限循环）
        duration (int): 帧持续时间（毫秒），默认为100
        repeat_delay (int): 循环之间的延迟时间（毫秒），默认为500
        save_name (str): 保存动画的文件名，默认为&quot;output&quot;
    &quot;&quot;&quot;</span>
    <span class="token comment">## 读取原始图像</span>
    img_in <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_in_path<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">&quot;RGB&quot;</span><span class="token punctuation">)</span>
    img_out <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_out_path<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">&quot;RGB&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> img_in<span class="token punctuation">.</span>size <span class="token operator">==</span> img_out<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token string">&quot;Unequal size of two input images&quot;</span>

    <span class="token keyword">if</span> save<span class="token punctuation">:</span>
        output_dir <span class="token operator">=</span> <span class="token string">&#39;output&#39;</span>
        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>output_dir<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    frames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    frames<span class="token punctuation">.</span>append<span class="token punctuation">(</span>img_in<span class="token punctuation">)</span>
    span_end <span class="token operator">=</span> img_in<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">if</span> orient <span class="token operator">==</span> <span class="token string">&#39;horizontal&#39;</span> <span class="token keyword">else</span> img_in<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token comment">## 逐张生成gif图片每一帧</span>
    <span class="token keyword">for</span> pos <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>span<span class="token punctuation">,</span> span_end<span class="token punctuation">,</span> span<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span>
        result_image <span class="token operator">=</span> merge_image<span class="token punctuation">(</span>img_in<span class="token punctuation">,</span> img_out<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> orient<span class="token punctuation">)</span>
        <span class="token keyword">if</span> save<span class="token punctuation">:</span>
            result_image<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;output/</span><span class="token interpolation"><span class="token punctuation">{</span>pos<span class="token punctuation">:</span><span class="token format-spec">04</span><span class="token punctuation">}</span></span><span class="token string">.jpg&quot;</span></span><span class="token punctuation">)</span>
        frames<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result_image<span class="token punctuation">)</span>

    <span class="token keyword">if</span> save<span class="token punctuation">:</span>
        img_in<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&quot;output/0000.jpg&quot;</span><span class="token punctuation">)</span>
        img_out<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;output/</span><span class="token interpolation"><span class="token punctuation">{</span>img_in<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">04</span><span class="token punctuation">}</span></span><span class="token string">.jpg&quot;</span></span><span class="token punctuation">)</span>
    <span class="token comment">## 添加过渡效果</span>
    durations <span class="token operator">=</span> <span class="token punctuation">[</span>duration<span class="token punctuation">]</span><span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>frames<span class="token punctuation">)</span>
    durations<span class="token punctuation">.</span>append<span class="token punctuation">(</span>repeat_delay<span class="token punctuation">)</span>
    frames<span class="token punctuation">.</span>append<span class="token punctuation">(</span>img_out<span class="token punctuation">)</span>
    <span class="token comment">## 生成动图</span>
    <span class="token comment">## frames[0].save：表示将frames列表中的第一张图片作为输出GIF动画的第一帧</span>
    <span class="token comment">## &#39;{save_name}.gif&#39;：表示将输出的GIF动画保存在当前目录下并命名为{save_name}.gif</span>
    <span class="token comment">## format=&#39;GIF&#39;：表示输出的文件格式为GIF格式</span>
    <span class="token comment">## append_images=frames[1:]：表示将frames列表中除了第一张图片以外的剩余图片作为输出GIF动画的后续帧</span>
    <span class="token comment">## save_all=True：表示将所有的帧都保存到输出的GIF动画中</span>
    <span class="token comment">## duration：表示每一帧的持续时间duration，可以是数值也可以是列表。如果是列表则单独表示每一帧的时间</span>
    <span class="token comment">## loop=0：表示循环播放次数为0，即无限循环播放</span>
    <span class="token comment">## optimize=True：表示优化图片生成</span>
    frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>save_name<span class="token punctuation">}</span></span><span class="token string">.gif&#39;</span></span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;GIF&#39;</span><span class="token punctuation">,</span> append_images<span class="token operator">=</span>frames<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                   save_all<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> duration<span class="token operator">=</span>durations<span class="token punctuation">,</span> loop<span class="token operator">=</span>loop<span class="token punctuation">,</span> optimize<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token comment">## 起始图片路径</span>
    img_in_path <span class="token operator">=</span> <span class="token string">&#39;in.jpg&#39;</span>
    <span class="token comment">## 目标图片路径</span>
    img_out_path <span class="token operator">=</span> <span class="token string">&#39;out.jpg&#39;</span>
    <span class="token comment">## 调用 main 函数，并传入相应的参数</span>
    main<span class="token punctuation">(</span>
        img_in_path<span class="token punctuation">,</span>                   <span class="token comment">## 起始图片路径</span>
        img_out_path<span class="token punctuation">,</span>                  <span class="token comment">## 目标图片路径</span>
        save<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                     <span class="token comment">## 是否保存中间结果</span>
        span<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">,</span>                      <span class="token comment">## 分割步长，默认为 150</span>
        orient<span class="token operator">=</span><span class="token string">&#39;horizontal&#39;</span><span class="token punctuation">,</span>           <span class="token comment">## 合并方向，默认为水平（可选值为 &#39;horizontal&#39; 或 &#39;vertical&#39;）</span>
        duration<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span>                  <span class="token comment">## 帧持续时间（毫秒），默认为500</span>
        save_name<span class="token operator">=</span><span class="token string">&quot;output&quot;</span><span class="token punctuation">,</span>            <span class="token comment">## 保存动画的文件名，默认为 &quot;output&quot;</span>
        repeat_delay<span class="token operator">=</span><span class="token number">2000</span>              <span class="token comment">## 循环之间的延迟时间（毫秒）默认为 500</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码演示了一种直接生成动图的方法。此外，还可以通过读取磁盘中的图片集合来生成动图。以下是示例代码，用于读取之前保存的中间图片并生成动图：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> os

<span class="token comment">## 图片文件夹路径</span>
image_folder <span class="token operator">=</span> <span class="token string">&#39;output&#39;</span>

<span class="token comment">## 保存的动图路径及文件名</span>
animated_gif_path <span class="token operator">=</span> <span class="token string">&#39;output.gif&#39;</span>

<span class="token comment">## 获取图片文件列表</span>
image_files <span class="token operator">=</span> <span class="token punctuation">[</span>f <span class="token keyword">for</span> f <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>image_folder<span class="token punctuation">)</span> <span class="token keyword">if</span> f<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#39;.jpg&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> f<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#39;.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
image_files<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">## 创建图片帧列表</span>
frames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> file_name <span class="token keyword">in</span> image_files<span class="token punctuation">:</span>
    image_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>image_folder<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span>
    img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>image_path<span class="token punctuation">)</span>
    frames<span class="token punctuation">.</span>append<span class="token punctuation">(</span>img<span class="token punctuation">)</span>

<span class="token comment">## 保存为动图</span>
frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>animated_gif_path<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;GIF&#39;</span><span class="token punctuation">,</span> append_images<span class="token operator">=</span>frames<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> save_all<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> loop<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>值得注意，基于Pillow库生成的gif图片，往往文件体积过大。这是因为Pillow库采用无损压缩的方式保存gif图片。为了解决这个问题，可以尝试以下方法对gif图片进行压缩：</p>`,36),g={href:"https://www.freeconvert.com/gif-compressor",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/kohler/gifsicle",target:"_blank",rel:"noopener noreferrer"},_=n("li",null,"缩小gif图像宽高",-1),y=n("h2",{id:"_3-参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-参考","aria-hidden":"true"},"#"),s(" 3 参考")],-1),w={href:"https://matplotlib.org/stable/gallery/animation/index.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.geeksforgeeks.org/how-to-create-animations-in-python/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/dexplo/bar_chart_race",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/JackMcKew/pandas_alive",target:"_blank",rel:"noopener noreferrer"},A={href:"https://www.freeconvert.com/gif-compressor",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/kohler/gifsicle",target:"_blank",rel:"noopener noreferrer"};function F(P,I){const a=e("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[s("本节将通过几个示例来介绍Animations模块的使用，所介绍的示例出自："),n("a",k,[s("gallery-animation"),p(a)]),s("。")]),r,n("p",null,[s("本示例代码和数据来自于： "),n("a",d,[s("how-to-create-animations-in-python"),p(a)]),s("。这段代码支持展示自1500年到2020年期间人口数排名靠前的城市的变化趋势。该示例只是介绍简单的动态条形图绘制，更加精美的条形图绘制可使用："),n("a",m,[s("bar_chart_race"),p(a)]),s("或"),n("a",v,[s("pandas_alive"),p(a)]),s("。")]),b,n("ul",null,[n("li",null,[s("使用在线gif图片压缩网站，如："),n("a",g,[s("gif-compressor"),p(a)])]),n("li",null,[s("基于压缩或优化gif图片的工具，如："),n("a",f,[s("gifsicle"),p(a)])]),_]),y,n("ul",null,[n("li",null,[n("a",w,[s("gallery-animation"),p(a)])]),n("li",null,[n("a",h,[s("how-to-create-animations-in-python"),p(a)])]),n("li",null,[n("a",x,[s("bar_chart_race"),p(a)])]),n("li",null,[n("a",q,[s("pandas_alive"),p(a)])]),n("li",null,[n("a",A,[s("gif-compressor"),p(a)])]),n("li",null,[n("a",z,[s("gifsicle"),p(a)])])])])}const D=o(l,[["render",F],["__file","2023-10-24-_数据分析与可视化_ 基于Python绘制简单动图.html.vue"]]);export{D as default};
