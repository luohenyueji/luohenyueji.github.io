const e=JSON.parse('{"key":"v-78eb7b55","path":"/blog/opencv/opencv%E5%AE%9E%E6%88%98/2019-05-07-_OpenCV%E5%AE%9E%E6%88%98_27%20%E5%9C%A8OpenCV%E4%B8%8B%E4%BD%BF%E7%94%A8forEach%E8%BF%9B%E8%A1%8C%E5%B9%B6%E8%A1%8C%E5%83%8F%E7%B4%A0%E8%AE%BF%E9%97%AE.html","title":"[OpenCV实战]27 在OpenCV下使用forEach进行并行像素访问","lang":"zh-CN","frontmatter":{"category":["OpenCV"],"date":"2019-05-07T14:42:11.000Z","tag":["OpenCV实战","OpenCV"],"description":"[OpenCV实战]27 在OpenCV下使用forEach进行并行像素访问 C++11扩展了for语句的语法。用这个新写法forEach，forEach可以遍历C类型的数组、初始化列表以及任何重载了非成员的begin()和end()函数的类型。OpenCV的Mat数据结构中有用到ForEach的写法。在本教程中，我们将比较Mat类的forEach方法与OpenCV中访问和转换像素值的其他方法的性能。我们将展示forEach如何比使用at方法或甚至有效地使用指针算法更快。因此本文只有C++ forEach用法介绍。Python下实现容易多，搜索即可。 OpenCV中有隐藏的功能，有时候并不是很有名。其中一个隐藏的功能是Mat类的forEach方法，它利用机器上的所有核心在每个像素上处理任何功能。","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/opencv/opencv%E5%AE%9E%E6%88%98/2019-05-07-_OpenCV%E5%AE%9E%E6%88%98_27%20%E5%9C%A8OpenCV%E4%B8%8B%E4%BD%BF%E7%94%A8forEach%E8%BF%9B%E8%A1%8C%E5%B9%B6%E8%A1%8C%E5%83%8F%E7%B4%A0%E8%AE%BF%E9%97%AE.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[OpenCV实战]27 在OpenCV下使用forEach进行并行像素访问"}],["meta",{"property":"og:description","content":"[OpenCV实战]27 在OpenCV下使用forEach进行并行像素访问 C++11扩展了for语句的语法。用这个新写法forEach，forEach可以遍历C类型的数组、初始化列表以及任何重载了非成员的begin()和end()函数的类型。OpenCV的Mat数据结构中有用到ForEach的写法。在本教程中，我们将比较Mat类的forEach方法与OpenCV中访问和转换像素值的其他方法的性能。我们将展示forEach如何比使用at方法或甚至有效地使用指针算法更快。因此本文只有C++ forEach用法介绍。Python下实现容易多，搜索即可。 OpenCV中有隐藏的功能，有时候并不是很有名。其中一个隐藏的功能是Mat类的forEach方法，它利用机器上的所有核心在每个像素上处理任何功能。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"OpenCV实战"}],["meta",{"property":"article:tag","content":"OpenCV"}],["meta",{"property":"article:published_time","content":"2019-05-07T14:42:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[OpenCV实战]27 在OpenCV下使用forEach进行并行像素访问\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-05-07T14:42:11.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1 Mat像素访问","slug":"_1-mat像素访问","link":"#_1-mat像素访问","children":[{"level":3,"title":"1.1 使用at 方法直接进行像素访问","slug":"_1-1-使用at-方法直接进行像素访问","link":"#_1-1-使用at-方法直接进行像素访问","children":[]},{"level":3,"title":"1.2 使用指针进行像素访问","slug":"_1-2-使用指针进行像素访问","link":"#_1-2-使用指针进行像素访问","children":[]},{"level":3,"title":"1.3 使用forEach 方法进行像素访问","slug":"_1-3-使用foreach-方法进行像素访问","link":"#_1-3-使用foreach-方法进行像素访问","children":[]},{"level":3,"title":"1.4 将forEach 与C ++ 11 Lambda 一起使用","slug":"_1-4-将foreach-与c-11-lambda-一起使用","link":"#_1-4-将foreach-与c-11-lambda-一起使用","children":[]}]},{"level":2,"title":"2 性能比较与代码","slug":"_2-性能比较与代码","link":"#_2-性能比较与代码","children":[{"level":3,"title":"2.1 性能比较","slug":"_2-1-性能比较","link":"#_2-1-性能比较","children":[]},{"level":3,"title":"2.2 代码","slug":"_2-2-代码","link":"#_2-2-代码","children":[]}]},{"level":2,"title":"3 参考","slug":"_3-参考","link":"#_3-参考","children":[]}],"git":{},"readingTime":{"minutes":6.96,"words":2087},"filePathRelative":"blog/opencv/opencv实战/2019-05-07-[OpenCV实战]27 在OpenCV下使用forEach进行并行像素访问.md","localizedDate":"2019年5月7日","excerpt":"<h1> [OpenCV实战]27 在OpenCV下使用forEach进行并行像素访问</h1>\\n<p>C++11扩展了for语句的语法。用这个新写法forEach，forEach可以遍历C类型的数组、初始化列表以及任何重载了非成员的begin()和end()函数的类型。OpenCV的Mat数据结构中有用到ForEach的写法。在本教程中，我们将比较Mat类的forEach方法与OpenCV中访问和转换像素值的其他方法的性能。我们将展示forEach如何比使用at方法或甚至有效地使用指针算法更快。因此本文只有C++ forEach用法介绍。Python下实现容易多，搜索即可。</p>\\n<p>OpenCV中有隐藏的功能，有时候并不是很有名。其中一个隐藏的功能是Mat类的forEach方法，它利用机器上的所有核心在每个像素上处理任何功能。</p>","autoDesc":true}');export{e as data};
