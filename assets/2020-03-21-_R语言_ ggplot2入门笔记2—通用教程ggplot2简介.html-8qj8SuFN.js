import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o,c as s,a as t,d,b as e,e as n}from"./app-MsA2k2kn.js";const c={},r=t("h1",{id:"r语言-ggplot2入门笔记2—通用教程ggplot2简介",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#r语言-ggplot2入门笔记2—通用教程ggplot2简介","aria-hidden":"true"},"#"),e(" [R语言] ggplot2入门笔记2—通用教程ggplot2简介")],-1),g={href:"https://github.com/luohenyueji/R-Study-Notes/blob/master/ggplot2%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/%5BR%E8%AF%AD%E8%A8%80%5D%20ggplot2%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02%E2%80%94%E9%80%9A%E7%94%A8%E6%95%99%E7%A8%8Bggplot2%E7%AE%80%E4%BB%8B.ipynb",target:"_blank",rel:"noopener noreferrer"},u=t("strong",null,"代码下载地址",-1),m=n(`<p>以前，我们看到了使用ggplot2软件包制作图表的简短教程。它很快涉及制作ggplot的各个方面。现在，这是一个完整而完整的教程。现在讨论如何构造和自定义几乎所有ggplot。它涉及的原则，步骤和微妙之处，使图像的情节有效和更具视觉吸引力。因此，出于实用目的，我希望本教程可以作为书签参考，对您日常的绘图工作很有用。 这是ggplot2的三部分通用教程的第1部分，ggplot2是R中的美观（非常流行）的图形框架。该教程主要针对具有R编程语言的一些基本知识并希望制作复杂且美观的图表的用户与R ggplot2。</p><ul><li>ggplot2简介(Introduction to ggplot2)</li><li>自定义外观(Customizing the Look and Feel)</li><li>前50个ggplot2可视化效果(top 50 ggplot2 Visualizations)</li></ul><p>ggplot2简介涵盖了有关构建简单ggplot以及修改组件和外观的基本知识；自定义外观是关于图像的自定义，如使用多图，自定义布局操作图例、注释；前50个ggplot2可视化效果应用在第1部分和第2部分中学到的知识来构造其他类型的ggplot，例如条形图，箱形图等。</p><p>本章节简介涵盖了有关构建简单ggplot以及修改组件和外观的基本知识，该章节主要内容有：</p><ol><li>了解ggplot语法(Understanding the ggplot Syntax)</li><li>如何制作一个简单的散点图(How to Make a Simple Scatterplot)</li><li>如何调整XY轴范围(How to Adjust the X and Y Axis Limits)</li><li>如何更改标题和轴标签(How to Change the Title and Axis Labels)</li><li>如何更改点的颜色和大小(How to Change the Color and Size of Points)</li><li>如何更改X轴文本和刻度的位置(How to Change the X Axis Texts and Ticks Location)</li></ol><p><strong>参考文档</strong></p><blockquote><p>http://r-statistics.co/Complete-Ggplot2-Tutorial-Part1-With-R-Code.html</p></blockquote><h2 id="_1-了解ggplot语法-understanding-the-ggplot-syntax" tabindex="-1"><a class="header-anchor" href="#_1-了解ggplot语法-understanding-the-ggplot-syntax" aria-hidden="true">#</a> 1. 了解ggplot语法(Understanding the ggplot Syntax)</h2><p>如果您是初学者或主要使用基本图形，则构造ggplots的语法可能会令人困惑。主要区别在于，与基本图形不同，ggplot适用于数据表而不是单个矢量。绘图所需的所有数据通常都包含在提供给ggplot（）本身的数据框中，或者可以提供给各个geom。第二个值得注意的功能是，您可以通过向使用该ggplot()功能创建的现有图上添加更多层（和主题）来继续增强图。</p><p>让我们根据midwest数据集初始化一个基本的ggplot</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code># Setup
# #关闭科学记数法，如1e+06
# turn off scientific notation like 1e+06
options(scipen=999)  
library(ggplot2)
# load the data 载入数据
data(&quot;midwest&quot;, package = &quot;ggplot2&quot;)
# 显示数据
head(midwest)
# Init Ggplot 初始化图像
# area and poptotal are columns in &#39;midwest&#39;
ggplot(midwest, aes(x=area, y=poptotal))  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Warning message:
&quot;package &#39;ggplot2&#39; was built under R version 3.6.1&quot;
</code></pre><table><caption>A tibble: 6 × 28</caption><thead><tr><th scope="col">PID</th><th scope="col">county</th><th scope="col">state</th><th scope="col">area</th><th scope="col">poptotal</th><th scope="col">popdensity</th><th scope="col">popwhite</th><th scope="col">popblack</th><th scope="col">popamerindian</th><th scope="col">popasian</th><th scope="col">...</th><th scope="col">percollege</th><th scope="col">percprof</th><th scope="col">poppovertyknown</th><th scope="col">percpovertyknown</th><th scope="col">percbelowpoverty</th><th scope="col">percchildbelowpovert</th><th scope="col">percadultpoverty</th><th scope="col">percelderlypoverty</th><th scope="col">inmetro</th><th scope="col">category</th></tr><tr><th scope="col">&lt;int&gt;</th><th scope="col">&lt;chr&gt;</th><th scope="col">&lt;chr&gt;</th><th scope="col">&lt;dbl&gt;</th><th scope="col">&lt;int&gt;</th><th scope="col">&lt;dbl&gt;</th><th scope="col">&lt;int&gt;</th><th scope="col">&lt;int&gt;</th><th scope="col">&lt;int&gt;</th><th scope="col">&lt;int&gt;</th><th scope="col">...</th><th scope="col">&lt;dbl&gt;</th><th scope="col">&lt;dbl&gt;</th><th scope="col">&lt;int&gt;</th><th scope="col">&lt;dbl&gt;</th><th scope="col">&lt;dbl&gt;</th><th scope="col">&lt;dbl&gt;</th><th scope="col">&lt;dbl&gt;</th><th scope="col">&lt;dbl&gt;</th><th scope="col">&lt;int&gt;</th><th scope="col">&lt;chr&gt;</th></tr></thead><tbody><tr><td>561</td><td>ADAMS </td><td>IL</td><td>0.052</td><td>66090</td><td>1270.9615</td><td>63917</td><td>1702</td><td>98</td><td>249</td><td>...</td><td>19.63139</td><td>4.355859</td><td>63628</td><td>96.27478</td><td>13.151443</td><td>18.01172</td><td>11.009776</td><td>12.443812</td><td>0</td><td>AAR</td></tr><tr><td>562</td><td>ALEXANDER</td><td>IL</td><td>0.014</td><td>10626</td><td> 759.0000</td><td> 7054</td><td>3496</td><td>19</td><td> 48</td><td>...</td><td>11.24331</td><td>2.870315</td><td>10529</td><td>99.08714</td><td>32.244278</td><td>45.82651</td><td>27.385647</td><td>25.228976</td><td>0</td><td>LHR</td></tr><tr><td>563</td><td>BOND </td><td>IL</td><td>0.022</td><td>14991</td><td> 681.4091</td><td>14477</td><td> 429</td><td>35</td><td> 16</td><td>...</td><td>17.03382</td><td>4.488572</td><td>14235</td><td>94.95697</td><td>12.068844</td><td>14.03606</td><td>10.852090</td><td>12.697410</td><td>0</td><td>AAR</td></tr><tr><td>564</td><td>BOONE </td><td>IL</td><td>0.017</td><td>30806</td><td>1812.1176</td><td>29344</td><td> 127</td><td>46</td><td>150</td><td>...</td><td>17.27895</td><td>4.197800</td><td>30337</td><td>98.47757</td><td> 7.209019</td><td>11.17954</td><td> 5.536013</td><td> 6.217047</td><td>1</td><td>ALU</td></tr><tr><td>565</td><td>BROWN </td><td>IL</td><td>0.018</td><td> 5836</td><td> 324.2222</td><td> 5264</td><td> 547</td><td>14</td><td> 5</td><td>...</td><td>14.47600</td><td>3.367680</td><td> 4815</td><td>82.50514</td><td>13.520249</td><td>13.02289</td><td>11.143211</td><td>19.200000</td><td>0</td><td>AAR</td></tr><tr><td>566</td><td>BUREAU </td><td>IL</td><td>0.050</td><td>35688</td><td> 713.7600</td><td>35157</td><td> 50</td><td>65</td><td>195</td><td>...</td><td>18.90462</td><td>3.275891</td><td>35107</td><td>98.37200</td><td>10.399635</td><td>14.15882</td><td> 8.179287</td><td>11.008586</td><td>0</td><td>AAR</td></tr></tbody></table><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF80XzIucG5n?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>上面绘制了一个空白ggplot。即使指定了x和y，也没有点或线。这是因为ggplot并不假定您要绘制散点图或折线图。我只告诉ggplotT使用什么数据集，哪些列应该用于X和Y轴。我没有明确要求它画出任何点。还要注意，该aes()功能用于指定X和Y轴。这是因为，必须在aes()函数中指定属于源数据帧的任何信息。</p><h2 id="_2-如何制作一个简单的散点图-how-to-make-a-simple-scatterplot" tabindex="-1"><a class="header-anchor" href="#_2-如何制作一个简单的散点图-how-to-make-a-simple-scatterplot" aria-hidden="true">#</a> 2. 如何制作一个简单的散点图(How to Make a Simple Scatterplot)</h2><p>让我们通过使用称为的geom层添加散点图，在空白ggplot基础制作一个散点图geom_point。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)
ggplot(midwest, aes(x=area, y=poptotal)) + 
geom_point()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF83XzAucG5n?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>我们得到了一个基本的散点图，其中每个点代表一个县。但是，它缺少一些基本组成部分，例如绘图标题，有意义的轴标签等。此外，大多数点都集中在绘图的底部，这不太好。您将在接下来的步骤中看到如何纠正这些问题。<br> 像geom_point()一样，有许多这样的geom层，我们将在本教程系列的后续部分中看到。现在，让我们使用geom_smooth（method=&#39;lm&#39;）添加一个平滑层。由于该方法被设置为lm（线性模型的简称），所以它会画出最适合的拟合直线。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>g &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + 
geom_point() + 
# set se=FALSE to turnoff confidence bands
# 设置se=FALSE来关闭置信区间
geom_smooth(method=&quot;lm&quot;, se=TRUE)  
plot(g)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF85XzAucG5n?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>最合适的线是蓝色。您能找到其他method可用的选项geom_smooth吗？（注意：请参阅geom_smooth）。您可能已经注意到，大多数点都位于图表的底部，看起来并不好看。因此，让我们更改Y轴限制以关注下半部分。</p><h2 id="_3-如何调整xy轴范围-how-to-adjust-the-x-and-y-axis-limits" tabindex="-1"><a class="header-anchor" href="#_3-如何调整xy轴范围-how-to-adjust-the-x-and-y-axis-limits" aria-hidden="true">#</a> 3. 如何调整XY轴范围(How to Adjust the X and Y Axis Limits)</h2><p>X轴和Y轴范围可以通过两种方式控制。</p><h3 id="_3-1-方法1-通过删除范围之外的点" tabindex="-1"><a class="header-anchor" href="#_3-1-方法1-通过删除范围之外的点" aria-hidden="true">#</a> 3.1 方法1：通过删除范围之外的点</h3><p>与原始数据相比，这将更改最佳拟合线或平滑线。这可以通过xlim（）和ylim（）完成。可以传递长度为2的数值向量（具有最大值和最小值）或仅传递最大值和最小值本身。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)
# set se=FALSE to turnoff confidence bands
# 设置se=FALSE来关闭置信区间
g &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + 
geom_point() + 
geom_smooth(method=&quot;lm&quot;)

# Delete the points outside the limits
# deletes points 删除点
g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
# g + xlim(0, 0.1) + ylim(0, 1000000)   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Warning message:
&quot;Removed 5 rows containing non-finite values (stat_smooth).&quot;
Warning message:
&quot;Removed 5 rows containing missing values (geom_point).&quot;
</code></pre><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8xM18xLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>在这种情况下，图表不是从头开始构建的，而是建立在g之上的。这是因为先前的图g以ggplot对象存储为，该对象在被调用时将重现原始图。使用ggplot，您可以在该图的顶部添加更多的图层，主题和其他设置。<br> 您是否注意到最佳拟合线与原始图相比变得更加水平？这是因为，当使用xlim()和时ylim()，指定范围之外的点将被删除，并且在绘制最佳拟合线（使用geom_smooth(method=&#39;lm&#39;)）时将不考虑这些点。当您希望知道移除某些极值（或离群值）时最佳拟合线将如何变化时，此功能可能会派上用场。</p><h3 id="_3-2-方法2-放大" tabindex="-1"><a class="header-anchor" href="#_3-2-方法2-放大" aria-hidden="true">#</a> 3.2 方法2：放大</h3><p>另一种方法是通过放大感兴趣的区域而不删除点来更改X和Y轴限制。这是使用coord_cartesian()完成的。让我们将该图存储为g1，由于考虑了所有要点，因此最佳拟合线没有改变。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)
g &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + 
geom_point() + 
# set se=FALSE to turnoff confidence bands
geom_smooth(method=&quot;lm&quot;)  

# Zoom in without deleting the points outside the limits. 
# As a result, the line of best fit is the same as the original plot.
# 放大而不删除超出限制的点。因此，最佳拟合线与原始图相同。
g1 &lt;- g + coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000))  
plot(g1)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8xNl8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_4-如何更改标题和轴标签-how-to-change-the-title-and-axis-labels" tabindex="-1"><a class="header-anchor" href="#_4-如何更改标题和轴标签-how-to-change-the-title-and-axis-labels" aria-hidden="true">#</a> 4. 如何更改标题和轴标签(How to Change the Title and Axis Labels)</h2><p>我将其存储为g1。让我们为X和Y轴添加绘图标题和标签。这可以一次性使用来完成labs()与功能title，x和y参数。另一种选择是使用ggtitle()，xlab()和ylab()</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)
# 画图
# set se=FALSE to turnoff confidence bands
g &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method=&quot;lm&quot;)  
# 限制范围
g1 &lt;- g + coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000))  # zooms in
# Add Title and Labels
# 添加标签，标题名，小标题名，说明文字
g1 + labs(title=&quot;Area Vs Population&quot;, subtitle=&quot;From midwest dataset&quot;, y=&quot;Population&quot;, x=&quot;Area&quot;, caption=&quot;Midwest Demographics&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8xOF8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code># 另外一种方法
g1 + ggtitle(&quot;Area Vs Population&quot;, subtitle=&quot;From midwest dataset&quot;) + xlab(&quot;Area&quot;) + ylab(&quot;Population&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8xOV8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>优秀！因此，这是完整功能调用。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code># Full Plot call
library(ggplot2)
ggplot(midwest, aes(x=area, y=poptotal)) + 
geom_point() + 
geom_smooth(method=&quot;lm&quot;) + 
coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
labs(title=&quot;Area Vs Population&quot;, subtitle=&quot;From midwest dataset&quot;, y=&quot;Population&quot;, x=&quot;Area&quot;, caption=&quot;Midwest Demographics&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8yMV8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_5-如何更改点的颜色和大小-how-to-change-the-color-and-size-of-points" tabindex="-1"><a class="header-anchor" href="#_5-如何更改点的颜色和大小-how-to-change-the-color-and-size-of-points" aria-hidden="true">#</a> 5. 如何更改点的颜色和大小(How to Change the Color and Size of Points)</h2><p>本节主要内容有：</p><ul><li>如何将颜色和尺寸更改为静态？(How to Change the Color and Size To Static?)</li><li>如何更改颜色以在另一列中反映类别？(How to Change the Color To Reflect Categories in Another Column?)</li></ul><h3 id="_5-1-如何将颜色和尺寸更改为静态-how-to-change-the-color-and-size-to-static" tabindex="-1"><a class="header-anchor" href="#_5-1-如何将颜色和尺寸更改为静态-how-to-change-the-color-and-size-to-static" aria-hidden="true">#</a> 5.1 如何将颜色和尺寸更改为静态？(How to Change the Color and Size To Static?)</h3><p>我们可以通过修改相应的几何图形来改变几何图形图层的美感。让我们将点和线的颜色更改为静态值。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)
# 画图
ggplot(midwest, aes(x=area, y=poptotal)) + 
# Set static color and size for points
# 设置固定颜色和尺寸
geom_point(col=&quot;steelblue&quot;, size=3) +   
# change the color of line
# 更改拟合直线颜色
geom_smooth(method=&quot;lm&quot;, col=&quot;firebrick&quot;) +  
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) + 
labs(title=&quot;Area Vs Population&quot;, subtitle=&quot;From midwest dataset&quot;, y=&quot;Population&quot;, x=&quot;Area&quot;, caption=&quot;Midwest Demographics&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8yNF8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_5-2-如何更改颜色以在另一列中反映类别-how-to-change-the-color-to-reflect-categories-in-another-column" tabindex="-1"><a class="header-anchor" href="#_5-2-如何更改颜色以在另一列中反映类别-how-to-change-the-color-to-reflect-categories-in-another-column" aria-hidden="true">#</a> 5.2 如何更改颜色以在另一列中反映类别？(How to Change the Color To Reflect Categories in Another Column?)</h3><p>假设我们要根据源数据集中的另一列更改颜色midwest，则必须在aes()函数内指定颜色。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)
gg &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + 
# Set color to vary based on state categories.
# 根据状态类别将颜色设置为不同。
geom_point(aes(col=state), size=3) +  
geom_smooth(method=&quot;lm&quot;, col=&quot;firebrick&quot;, size=2) + 
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) + 
labs(title=&quot;Area Vs Population&quot;, subtitle=&quot;From midwest dataset&quot;, y=&quot;Population&quot;, x=&quot;Area&quot;, caption=&quot;Midwest Demographics&quot;)
plot(gg)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8yNl8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>现在，每个点都基于aes所属的状态（col=state）上色。不只是颜色，大小、形状、笔划（边界的厚度）和填充（填充颜色）都可以用来区分分组。作为附加的优点，图例将自动添加。如果需要，可以通过在theme（）函数中将legend.position设置为None来删除它。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code># remove legend 移除图例
gg + theme(legend.position=&quot;None&quot;)  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8yOF8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>另外，您可以用调色板完全更改颜色。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code># change color palette 更改调色板
gg + scale_colour_brewer(palette = &quot;Set1&quot;)  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8zMF8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure>`,61),p={href:"https://matplotlib.org/gallery/color/named_colors.html#sphx-glr-gallery-color-named-colors-py",target:"_blank",rel:"noopener noreferrer"},v=n(`<div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(RColorBrewer)
head(brewer.pal.info, 10)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><table><caption>A data.frame: 10 × 3</caption><thead><tr><th></th><th scope="col">maxcolors</th><th scope="col">category</th><th scope="col">colorblind</th></tr><tr><th></th><th scope="col">&lt;dbl&gt;</th><th scope="col">&lt;fct&gt;</th><th scope="col">&lt;lgl&gt;</th></tr></thead><tbody><tr><th scope="row">BrBG</th><td>11</td><td>div </td><td> TRUE</td></tr><tr><th scope="row">PiYG</th><td>11</td><td>div </td><td> TRUE</td></tr><tr><th scope="row">PRGn</th><td>11</td><td>div </td><td> TRUE</td></tr><tr><th scope="row">PuOr</th><td>11</td><td>div </td><td> TRUE</td></tr><tr><th scope="row">RdBu</th><td>11</td><td>div </td><td> TRUE</td></tr><tr><th scope="row">RdGy</th><td>11</td><td>div </td><td>FALSE</td></tr><tr><th scope="row">RdYlBu</th><td>11</td><td>div </td><td> TRUE</td></tr><tr><th scope="row">RdYlGn</th><td>11</td><td>div </td><td>FALSE</td></tr><tr><th scope="row">Spectral</th><td>11</td><td>div </td><td>FALSE</td></tr><tr><th scope="row">Accent</th><td> 8</td><td>qual</td><td>FALSE</td></tr></tbody></table><h2 id="_6-如何更改x轴文本和刻度的位置-how-to-change-the-x-axis-texts-and-ticks-location" tabindex="-1"><a class="header-anchor" href="#_6-如何更改x轴文本和刻度的位置-how-to-change-the-x-axis-texts-and-ticks-location" aria-hidden="true">#</a> 6. 如何更改X轴文本和刻度的位置(How to Change the X Axis Texts and Ticks Location)</h2><p>本节主要内容有：</p><ul><li>如何更改X和Y轴文本及其位置？(How to Change the X and Y Axis Text and its Location?)</li><li>如何通过设置原始值的格式为轴标签编写自定义文本？(How to Write Customized Texts for Axis Labels, by Formatting the Original Values?)</li><li>如何使用预置主题一次性定制整个主题？(How to Customize the Entire Theme in One Shot using Pre-Built Themes?)</li></ul><h3 id="_6-1-如何更改x和y轴文本及其位置-how-to-change-the-x-and-y-axis-text-and-its-location" tabindex="-1"><a class="header-anchor" href="#_6-1-如何更改x和y轴文本及其位置-how-to-change-the-x-and-y-axis-text-and-its-location" aria-hidden="true">#</a> 6.1 如何更改X和Y轴文本及其位置？(How to Change the X and Y Axis Text and its Location?)</h3><p>好了，现在让我们看看如何更改X和Y轴文本及其位置。这涉及两个方面：breaks和labels。</p><p><strong>第1步：设置breaks</strong><br> 坐标轴间隔breaks的范围应该与X轴变量相同。注意，我使用的是scale_x_continuous，因为X轴变量是连续变量。如果它是一个日期变量，那么可以使用scale_x_date。与scale_x_continuous()类似，scale_y_continuous()也可用于Y轴。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)

# Base plot
gg &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + 
# Set color to vary based on state categories
# 设置颜色
geom_point(aes(col=state), size=3) + 
geom_smooth(method=&quot;lm&quot;, col=&quot;firebrick&quot;, size=2) + 
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) + 
labs(title=&quot;Area Vs Population&quot;, subtitle=&quot;From midwest dataset&quot;, y=&quot;Population&quot;, x=&quot;Area&quot;, caption=&quot;Midwest Demographics&quot;)

# Change breaks
# 改变间距
gg + scale_x_continuous(breaks=seq(0, 0.1, 0.01))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8zNl8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p><strong>第2步：更改labels</strong><br> 可以选择更改labels轴刻度。labels取与长度相同的向量breaks。通过设置labels从a到k的字母进行演示（尽管在这种情况下它没有任何意义）。</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)

# Base plot
gg &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + 
# Set color to vary based on state categories
# 设置颜色
geom_point(aes(col=state), size=3) + 
geom_smooth(method=&quot;lm&quot;, col=&quot;firebrick&quot;, size=2) + 
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) + 
labs(title=&quot;Area Vs Population&quot;, subtitle=&quot;From midwest dataset&quot;, y=&quot;Population&quot;, x=&quot;Area&quot;, caption=&quot;Midwest Demographics&quot;)

# Change breaks + label
# letters字母表
gg + scale_x_continuous(breaks=seq(0, 0.1, 0.01), labels = letters[1:11])
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF8zOF8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>如果需要反转刻度，请使用scale_x_reverse()/scale_y_reverse()</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)

# Base plot
gg &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + 
# Set color to vary based on state categories
# 设置颜色
geom_point(aes(col=state), size=3) + 
geom_smooth(method=&quot;lm&quot;, col=&quot;firebrick&quot;, size=2) + 
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) + 
labs(title=&quot;Area Vs Population&quot;, subtitle=&quot;From midwest dataset&quot;, y=&quot;Population&quot;, x=&quot;Area&quot;, caption=&quot;Midwest Demographics&quot;)

# Reverse X Axis Scale
# 反转x轴
gg + scale_x_reverse()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF80MF8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_6-2-如何通过设置原始值的格式为轴标签编写自定义文本-how-to-write-customized-texts-for-axis-labels-by-formatting-the-original-values" tabindex="-1"><a class="header-anchor" href="#_6-2-如何通过设置原始值的格式为轴标签编写自定义文本-how-to-write-customized-texts-for-axis-labels-by-formatting-the-original-values" aria-hidden="true">#</a> 6.2 如何通过设置原始值的格式为轴标签编写自定义文本？(How to Write Customized Texts for Axis Labels, by Formatting the Original Values?)</h3><p>让我们设置Y轴文本的breaks，并设置X轴和Y轴标签。我用了两种方法格式化标签。方法1：使用sprintf()。（在下面的示例中，将其格式化为％）* 方法2：使用自定义的用户定义函数。（按1000到1K的比例格式化）</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)

# Base plot
gg &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + 
# Set color to vary based on state categories
# 设置颜色
geom_point(aes(col=state), size=3) + 
geom_smooth(method=&quot;lm&quot;, col=&quot;firebrick&quot;, size=2) + 
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) + 
labs(title=&quot;Area Vs Population&quot;, subtitle=&quot;From midwest dataset&quot;, y=&quot;Population&quot;, x=&quot;Area&quot;, caption=&quot;Midwest Demographics&quot;)

# Change Axis Texts
gg + 
# 更改x轴
scale_x_continuous(breaks=seq(0, 0.1, 0.01), labels = sprintf(&quot;%1.2f%%&quot;, seq(0, 0.1, 0.01))) + 
# 更改y轴
scale_y_continuous(breaks=seq(0, 1000000, 200000), labels = function(x){paste0(x/1000, &#39;K&#39;)})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF80Ml8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_6-3-如何使用预置主题一次性定制整个主题-how-to-customize-the-entire-theme-in-one-shot-using-pre-built-themes" tabindex="-1"><a class="header-anchor" href="#_6-3-如何使用预置主题一次性定制整个主题-how-to-customize-the-entire-theme-in-one-shot-using-pre-built-themes" aria-hidden="true">#</a> 6.3 如何使用预置主题一次性定制整个主题？(How to Customize the Entire Theme in One Shot using Pre-Built Themes?)</h3><p>最后，我们可以使用预先构建的主题来更改整个主题本身，而不是单独更改主题组件。帮助页面?theme_bw显示了所有可用的内置主题。这通常是通过两种方式来实现的。在绘制ggplot之前，使用theme_set()设置主题。请注意，此设置将影响将来的所有绘图。或者绘制ggplot，然后添加整个主题设置（例如theme_bw()）</p><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>library(ggplot2)

# Base plot
gg &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + 
# Set color to vary based on state categories.
geom_point(aes(col=state), size=3) +  
geom_smooth(method=&quot;lm&quot;, col=&quot;firebrick&quot;, size=2) + 
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) + 
labs(title=&quot;Area Vs Population&quot;, subtitle=&quot;From midwest dataset&quot;, y=&quot;Population&quot;, x=&quot;Area&quot;, caption=&quot;Midwest Demographics&quot;)

gg &lt;- gg + scale_x_continuous(breaks=seq(0, 0.1, 0.01))

# method 1: Using theme_set()
theme_set(theme_classic())  
gg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF80NF8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code># method 2: Adding theme Layer itself.
# 添加主题层
gg + theme_bw() + labs(subtitle=&quot;BW Theme&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF80NV8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-R line-numbers-mode" data-ext="R"><pre class="language-R"><code>gg + theme_classic() + labs(subtitle=&quot;Classic Theme&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9SLVN0dWR5LU5vdGVzL2dncGxvdCVFNSU4NSVBNSVFOSU5NyVBOCVFNyVBQyU5NCVFOCVBRSVCMC8yL291dHB1dF80Nl8wLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure>`,28);function h(b,V){const i=l("ExternalLinkIcon");return o(),s("div",null,[r,t("p",null,[t("a",g,[u,d(i)])]),m,t("p",null,[e("在RColorBrewer软件包中可以找到更多这样的调色板，具体颜色显示见"),t("a",p,[e("网页"),d(i)])]),v])}const R=a(c,[["render",h],["__file","2020-03-21-_R语言_ ggplot2入门笔记2—通用教程ggplot2简介.html.vue"]]);export{R as default};
