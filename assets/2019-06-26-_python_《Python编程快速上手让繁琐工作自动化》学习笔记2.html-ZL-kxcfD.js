import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as e,c as o,a as n,b as s,d as i,e as c}from"./app-MsA2k2kn.js";const l={},u=n("h1",{id:"python-《python编程快速上手让繁琐工作自动化》学习笔记2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-《python编程快速上手让繁琐工作自动化》学习笔记2","aria-hidden":"true"},"#"),s(" [python]《Python编程快速上手让繁琐工作自动化》学习笔记2")],-1),r={id:"_1-读写文件笔记-第8章-代码下载",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_1-读写文件笔记-第8章-代码下载","aria-hidden":"true"},"#",-1),d={href:"https://github.com/luohenyueji/Python-Study-Notes/tree/master/Automate%20the%20Boring%20Stuff%20with%20Python",target:"_blank",rel:"noopener noreferrer"},v=c(`<h3 id="_1-1-文件与文件路径" tabindex="-1"><a class="header-anchor" href="#_1-1-文件与文件路径" aria-hidden="true">#</a> <strong>1.1 文件与文件路径</strong></h3><p>通过import os调用os模块操作目录，常用函数如下：</p><table><thead><tr><th>函数</th><th style="text-align:left;">用途</th></tr></thead><tbody><tr><td>os.getcwd()</td><td style="text-align:left;">取得当前工作路径</td></tr><tr><td>os.chdir()</td><td style="text-align:left;">改变当前工作路径</td></tr><tr><td>os.makedirs(path)</td><td style="text-align:left;">创建新文件夹</td></tr><tr><td>os.listdir(path)</td><td style="text-align:left;">返回文件名字符串的列表</td></tr><tr><td>os.path.join(path1,path2,...)</td><td style="text-align:left;">连接路径</td></tr><tr><td>os.path.abspath(path)</td><td style="text-align:left;">返回绝对路径</td></tr><tr><td>os.path.isabs(path)</td><td style="text-align:left;">检查是否绝对路径</td></tr><tr><td>os.path.relpath(path, start)</td><td style="text-align:left;">返回从start路径到path的相对路径</td></tr><tr><td>os.path.dirname(path)</td><td style="text-align:left;">返回目录名</td></tr><tr><td>os.path.basename(path)</td><td style="text-align:left;">返回文件名</td></tr><tr><td>os.path.split(path)</td><td style="text-align:left;">返回目录名和文件名的元组</td></tr><tr><td>os.path.getsize(path)</td><td style="text-align:left;">返回path参数中文件的字节数</td></tr><tr><td>os.path.exists(path)</td><td style="text-align:left;">检查路径是否存在</td></tr><tr><td>os.path.isfile(path)</td><td style="text-align:left;">检查路径是否文件</td></tr><tr><td>os.path.isdir(path)</td><td style="text-align:left;">检查路径是否文件夹</td></tr></tbody></table><h3 id="_1-2-文件读写" tabindex="-1"><a class="header-anchor" href="#_1-2-文件读写" aria-hidden="true">#</a> <strong>1.2 文件读写</strong></h3><p>在Python 中，读写文件有3 个步骤：</p><ol><li>调用open()函数，返回一个File 对象。</li><li>调用File 对象的read()或write()方法。</li><li>调用File 对象的close()方法，关闭该文件</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 将&#39;w&#39;作为第二个参数传递给open(),以写模式打开该文件</span>
<span class="token comment"># 写模式会清空源文件</span>
baconFile <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;bacon.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span>
baconFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;Hello world!\\n&#39;</span><span class="token punctuation">)</span>
baconFile<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 将&#39;a&#39;作为第二个参数传递给open()，以添加模式打开该文件</span>
<span class="token comment"># 添加模式将在已有文件的末尾添加文本</span>
baconFile <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;bacon.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
baconFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;Bacon is not a vegetable.&#39;</span><span class="token punctuation">)</span>
baconFile<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 读文件</span>
baconFile <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;bacon.txt&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># read将文件的内容看成是单个大字符串</span>
content <span class="token operator">=</span> baconFile<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># readlines从该文件取得一个字符串的列表。列表中的每个字符串就是文本中的每一行</span>
<span class="token comment"># content = baconFile.readlines()</span>
baconFile<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Hello world!
Bacon is not a vegetable.
</code></pre><h2 id="_2-项目练习" tabindex="-1"><a class="header-anchor" href="#_2-项目练习" aria-hidden="true">#</a> 2. 项目练习</h2><h3 id="_2-1-生成随机的测验试卷文件" tabindex="-1"><a class="header-anchor" href="#_2-1-生成随机的测验试卷文件" aria-hidden="true">#</a> 2.1 生成随机的测验试卷文件</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token keyword">import</span> random


<span class="token comment"># 测验数据</span>
<span class="token comment"># The quiz data. Keys are states and values are their capitals.</span>
capitals <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;Alabama&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Montgomery&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Alaska&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Juneau&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Arizona&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Phoenix&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39;Arkansas&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Little Rock&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;California&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Sacramento&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Colorado&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Denver&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39;Connecticut&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Hartford&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Delaware&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Dover&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Florida&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Tallahassee&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39;Georgia&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Atlanta&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hawaii&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Honolulu&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Idaho&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Boise&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Illinois&#39;</span><span class="token punctuation">:</span>
<span class="token string">&#39;Springfield&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Indiana&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Indianapolis&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Iowa&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Des Moines&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Kansas&#39;</span><span class="token punctuation">:</span>
<span class="token string">&#39;Topeka&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Kentucky&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Frankfort&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Louisiana&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Baton Rouge&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Maine&#39;</span><span class="token punctuation">:</span>
<span class="token string">&#39;Augusta&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Maryland&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Annapolis&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Massachusetts&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Boston&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Michigan&#39;</span><span class="token punctuation">:</span>
<span class="token string">&#39;Lansing&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Minnesota&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Saint Paul&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mississippi&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Jackson&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Missouri&#39;</span><span class="token punctuation">:</span>
<span class="token string">&#39;Jefferson City&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Montana&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Helena&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Nebraska&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Lincoln&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Nevada&#39;</span><span class="token punctuation">:</span>
<span class="token string">&#39;Carson City&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;New Hampshire&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Concord&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;New Jersey&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Trenton&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;New Mexico&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Santa Fe&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;New York&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Albany&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;North Carolina&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Raleigh&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39;North Dakota&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Bismarck&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Ohio&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Columbus&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Oklahoma&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Oklahoma City&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39;Oregon&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Salem&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pennsylvania&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Harrisburg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Rhode Island&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Providence&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39;South Carolina&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Columbia&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;South Dakota&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Pierre&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tennessee&#39;</span><span class="token punctuation">:</span>
<span class="token string">&#39;Nashville&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Texas&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Austin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Utah&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Salt Lake City&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Vermont&#39;</span><span class="token punctuation">:</span>
<span class="token string">&#39;Montpelier&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Virginia&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Richmond&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Washington&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Olympia&#39;</span><span class="token punctuation">,</span> 
<span class="token string">&#39;West Virginia&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Charleston&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Wisconsin&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Madison&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Wyoming&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Cheyenne&#39;</span><span class="token punctuation">}</span>
    
    
<span class="token comment"># 生成试卷</span>
<span class="token comment"># 试卷份数    </span>
n_quiz<span class="token operator">=</span><span class="token number">2</span>
<span class="token keyword">for</span> quizNum <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n_quiz<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Create the quiz and answer key files.</span>
    <span class="token comment"># 试卷</span>
    quizFile <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;capitalsquiz%s.txt&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>quizNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 答案</span>
    answerKeyFile <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;capitalsquiz_answers%s.txt&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>quizNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># Write out the header for the quiz.</span>
    <span class="token comment"># 头文件</span>
    quizFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;Name:\\n\\nDate:\\n\\nPeriod:\\n\\n&#39;</span><span class="token punctuation">)</span>
    quizFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;State Capitals Quiz (Form %s)&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>quizNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    quizFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;\\n\\n&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># Shuffle the order of the states.</span>
    states <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>capitals<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建了美国州名的随机列表</span>
    random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>states<span class="token punctuation">)</span>    
    
    
    <span class="token comment"># 创建答案    </span>
    <span class="token comment"># Loop through all 50 states, making a question for each.</span>
    <span class="token keyword">for</span> questionNum <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Get right and wrong answers.</span>
        <span class="token comment"># 正确答案</span>
        correctAnswer <span class="token operator">=</span> capitals<span class="token punctuation">[</span>states<span class="token punctuation">[</span>questionNum<span class="token punctuation">]</span><span class="token punctuation">]</span>
        <span class="token comment"># 错误答案</span>
        wrongAnswers <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>capitals<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># 删除正确的答案</span>
        <span class="token keyword">del</span> wrongAnswers<span class="token punctuation">[</span>wrongAnswers<span class="token punctuation">.</span>index<span class="token punctuation">(</span>correctAnswer<span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token comment"># 随机取出三个答案</span>
        wrongAnswers <span class="token operator">=</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>wrongAnswers<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
        answerOptions <span class="token operator">=</span> wrongAnswers <span class="token operator">+</span> <span class="token punctuation">[</span>correctAnswer<span class="token punctuation">]</span>
        random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>answerOptions<span class="token punctuation">)</span>    
    
        <span class="token comment"># 将内容写入测验试卷和答案文件</span>
        <span class="token comment"># Write the question and the answer options to the quiz file.</span>
        quizFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;%s. What is the capital of %s?\\n&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>questionNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>states<span class="token punctuation">[</span>questionNum<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        
    
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            quizFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39; %s. %s\\n&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token string">&#39;ABCD&#39;</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> answerOptions<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        quizFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
        
        <span class="token comment"># Write the answer key to a file.   </span>
        answerKeyFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;%s. %s\\n&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>questionNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;ABCD&#39;</span><span class="token punctuation">[</span>answerOptions<span class="token punctuation">.</span>index<span class="token punctuation">(</span>correctAnswer<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    quizFile<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    answerKeyFile<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-疯狂填词" tabindex="-1"><a class="header-anchor" href="#_2-2-疯狂填词" aria-hidden="true">#</a> 2.2 疯狂填词</h3><p>创建一个疯狂填词（Mad Libs）程序，它将读入文本文件，并让用户在该文本文件中出现ADJECTIVE、NOUN、ADVERB 或VERB 等单词的地方，加上他们自己的文本。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re

<span class="token comment"># text:</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
The ADJECTIVE panda walked to the NOUN and then VERB. A nearby NOUN was unaffected by these events
&#39;&#39;&#39;</span>
<span class="token comment"># 输入文件</span>
input_file <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;./input_text.txt&#39;</span><span class="token punctuation">)</span>
input_text <span class="token operator">=</span> input_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
input_file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 输出文本</span>
output_text <span class="token operator">=</span> input_text

<span class="token comment"># 输入文本寻找关键词</span>
keywords <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&#39;adjective|noun|verb&#39;</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>IGNORECASE<span class="token punctuation">)</span>
mo <span class="token operator">=</span> keywords<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>input_text<span class="token punctuation">)</span>

<span class="token comment"># 一个一个词进行替换</span>
<span class="token keyword">for</span> word <span class="token keyword">in</span> mo<span class="token punctuation">:</span>
    <span class="token keyword">if</span> word<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span>
        replacewords <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;Enter an {}:\\n&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        replacewords <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;Enter a {}:\\n&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span>
    regex <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span>
    <span class="token comment"># 每一次替换一个词</span>
    output_text <span class="token operator">=</span> regex<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>replacewords<span class="token punctuation">,</span> output_text<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 写入新文件</span>
output_file <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;output_text.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span>
output_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>output_text<span class="token punctuation">)</span>
output_file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>output_text<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Enter an ADJECTIVE:
silly
Enter a NOUN:
chandelier
Enter a VERB:
screamed
Enter a NOUN:
pickup truck
The silly panda walked to the chandelier and then screamed. A nearby pickup truck was unaffected by these events.
</code></pre><h3 id="_2-3-正则表达式查找" tabindex="-1"><a class="header-anchor" href="#_2-3-正则表达式查找" aria-hidden="true">#</a> 2.3 正则表达式查找</h3><p>编写一个程序，打开文件夹中所有的.txt 文件，查找匹配用户提供的正则表达式的所有行。结果应该打印到屏幕上。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">import</span> os
<span class="token keyword">import</span> re

path <span class="token operator">=</span> <span class="token string">&quot;./&quot;</span>

<span class="token comment"># 判断路径目录是否存在</span>
folder <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">if</span> folder <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;文件目录不存在！&quot;</span><span class="token punctuation">)</span>


<span class="token comment">#返回指定目录下所有的文件名和文件夹名列表</span>
file_Name <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">#创建正则表达式</span>
keywords <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&#39;ADJECTIVE&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 找出txt文件</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>file_Name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#判断是否为txt文件</span>
    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span> file_Name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">and</span> file_Name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;txt&#39;</span><span class="token punctuation">:</span>
        <span class="token comment"># 打开文件</span>
        <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span> file_Name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        file_texts <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> texts <span class="token keyword">in</span> file_texts<span class="token punctuation">:</span>
            <span class="token comment">#找出匹配正则表达式的内容</span>
            text_put <span class="token operator">=</span> keywords<span class="token punctuation">.</span>search<span class="token punctuation">(</span>texts<span class="token punctuation">)</span>
            <span class="token comment">#输出结果</span>
            <span class="token keyword">if</span> text_put <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token comment">#打印当前行</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>texts<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>The ADJECTIVE panda walked to the NOUN and then VERB. A nearby NOUN was unaffected by these events.
</code></pre>`,19);function m(b,g){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("h2",r,[k,s(" 1. 读写文件笔记（第8章）"),n("a",d,[s("(代码下载)"),i(a)])]),v])}const w=t(l,[["render",m],["__file","2019-06-26-_python_《Python编程快速上手让繁琐工作自动化》学习笔记2.html.vue"]]);export{w as default};
