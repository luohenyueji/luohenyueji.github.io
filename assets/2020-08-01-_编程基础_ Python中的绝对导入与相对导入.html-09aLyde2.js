const t=JSON.parse('{"key":"v-6c427e5c","path":"/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2020-08-01-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20Python%E4%B8%AD%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%AF%BC%E5%85%A5%E4%B8%8E%E7%9B%B8%E5%AF%B9%E5%AF%BC%E5%85%A5.html","title":"[编程基础] Python中的绝对导入与相对导入","lang":"zh-CN","frontmatter":{"date":"2020-08-01T22:08:54.000Z","category":["编程基础"],"tag":["Python","编程基础"],"description":"[编程基础] Python中的绝对导入与相对导入 如果您从事的Python项目有多个文件，那么您以前可能不得不使用import语句。即使对于拥有多个项目的Python重度使用者（比如我），import也可能会造成混淆！您可能正在阅读本文，因为您想对Python中的import（尤其是绝对导入和相对导入）有更深入的了解。 在本教程中，您将学习两者之间的区别以及它们的优缺点。让我们潜入吧！ 1 Imports快速介绍 Python模块是具有.py扩展名的文件，而Python包是其中具有模块的任何文件夹（或者在Python 2中是包含__init__.py文件的文件夹）。当一个模块中的代码需要访问另一模块或程序包中的代码时，你需要导入它。","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2020-08-01-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20Python%E4%B8%AD%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%AF%BC%E5%85%A5%E4%B8%8E%E7%9B%B8%E5%AF%B9%E5%AF%BC%E5%85%A5.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[编程基础] Python中的绝对导入与相对导入"}],["meta",{"property":"og:description","content":"[编程基础] Python中的绝对导入与相对导入 如果您从事的Python项目有多个文件，那么您以前可能不得不使用import语句。即使对于拥有多个项目的Python重度使用者（比如我），import也可能会造成混淆！您可能正在阅读本文，因为您想对Python中的import（尤其是绝对导入和相对导入）有更深入的了解。 在本教程中，您将学习两者之间的区别以及它们的优缺点。让我们潜入吧！ 1 Imports快速介绍 Python模块是具有.py扩展名的文件，而Python包是其中具有模块的任何文件夹（或者在Python 2中是包含__init__.py文件的文件夹）。当一个模块中的代码需要访问另一模块或程序包中的代码时，你需要导入它。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"编程基础"}],["meta",{"property":"article:published_time","content":"2020-08-01T22:08:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[编程基础] Python中的绝对导入与相对导入\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-08-01T22:08:54.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1 Imports快速介绍","slug":"_1-imports快速介绍","link":"#_1-imports快速介绍","children":[]},{"level":2,"title":"2 import语句的语法","slug":"_2-import语句的语法","link":"#_2-import语句的语法","children":[{"level":3,"title":"2.1 基本使用","slug":"_2-1-基本使用","link":"#_2-1-基本使用","children":[]},{"level":3,"title":"2.2 导入声明的样式","slug":"_2-2-导入声明的样式","link":"#_2-2-导入声明的样式","children":[]}]},{"level":2,"title":"3 绝对import和相对import","slug":"_3-绝对import和相对import","link":"#_3-绝对import和相对import","children":[{"level":3,"title":"3.1 绝对import","slug":"_3-1-绝对import","link":"#_3-1-绝对import","children":[]},{"level":3,"title":"3.2 相对导入","slug":"_3-2-相对导入","link":"#_3-2-相对导入","children":[]}]},{"level":2,"title":"4 参考","slug":"_4-参考","link":"#_4-参考","children":[]}],"git":{},"readingTime":{"minutes":7.92,"words":2376},"filePathRelative":"blog/编程基础/学习笔记/2020-08-01-[编程基础] Python中的绝对导入与相对导入.md","localizedDate":"2020年8月2日","excerpt":"<h1> [编程基础] Python中的绝对导入与相对导入</h1>\\n<p>如果您从事的Python项目有多个文件，那么您以前可能不得不使用import语句。即使对于拥有多个项目的Python重度使用者（比如我），import也可能会造成混淆！您可能正在阅读本文，因为您想对Python中的import（尤其是绝对导入和相对导入）有更深入的了解。</p>\\n<p>在本教程中，您将学习两者之间的区别以及它们的优缺点。让我们潜入吧！</p>\\n<h2> 1 Imports快速介绍</h2>\\n<p>Python模块是具有.py扩展名的文件，而Python包是其中具有模块的任何文件夹（或者在Python 2中是包含__init__.py文件的文件夹）。当一个模块中的代码需要访问另一模块或程序包中的代码时，你需要导入它。</p>","autoDesc":true}');export{t as data};
