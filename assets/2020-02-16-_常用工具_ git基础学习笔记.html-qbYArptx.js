import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o,c as i,a as e,b as a,d as c,e as n}from"./app-MsA2k2kn.js";const d={},l=e("h1",{id:"常用工具-git基础学习笔记",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#常用工具-git基础学习笔记","aria-hidden":"true"},"#"),a(" [常用工具] git基础学习笔记")],-1),s=e("h2",{id:"git基础学习笔记",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#git基础学习笔记","aria-hidden":"true"},"#"),a(" git基础学习笔记")],-1),b={href:"https://www.bilibili.com/video/av55780016?from=search&seid=6725798635139052580",target:"_blank",rel:"noopener noreferrer"},u=n('<h3 id="添加推送信息-m-message" tabindex="-1"><a class="header-anchor" href="#添加推送信息-m-message" aria-hidden="true">#</a> 添加推送信息，-m= message</h3><blockquote><p>git commit -m &quot;添加注释&quot;</p></blockquote><h3 id="查看状态" tabindex="-1"><a class="header-anchor" href="#查看状态" aria-hidden="true">#</a> 查看状态</h3><blockquote><p>git status</p></blockquote><h3 id="显示日志记录" tabindex="-1"><a class="header-anchor" href="#显示日志记录" aria-hidden="true">#</a> 显示日志记录</h3><blockquote><p>git log</p></blockquote><h3 id="根据commit的sha码-显示当时操作记录" tabindex="-1"><a class="header-anchor" href="#根据commit的sha码-显示当时操作记录" aria-hidden="true">#</a> 根据commit的sha码，显示当时操作记录</h3><blockquote><p>git show</p></blockquote><h3 id="根据commit的sha码-回滚版本" tabindex="-1"><a class="header-anchor" href="#根据commit的sha码-回滚版本" aria-hidden="true">#</a> 根据commit的sha码，回滚版本</h3><blockquote><p>git reset shacode</p></blockquote><h3 id="清除git已有账号密码" tabindex="-1"><a class="header-anchor" href="#清除git已有账号密码" aria-hidden="true">#</a> 清除git已有账号密码</h3><blockquote><p>git config --global --unset credential.helper</p></blockquote><h3 id="设置只有第一次上传代码才更新账号密码" tabindex="-1"><a class="header-anchor" href="#设置只有第一次上传代码才更新账号密码" aria-hidden="true">#</a> 设置只有第一次上传代码才更新账号密码</h3><blockquote><p>git config --global credential.helper store</p></blockquote><h3 id="重命名clone下来的仓库名字为other" tabindex="-1"><a class="header-anchor" href="#重命名clone下来的仓库名字为other" aria-hidden="true">#</a> 重命名clone下来的仓库名字为other</h3><blockquote><p>git clone https://gitee.com/abc/demo.git other</p></blockquote><h3 id="解决修改冲突" tabindex="-1"><a class="header-anchor" href="#解决修改冲突" aria-hidden="true">#</a> 解决修改冲突</h3><p>把你修改的代码进行备份，然后执行命令：</p><ol><li>git reset --hard origin/master</li><li>git pull</li><li>从你备份好的文件当中把你写的代码拿过去，修改完成再进行git push</li></ol><h3 id="创建分支branch1" tabindex="-1"><a class="header-anchor" href="#创建分支branch1" aria-hidden="true">#</a> 创建分支branch1</h3><blockquote><p>git branch branch1</p></blockquote><h3 id="切换分支到branch1" tabindex="-1"><a class="header-anchor" href="#切换分支到branch1" aria-hidden="true">#</a> 切换分支到branch1</h3><blockquote><p>git branch branch1</p></blockquote><h3 id="推送并创建分支branch1到远端" tabindex="-1"><a class="header-anchor" href="#推送并创建分支branch1到远端" aria-hidden="true">#</a> 推送并创建分支branch1到远端</h3><blockquote><p>git push --set-upstream origin branch1</p></blockquote><h3 id="查看本地分支" tabindex="-1"><a class="header-anchor" href="#查看本地分支" aria-hidden="true">#</a> 查看本地分支</h3><blockquote><p>git branch</p></blockquote><h3 id="查看远端所有分支" tabindex="-1"><a class="header-anchor" href="#查看远端所有分支" aria-hidden="true">#</a> 查看远端所有分支</h3><blockquote><p>git branch -a</p></blockquote><h3 id="合并分支branch1" tabindex="-1"><a class="header-anchor" href="#合并分支branch1" aria-hidden="true">#</a> 合并分支branch1</h3><blockquote><p>git merge branch1</p></blockquote><h3 id="切换到远端分支branch2" tabindex="-1"><a class="header-anchor" href="#切换到远端分支branch2" aria-hidden="true">#</a> 切换到远端分支branch2</h3><blockquote><p>git checkout -b branch2 origin/branch2</p></blockquote><h3 id="删除本地分支branch3" tabindex="-1"><a class="header-anchor" href="#删除本地分支branch3" aria-hidden="true">#</a> 删除本地分支branch3</h3><blockquote><p>git branch -d branch3</p></blockquote><h3 id="删除远程分支branch2" tabindex="-1"><a class="header-anchor" href="#删除远程分支branch2" aria-hidden="true">#</a> 删除远程分支branch2</h3><blockquote><p>git push -d origin branch2</p></blockquote><h3 id="根据commit的sha码将本地版本回退到某个commit" tabindex="-1"><a class="header-anchor" href="#根据commit的sha码将本地版本回退到某个commit" aria-hidden="true">#</a> 根据commit的sha码将本地版本回退到某个commit</h3><blockquote><p>git reset --hard shacode</p></blockquote><h3 id="强制将版本回退推送到远程" tabindex="-1"><a class="header-anchor" href="#强制将版本回退推送到远程" aria-hidden="true">#</a> 强制将版本回退推送到远程</h3><blockquote><p>git push origin HEAD --force</p></blockquote><h3 id="查看本地推送用户姓名" tabindex="-1"><a class="header-anchor" href="#查看本地推送用户姓名" aria-hidden="true">#</a> 查看本地推送用户姓名</h3><blockquote><p>git config user.name</p></blockquote><h3 id="查看本地推送用户邮箱" tabindex="-1"><a class="header-anchor" href="#查看本地推送用户邮箱" aria-hidden="true">#</a> 查看本地推送用户邮箱</h3><blockquote><p>git config user.email</p></blockquote><h3 id="更改本地推送用户姓名" tabindex="-1"><a class="header-anchor" href="#更改本地推送用户姓名" aria-hidden="true">#</a> 更改本地推送用户姓名</h3><blockquote><p>git config --global user.name &quot;hello&quot;</p></blockquote><h3 id="更改本地推送用户邮箱" tabindex="-1"><a class="header-anchor" href="#更改本地推送用户邮箱" aria-hidden="true">#</a> 更改本地推送用户邮箱</h3><blockquote><p>git config --global user.email &quot;sample@sample.com&quot;</p></blockquote>',49);function p(g,m){const h=t("ExternalLinkIcon");return o(),i("div",null,[l,s,e("p",null,[a("git基础学习笔记，参考视频："),e("a",b,[a("1小时玩转 Git/Github"),c(h)])]),u])}const f=r(d,[["render",p],["__file","2020-02-16-_常用工具_ git基础学习笔记.html.vue"]]);export{f as default};
