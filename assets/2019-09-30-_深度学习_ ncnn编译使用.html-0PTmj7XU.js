import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as l,a as n,b as s,d as e,e as t}from"./app-MsA2k2kn.js";const i={},u=t(`<h1 id="深度学习-ncnn编译使用" tabindex="-1"><a class="header-anchor" href="#深度学习-ncnn编译使用" aria-hidden="true">#</a> [深度学习] ncnn编译使用</h1><h2 id="工程" tabindex="-1"><a class="header-anchor" href="#工程" aria-hidden="true">#</a> 工程</h2><h3 id="ncnn工程编译使用-cpu" tabindex="-1"><a class="header-anchor" href="#ncnn工程编译使用-cpu" aria-hidden="true">#</a> ncnn工程编译使用(cpu)</h3><p>在linux下建立如CMakeLists文件即可编译生成ncnn工程</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 最低cmake版本</span>
cmake_minimum_required<span class="token punctuation">(</span>VERSION <span class="token number">3.2</span><span class="token punctuation">)</span>
<span class="token comment">## 工程名</span>
project<span class="token punctuation">(</span>ncnnTest<span class="token punctuation">)</span>
<span class="token comment">## 添加OpenCV支持</span>
find_package<span class="token punctuation">(</span>OpenCV REQUIRED<span class="token punctuation">)</span>
<span class="token comment">## 添加OpenMP支持</span>
FIND_PACKAGE<span class="token punctuation">(</span>OpenMP REQUIRED<span class="token punctuation">)</span>  
<span class="token keyword">if</span><span class="token punctuation">(</span>OPENMP_FOUND<span class="token punctuation">)</span>  
    message<span class="token punctuation">(</span><span class="token string">&quot;OPENMP FOUND&quot;</span><span class="token punctuation">)</span>  
    <span class="token builtin">set</span><span class="token punctuation">(</span>CMAKE_C_FLAGS <span class="token string">&quot;\${CMAKE_C_FLAGS} \${OpenMP_C_FLAGS}&quot;</span><span class="token punctuation">)</span>  
    <span class="token builtin">set</span><span class="token punctuation">(</span>CMAKE_CXX_FLAGS <span class="token string">&quot;\${CMAKE_CXX_FLAGS} \${OpenMP_CXX_FLAGS}&quot;</span><span class="token punctuation">)</span>  
    <span class="token builtin">set</span><span class="token punctuation">(</span>CMAKE_EXE_LINKER_FLAGS <span class="token string">&quot;\${CMAKE_EXE_LINKER_FLAGS} \${OpenMP_EXE_LINKER_FLAGS}&quot;</span><span class="token punctuation">)</span>  
endif<span class="token punctuation">(</span><span class="token punctuation">)</span>  
<span class="token comment">## 头文件目录</span>
include_directories<span class="token punctuation">(</span><span class="token operator">/</span>home<span class="token operator">/</span>computerA<span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>include<span class="token operator">/</span>ncnn<span class="token punctuation">)</span>
<span class="token comment">## 库文件目录</span>
link_directories<span class="token punctuation">(</span><span class="token operator">/</span>home<span class="token operator">/</span>computerA<span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>lib<span class="token punctuation">)</span>
<span class="token comment">## 生成可执行文件</span>
add_executable<span class="token punctuation">(</span>ncnnTest test<span class="token punctuation">.</span>cpp<span class="token punctuation">)</span>
<span class="token comment">## 链接</span>
target_link_libraries<span class="token punctuation">(</span>ncnnTest ncnn $<span class="token punctuation">{</span>OpenCV_LIBS<span class="token punctuation">}</span> <span class="token operator">/</span>home<span class="token operator">/</span>computerA<span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>lib<span class="token operator">/</span>libncnn<span class="token punctuation">.</span>a<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ncnn工程编译使用-vulkan" tabindex="-1"><a class="header-anchor" href="#ncnn工程编译使用-vulkan" aria-hidden="true">#</a> ncnn工程编译使用(vulkan)</h3><p>vulkan版本要多一些步骤，比如添加vulkan库和glslang库。具体如下:</p><p><strong>step1 添加vulkan环境变量</strong></p><ol><li>命令行输入 sudo vim ~/.bashrc</li><li>添加如下vulkan库文件路径</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export VULKAN_SDK={yourpath}/vulkansdk/x86_64 &amp;&amp;
export PATH=$VULKAN_SDK/bin:$PATH &amp;&amp;
export LD_LIBRARY_PATH=$VULKAN_SDK/lib:$LD_LIBRARY_PATH &amp;&amp;
export LIBRARY_PATH=$VULKAN_SDK/lib:$LIBRARY_PATH &amp;&amp;
export VK_LAYER_PATH=$VULKAN_SDK/etc/vulkan/explicit_layer.d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>命令行输入source ~/.bashrc</li></ol><p><strong>step2 编写CMakeLists文件</strong></p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>## 最低cmake版本
<span class="token function">cmake_minimum_required</span><span class="token punctuation">(</span>VERSION <span class="token number">3.2</span><span class="token punctuation">)</span>
## 工程名
<span class="token function">project</span><span class="token punctuation">(</span>ncnnTest<span class="token punctuation">)</span>
## 添加OpenCV支持
<span class="token function">find_package</span><span class="token punctuation">(</span>OpenCV REQUIRED<span class="token punctuation">)</span>
## 添加OpenMP支持
<span class="token function">FIND_PACKAGE</span><span class="token punctuation">(</span>OpenMP REQUIRED<span class="token punctuation">)</span>  
<span class="token keyword">if</span><span class="token punctuation">(</span>OPENMP_FOUND<span class="token punctuation">)</span>  
    <span class="token function">message</span><span class="token punctuation">(</span><span class="token string">&quot;OPENMP FOUND&quot;</span><span class="token punctuation">)</span>  
    <span class="token function">set</span><span class="token punctuation">(</span>CMAKE_C_FLAGS <span class="token string">&quot;\${CMAKE_C_FLAGS} \${OpenMP_C_FLAGS}&quot;</span><span class="token punctuation">)</span>  
    <span class="token function">set</span><span class="token punctuation">(</span>CMAKE_CXX_FLAGS <span class="token string">&quot;\${CMAKE_CXX_FLAGS} \${OpenMP_CXX_FLAGS}&quot;</span><span class="token punctuation">)</span>  
    <span class="token function">set</span><span class="token punctuation">(</span>CMAKE_EXE_LINKER_FLAGS <span class="token string">&quot;\${CMAKE_EXE_LINKER_FLAGS} \${OpenMP_EXE_LINKER_FLAGS}&quot;</span><span class="token punctuation">)</span>  
<span class="token function">endif</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  

## 添加Vulkan支持
<span class="token function">FIND_PACKAGE</span><span class="token punctuation">(</span>Vulkan REQUIRED<span class="token punctuation">)</span>  

## 头文件目录
<span class="token function">include_directories</span><span class="token punctuation">(</span><span class="token punctuation">{</span>yourpath<span class="token punctuation">}</span><span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>include<span class="token operator">/</span>ncnn <span class="token punctuation">{</span>yourpath<span class="token punctuation">}</span><span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>include<span class="token operator">/</span>glslang <span class="token punctuation">{</span>yourpath<span class="token punctuation">}</span><span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>include<span class="token operator">/</span>SPIRV $<span class="token punctuation">{</span>Vulkan_INCLUDE_DIRS<span class="token punctuation">}</span><span class="token punctuation">)</span>
## 库文件目录
<span class="token function">link_directories</span><span class="token punctuation">(</span><span class="token punctuation">{</span>yourpath<span class="token punctuation">}</span><span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>lib<span class="token punctuation">)</span>
## 生成可执行文件
<span class="token function">add_executable</span><span class="token punctuation">(</span>ncnnTest squeezenet<span class="token punctuation">.</span>cpp<span class="token punctuation">)</span>
## 链接
<span class="token function">target_link_libraries</span><span class="token punctuation">(</span>ncnnTest ncnn $<span class="token punctuation">{</span>OpenCV_LIBS<span class="token punctuation">}</span> Vulkan<span class="token double-colon punctuation">::</span>Vulkan <span class="token punctuation">{</span>yourpath<span class="token punctuation">}</span><span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>lib<span class="token operator">/</span>libglslang<span class="token punctuation">.</span>a <span class="token punctuation">{</span>yourpath<span class="token punctuation">}</span><span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>lib<span class="token operator">/</span>libOGLCompiler<span class="token punctuation">.</span>a <span class="token punctuation">{</span>yourpath<span class="token punctuation">}</span><span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>lib<span class="token operator">/</span>libOSDependent<span class="token punctuation">.</span>a <span class="token punctuation">{</span>yourpath<span class="token punctuation">}</span><span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>lib<span class="token operator">/</span>libSPIRV<span class="token punctuation">.</span>a <span class="token punctuation">{</span>yourpath<span class="token punctuation">}</span><span class="token operator">/</span>ncnn<span class="token operator">/</span>build<span class="token operator">/</span>install<span class="token operator">/</span>lib<span class="token operator">/</span>libncnn<span class="token punctuation">.</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),r={href:"https://github.com/zchrissirhcz/cmake_examples",target:"_blank",rel:"noopener noreferrer"},d=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>## 最低cmake版本
cmake_minimum_required(VERSION 3.2)
## 工程名
project(ncnnTest)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

## --- ncnn
## set函数里的路径是指包含ncnnConfig.cmake的目录
set(ncnn_DIR &quot;{yourpath}/ncnn/build/install/lib/cmake/ncnn&quot; CACHE PATH &quot;folder that contains ncnnConfig.cmake&quot;)
find_package(ncnn REQUIRED)

## --- opencv
find_package(OpenCV REQUIRED)

## 生成可执行文件
add_executable(ncnnTest squeezenet.cpp)
target_link_libraries(ncnnTest ncnn \${OpenCV_LIBS})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,2),k={href:"https://blog.csdn.net/weixin_40469821/article/details/102628156",target:"_blank",rel:"noopener noreferrer"},v={href:"https://blog.csdn.net/gaussrieman123/article/details/86646395",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.csdn.net/jiankegai/article/details/106294836",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/zchrissirhcz/cmake_examples",target:"_blank",rel:"noopener noreferrer"};function b(h,E){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("如果随着ncnn版本更新，以上方式不可行。则CMakeLists文件改为如下内容，参考"),n("a",r,[s("cmake_examples"),e(a)])]),d,n("ul",null,[n("li",null,[n("a",k,[s("Linux（Ubuntu）上的VULKAN环境配置步骤记录"),e(a)])]),n("li",null,[n("a",v,[s("在Ubuntu上进行ncnn+vulkan的测试"),e(a)])]),n("li",null,[n("a",m,[s("在windows环境下基于Clion的Vulkan配置"),e(a)])]),n("li",null,[n("a",_,[s("cmake_examples"),e(a)])])])])}const C=p(i,[["render",b],["__file","2019-09-30-_深度学习_ ncnn编译使用.html.vue"]]);export{C as default};
