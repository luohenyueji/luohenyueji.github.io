const t=JSON.parse('{"key":"v-061b4003","path":"/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8/2020-05-29-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A810-packaged_task%E7%A4%BA%E4%BE%8B.html","title":"[编程基础] C++多线程入门10-packaged_task示例","lang":"zh-CN","frontmatter":{"date":"2020-05-29T17:31:09.000Z","category":["编程基础"],"tag":["编程基础"],"description":"[编程基础] C++多线程入门10-packaged_task示例 原始C++标准仅支持单线程编程。新的C++标准(称为C++11或C++0x)于2011年发布。在C++11中，引入了新的线程库。因此运行本文程序需要C++至少符合C++11标准。 10 packaged_task&lt;&gt;示例 在此示例中，我们将讨论c++11中std::packaged_task功能及其用法。std::packaged_task&lt;&gt;是一个类模板，代表一个异步任务。它封装了： 可调用实体，即函数，lambda函数或函数对象。 一种共享状态，用于存储由关联的回调返回或引发的异常的值。","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8/2020-05-29-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A810-packaged_task%E7%A4%BA%E4%BE%8B.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[编程基础] C++多线程入门10-packaged_task示例"}],["meta",{"property":"og:description","content":"[编程基础] C++多线程入门10-packaged_task示例 原始C++标准仅支持单线程编程。新的C++标准(称为C++11或C++0x)于2011年发布。在C++11中，引入了新的线程库。因此运行本文程序需要C++至少符合C++11标准。 10 packaged_task&lt;&gt;示例 在此示例中，我们将讨论c++11中std::packaged_task功能及其用法。std::packaged_task&lt;&gt;是一个类模板，代表一个异步任务。它封装了： 可调用实体，即函数，lambda函数或函数对象。 一种共享状态，用于存储由关联的回调返回或引发的异常的值。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"编程基础"}],["meta",{"property":"article:published_time","content":"2020-05-29T17:31:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[编程基础] C++多线程入门10-packaged_task示例\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-29T17:31:09.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"10 packaged_task<>示例","slug":"_10-packaged-task-示例","link":"#_10-packaged-task-示例","children":[{"level":3,"title":"10.1 结合使用packaged_task <>和函数来创建异步任务","slug":"_10-1-结合使用packaged-task-和函数来创建异步任务","link":"#_10-1-结合使用packaged-task-和函数来创建异步任务","children":[]},{"level":3,"title":"10.2 参考","slug":"_10-2-参考","link":"#_10-2-参考","children":[]}]}],"git":{},"readingTime":{"minutes":4.6,"words":1380},"filePathRelative":"blog/编程基础/C++多线程入门/2020-05-29-[编程基础] C++多线程入门10-packaged_task示例.md","localizedDate":"2020年5月30日","excerpt":"<h1> [编程基础] C++多线程入门10-packaged_task示例</h1>\\n<p>原始C++标准仅支持单线程编程。新的C++标准(称为C++11或C++0x)于2011年发布。在C++11中，引入了新的线程库。因此运行本文程序需要C++至少符合C++11标准。</p>\\n<h2> 10 packaged_task&lt;&gt;示例</h2>\\n<p>在此示例中，我们将讨论c++11中std::packaged_task功能及其用法。std::packaged_task&lt;&gt;是一个类模板，代表一个异步任务。它封装了：</p>\\n<ol>\\n<li>可调用实体，即函数，lambda函数或函数对象。</li>\\n<li>一种共享状态，用于存储由关联的回调返回或引发的异常的值。</li>\\n</ol>","autoDesc":true}');export{t as data};
