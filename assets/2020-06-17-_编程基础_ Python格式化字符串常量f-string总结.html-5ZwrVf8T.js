const t=JSON.parse(`{"key":"v-710e700b","path":"/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2020-06-17-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20Python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8Ff-string%E6%80%BB%E7%BB%93.html","title":"[编程基础] Python格式化字符串常量f-string总结","lang":"zh-CN","frontmatter":{"date":"2020-06-17T20:46:52.000Z","category":["编程基础"],"tag":["编程基础","Python"],"description":"[编程基础] Python格式化字符串常量f-string总结 本文主要总结在Python中如何使用格式化字符串常量f-string(Formatted string literals)。在 Python 程序中，大部分时间都是使用 %s 或 format 来格式化字符串，在 Python 3.6 中新的选择 f-string可以用于格式化字符串。相比于其他字符串格式方式，f-string更快，更易读，更简明且不易出错。f-string通过f或 F 修饰字符串，如f'xxx' 或 F'xxx'），以大括号 {}表示被替换的字段。对齐的格式在冒号后指定；例如：f'{price：.3}，其中price是变量名。","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2020-06-17-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20Python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8Ff-string%E6%80%BB%E7%BB%93.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[编程基础] Python格式化字符串常量f-string总结"}],["meta",{"property":"og:description","content":"[编程基础] Python格式化字符串常量f-string总结 本文主要总结在Python中如何使用格式化字符串常量f-string(Formatted string literals)。在 Python 程序中，大部分时间都是使用 %s 或 format 来格式化字符串，在 Python 3.6 中新的选择 f-string可以用于格式化字符串。相比于其他字符串格式方式，f-string更快，更易读，更简明且不易出错。f-string通过f或 F 修饰字符串，如f'xxx' 或 F'xxx'），以大括号 {}表示被替换的字段。对齐的格式在冒号后指定；例如：f'{price：.3}，其中price是变量名。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"编程基础"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:published_time","content":"2020-06-17T20:46:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[编程基础] Python格式化字符串常量f-string总结\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-17T20:46:52.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1 语法","slug":"_1-语法","link":"#_1-语法","children":[{"level":3,"title":"1.1 Python字符串格式","slug":"_1-1-python字符串格式","link":"#_1-1-python字符串格式","children":[]},{"level":3,"title":"1.2 Python f-string中使用表达式","slug":"_1-2-python-f-string中使用表达式","link":"#_1-2-python-f-string中使用表达式","children":[]},{"level":3,"title":"1.3 Python f-string中使用字典","slug":"_1-3-python-f-string中使用字典","link":"#_1-3-python-f-string中使用字典","children":[]},{"level":3,"title":"1.4 Python多行f-string","slug":"_1-4-python多行f-string","link":"#_1-4-python多行f-string","children":[]},{"level":3,"title":"1.5 Python f-string对象","slug":"_1-5-python-f-string对象","link":"#_1-5-python-f-string对象","children":[]},{"level":3,"title":"1.6 Python f-string中转义字符","slug":"_1-6-python-f-string中转义字符","link":"#_1-6-python-f-string中转义字符","children":[]},{"level":3,"title":"1.7 Python f-string中格式化 datetime","slug":"_1-7-python-f-string中格式化-datetime","link":"#_1-7-python-f-string中格式化-datetime","children":[]},{"level":3,"title":"1.8 Python f-string中格式化 floats","slug":"_1-8-python-f-string中格式化-floats","link":"#_1-8-python-f-string中格式化-floats","children":[]},{"level":3,"title":"1.9 Python f-string中字符宽度","slug":"_1-9-python-f-string中字符宽度","link":"#_1-9-python-f-string中字符宽度","children":[]},{"level":3,"title":"1.10 Python f-string对齐字符串","slug":"_1-10-python-f-string对齐字符串","link":"#_1-10-python-f-string对齐字符串","children":[]},{"level":3,"title":"1.11 Python f-string中进制表示","slug":"_1-11-python-f-string中进制表示","link":"#_1-11-python-f-string中进制表示","children":[]}]},{"level":2,"title":"2 参考","slug":"_2-参考","link":"#_2-参考","children":[]}],"git":{},"readingTime":{"minutes":3.58,"words":1075},"filePathRelative":"blog/编程基础/学习笔记/2020-06-17-[编程基础] Python格式化字符串常量f-string总结.md","localizedDate":"2020年6月18日","excerpt":"<h1> [编程基础] Python格式化字符串常量f-string总结</h1>\\n<p>本文主要总结在Python中如何使用格式化字符串常量f-string(Formatted string literals)。在 Python 程序中，大部分时间都是使用 %s 或 format 来格式化字符串，在 Python 3.6 中新的选择 f-string可以用于格式化字符串。相比于其他字符串格式方式，f-string更快，更易读，更简明且不易出错。f-string通过f或 F 修饰字符串，如f'xxx' 或 F'xxx'），以大括号 {}表示被替换的字段。对齐的格式在冒号后指定；例如：f'{price：.3}，其中price是变量名。</p>","autoDesc":true}`);export{t as data};
