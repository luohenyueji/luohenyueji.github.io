const e=JSON.parse('{"key":"v-b0b69980","path":"/blog/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E4%B8%8E%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/2023-08-21-_%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB_%20%E5%9F%BA%E4%BA%8EPython%E6%9E%84%E5%BB%BA%E7%AE%80%E6%98%93%E7%9A%84%E9%9F%B3%E9%A2%91%E5%BD%95%E5%88%B6%E4%B8%8E%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB%E5%BA%94%E7%94%A8.html","title":"[语音识别] 基于Python构建简易的音频录制与语音识别应用","lang":"zh-CN","frontmatter":{"date":"2023-08-21T12:10:33.000Z","tag":["Python","自然语言处理与语音识别","音视频处理"],"category":["自然语言处理与语音识别"],"description":"[语音识别] 基于Python构建简易的音频录制与语音识别应用 语音识别技术的快速发展为实现更多智能化应用提供了无限可能。本文旨在介绍一个基于Python实现的简易音频录制与语音识别应用。文章简要介绍相关技术的应用，重点放在音频录制方面，而语音识别则关注于调用相关的语音识别库。本文将首先概述一些音频基础概念，然后详细讲解如何利用PyAudio库和SpeechRecognition库实现音频录制功能。最后，构建一个简单的语音识别示例应用，该应用程序可以实时监听音频的开始和结束，并将录制的音频数据传输至Whisper语音识别库进行语音识别，最终将识别结果输出到基于PyQt5搭建的简易页面中。","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E4%B8%8E%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/2023-08-21-_%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB_%20%E5%9F%BA%E4%BA%8EPython%E6%9E%84%E5%BB%BA%E7%AE%80%E6%98%93%E7%9A%84%E9%9F%B3%E9%A2%91%E5%BD%95%E5%88%B6%E4%B8%8E%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB%E5%BA%94%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[语音识别] 基于Python构建简易的音频录制与语音识别应用"}],["meta",{"property":"og:description","content":"[语音识别] 基于Python构建简易的音频录制与语音识别应用 语音识别技术的快速发展为实现更多智能化应用提供了无限可能。本文旨在介绍一个基于Python实现的简易音频录制与语音识别应用。文章简要介绍相关技术的应用，重点放在音频录制方面，而语音识别则关注于调用相关的语音识别库。本文将首先概述一些音频基础概念，然后详细讲解如何利用PyAudio库和SpeechRecognition库实现音频录制功能。最后，构建一个简单的语音识别示例应用，该应用程序可以实时监听音频的开始和结束，并将录制的音频数据传输至Whisper语音识别库进行语音识别，最终将识别结果输出到基于PyQt5搭建的简易页面中。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"自然语言处理与语音识别"}],["meta",{"property":"article:tag","content":"音视频处理"}],["meta",{"property":"article:published_time","content":"2023-08-21T12:10:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[语音识别] 基于Python构建简易的音频录制与语音识别应用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-21T12:10:33.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"0 音频基础概念","slug":"_0-音频基础概念","link":"#_0-音频基础概念","children":[]},{"level":2,"title":"1 PyAudio","slug":"_1-pyaudio","link":"#_1-pyaudio","children":[{"level":3,"title":"1.1 PyAudio介绍与安装","slug":"_1-1-pyaudio介绍与安装","link":"#_1-1-pyaudio介绍与安装","children":[]},{"level":3,"title":"1.2 音频录制与播放","slug":"_1-2-音频录制与播放","link":"#_1-2-音频录制与播放","children":[]},{"level":3,"title":"1.3 回调函数的使用","slug":"_1-3-回调函数的使用","link":"#_1-3-回调函数的使用","children":[]},{"level":3,"title":"1.4 设备管理","slug":"_1-4-设备管理","link":"#_1-4-设备管理","children":[]}]},{"level":2,"title":"2 SpeechRecognition","slug":"_2-speechrecognition","link":"#_2-speechrecognition","children":[{"level":3,"title":"2.1 SpeechRecognition介绍与安装","slug":"_2-1-speechrecognition介绍与安装","link":"#_2-1-speechrecognition介绍与安装","children":[]},{"level":3,"title":"2.2 示例代码","slug":"_2-2-示例代码","link":"#_2-2-示例代码","children":[]}]},{"level":2,"title":"3 语音识别示例应用","slug":"_3-语音识别示例应用","link":"#_3-语音识别示例应用","children":[]},{"level":2,"title":"4 参考","slug":"_4-参考","link":"#_4-参考","children":[]}],"git":{},"readingTime":{"minutes":32.03,"words":9609},"filePathRelative":"blog/自然语言处理与语音识别/2023-08-21-[语音识别] 基于Python构建简易的音频录制与语音识别应用.md","localizedDate":"2023年8月21日","excerpt":"<h1> [语音识别] 基于Python构建简易的音频录制与语音识别应用</h1>\\n<p>语音识别技术的快速发展为实现更多智能化应用提供了无限可能。本文旨在介绍一个基于Python实现的简易音频录制与语音识别应用。文章简要介绍相关技术的应用，重点放在音频录制方面，而语音识别则关注于调用相关的语音识别库。本文将首先概述一些音频基础概念，然后详细讲解如何利用PyAudio库和SpeechRecognition库实现音频录制功能。最后，构建一个简单的语音识别示例应用，该应用程序可以实时监听音频的开始和结束，并将录制的音频数据传输至Whisper语音识别库进行语音识别，最终将识别结果输出到基于PyQt5搭建的简易页面中。</p>","autoDesc":true}');export{e as data};
