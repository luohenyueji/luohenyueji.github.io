const t=JSON.parse('{"key":"v-436cdf58","path":"/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8/2020-05-29-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A88-%E4%BB%8E%E7%BA%BF%E7%A8%8B%E8%BF%94%E5%9B%9E%E5%80%BC.html","title":"[编程基础] C++多线程入门8-从线程返回值","lang":"zh-CN","frontmatter":{"date":"2020-05-29T17:09:34.000Z","category":["编程基础"],"tag":["编程基础"],"description":"[编程基础] C++多线程入门8-从线程返回值 原始C++标准仅支持单线程编程。新的C++标准(称为C++11或C++0x)于2011年发布。在C++11中，引入了新的线程库。因此运行本文程序需要C++至少符合C++11标准。 8 从线程返回值 8.1 使用说明 一个std::future对象可以与asych，std::packaged_task和std::promise一起使用。本文将主要关注将std::future与std::promise对象一起使用。很多时候，我们遇到希望线程返回结果的情况。现在的问题是如何做到这一点？ 让我们举个例子假设在我们的应用程序中，我们创建了一个将压缩给定文件夹的线程，并且我们希望该线程返回新的zip文件名及其结果。现在，我们有两种方法： 使用指针在线程之间共享数据","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8/2020-05-29-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A88-%E4%BB%8E%E7%BA%BF%E7%A8%8B%E8%BF%94%E5%9B%9E%E5%80%BC.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[编程基础] C++多线程入门8-从线程返回值"}],["meta",{"property":"og:description","content":"[编程基础] C++多线程入门8-从线程返回值 原始C++标准仅支持单线程编程。新的C++标准(称为C++11或C++0x)于2011年发布。在C++11中，引入了新的线程库。因此运行本文程序需要C++至少符合C++11标准。 8 从线程返回值 8.1 使用说明 一个std::future对象可以与asych，std::packaged_task和std::promise一起使用。本文将主要关注将std::future与std::promise对象一起使用。很多时候，我们遇到希望线程返回结果的情况。现在的问题是如何做到这一点？ 让我们举个例子假设在我们的应用程序中，我们创建了一个将压缩给定文件夹的线程，并且我们希望该线程返回新的zip文件名及其结果。现在，我们有两种方法： 使用指针在线程之间共享数据"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"编程基础"}],["meta",{"property":"article:published_time","content":"2020-05-29T17:09:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[编程基础] C++多线程入门8-从线程返回值\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-29T17:09:34.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"8 从线程返回值","slug":"_8-从线程返回值","link":"#_8-从线程返回值","children":[{"level":3,"title":"8.1 使用说明","slug":"_8-1-使用说明","link":"#_8-1-使用说明","children":[]},{"level":3,"title":"8.2 参考","slug":"_8-2-参考","link":"#_8-2-参考","children":[]}]}],"git":{},"readingTime":{"minutes":3.61,"words":1082},"filePathRelative":"blog/编程基础/C++多线程入门/2020-05-29-[编程基础] C++多线程入门8-从线程返回值.md","localizedDate":"2020年5月30日","excerpt":"<h1> [编程基础] C++多线程入门8-从线程返回值</h1>\\n<p>原始C++标准仅支持单线程编程。新的C++标准(称为C++11或C++0x)于2011年发布。在C++11中，引入了新的线程库。因此运行本文程序需要C++至少符合C++11标准。</p>\\n<h2> 8 从线程返回值</h2>\\n<h3> 8.1 使用说明</h3>\\n<p>一个std::future对象可以与asych，std::packaged_task和std::promise一起使用。本文将主要关注将std::future与std::promise对象一起使用。很多时候，我们遇到希望线程返回结果的情况。现在的问题是如何做到这一点？\\n让我们举个例子假设在我们的应用程序中，我们创建了一个将压缩给定文件夹的线程，并且我们希望该线程返回新的zip文件名及其结果。现在，我们有两种方法：\\n<strong>使用指针在线程之间共享数据</strong></p>","autoDesc":true}');export{t as data};
