import{_ as n,c as a,a as p,o as l}from"./app-BNuIUq7T.js";const t={};function i(o,e){return l(),a("div",null,e[0]||(e[0]=[p(`<h1 id="opencv实战-40-计算机视觉工具对比" tabindex="-1"><a class="header-anchor" href="#opencv实战-40-计算机视觉工具对比"><span>[OpenCV实战]40 计算机视觉工具对比</span></a></h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1 简介</span></a></h2><p>我们经常将自己的工具与工艺混淆。工具可以帮助您练习手工艺品，但不能使您成为优秀的工匠。一个好的工匠的口袋里有很多不同的工具，所以她明智地使用了适合该工作的工具。她还没有嫁给这些工具。她嫁给了自己的手艺。</p><p>我经常被关于编程语言好坏的战争逗乐，人们对哪一种更好有很强的看法。事实是程序员应该选择适合其任务的语言。是否想快速构建Web应用程序？尝试使用Ruby on Rails或Django。想要为嵌入式设备编写高性能代码。尝试C。</p><p>在计算机视觉中，我们面临着类似的选择。计算机视觉工程师/程序员应该学习哪种工具-使用C++的OpenCV，使用Python的OpenCV或MATLAB？好消息是，今天我们有几种选择！十年前，还没有很好的计算机视觉库。如果您想学习，只需拿起一本书，然后开始编写自己的微型计算机视觉算法库即可。幸运的是，现在情况好多了。</p><p>如果您是初学者，我建议您使用阻力最小的路径，并选择一个您熟悉的工具。如果您是python程序员，请结合使用OpenCV和Python。如果您了解C++，请将C++与OpenCV一起使用。对于MATLAB同样如此。也就是说，几个月后您将不再是初学者。您可能希望将这些新获得的知识应用于现实世界。您可能正在考虑一个新的项目，或者在这个领域寻找新工作。知道如何做出选择是有必要的（有时是字面上的意思）。所以这是我的想法。</p><h2 id="_2-适用于计算机视觉的matlab" tabindex="-1"><a class="header-anchor" href="#_2-适用于计算机视觉的matlab"><span>2 适用于计算机视觉的MATLAB</span></a></h2><p>直到最近，计算机视觉还是一个研究领域，在它的婴儿时期。从事计算机视觉工作的人大多在学术界或研究实验室工作。他们选择的工具是MATLAB，最长一段时间以来，OpenCV与MATLAB及其社区提供的工具相比相形见绌。在过去的7年里，潮流已经改变了。下面是使用MATLAB的一些优点。</p><h3 id="_2-1-为什么要使用matlab进行计算机视觉-优点" tabindex="-1"><a class="header-anchor" href="#_2-1-为什么要使用matlab进行计算机视觉-优点"><span>2.1 为什么要使用MATLAB进行计算机视觉：优点</span></a></h3><ol><li>强大的矩阵库：我们不仅将图像视为计算机视觉中的多维矩阵，而且在各种算法中使用了大量的线性代数。MATLAB的线性代数例程非常强大且运行迅速（正确使用时）。一旦我们需要解决大型稀疏线性系统作为算法的一部分。这是MATLAB中的一行代码-类似于X = A \\ b。我们假设我们的C++实现至少比MATLAB实现快3倍。事实证明，我们的C++实现的第一个版本比MATLAB版本要慢！我们花了几天的时间来匹配MATLAB例程的性能。因此，在MATLAB中，像反斜杠（\\）这样的单个运算符有时是MATLAB会为您适当选择的强大算法的集合。</li><li>工具箱：无论您需要什么，都有一个工具箱。他们有一个图像处理工具箱，一个计算机视觉工具箱以及一个统计和机器学习工具箱，它们提供了各种非常有用的算法的实现。这些功能通常提供一个干净明显的界面。通常将许多计算机视觉问题设置为优化问题。您正在尝试在某些约束下最大化或最小化某些目标函数。MATLAB中的优化工具箱提供了许多优化算法的出色实现。</li><li>可视化和调试工具：使用MATLAB的乐趣之一是编写代码，可视化结果并在一个集成环境中进行调试。环境使您的工作效率极高。</li><li>与OpenCV兼容：您可以使用<a href="http://www.mathworks.com/matlabcentral/fileexchange/47953-computer-vision-system-toolbox-opencv-interface" target="_blank" rel="noopener noreferrer">MATLAB的OpenCV接口</a>与OpenCV交互。</li><li>出色的文档资料：即使是OpenCV的坚定支持者也承认，其文档资料很糟糕。相反，MATLAB附带了出色的文档和示例，可在IDE中轻松访问。仅凭出色的文档，就可以比使用OpenCV更快地在MATLAB 2x中进行编码。与OpenCV相比，MATLAB函数的设计也更好。例如，比较此简单代码以在OpenCV和MATLAB中显示图像。 大多数时候，我只想显示图像。matlab将其称为“im”，而不是强迫我一遍又一遍地键入窗口名称（“ myWindow”）。<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// MATLAB</span></span>
<span class="line"><span>imshow(im); </span></span>
<span class="line"><span></span></span>
<span class="line"><span>// OpenCV </span></span>
<span class="line"><span>imshow(&quot;myWindow&quot;, im);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>大型研究社区：正如我之前提到的，MATLAB在学术界非常流行。最新的研究演示经常作为MATLAB代码共享。如果您想站在最前沿，那么您应该能够阅读MATLAB代码。</li></ol><h3 id="_2-2-为什么不应该将matlab用于计算机视觉-缺点" tabindex="-1"><a class="header-anchor" href="#_2-2-为什么不应该将matlab用于计算机视觉-缺点"><span>2.2 为什么不应该将MATLAB用于计算机视觉：缺点</span></a></h3><ol><li>昂贵的软件使用费：MATLAB非常昂贵（如果你是其他方式哈哈，你懂的那就忽略这条）。如果您通过大学以折扣价获得MATLAB，或者您的公司拥有许可证，则MATLAB是有意义的。</li><li>学习曲线：MATLAB是矩阵引擎。有一种MATLAB编写代码的方式，与通用编程语言（如C++或Python）不同。而且，如果您不以MATLAB方式编写代码，则代码编写可能会非常慢。</li><li>运行时间慢：典型的MATLAB程序运行速度比C++程序慢许多倍。内置的MATLAB例程可以非常快，但是用MATLAB编写的代码通常运行得慢得多。通常，人们最终会用C编码计算密集型部分。</li></ol><h2 id="_3-适用于计算机视觉的opencv-c" tabindex="-1"><a class="header-anchor" href="#_3-适用于计算机视觉的opencv-c"><span>3 适用于计算机视觉的OpenCV（C++）</span></a></h2><p>OpenCV是开发计算机视觉应用程序的主要工具。大部分人的生产版本一直都是基于OpenCV的。让我们看一下利弊。</p><h3 id="_3-1-为什么要使用opencv-c-进行计算机视觉-优点" tabindex="-1"><a class="header-anchor" href="#_3-1-为什么要使用opencv-c-进行计算机视觉-优点"><span>3.1 为什么要使用OpenCV（C++）进行计算机视觉：优点</span></a></h3><ol><li>免费！：OpenCV的大部分内容都是免费的-即像演讲一样免费！您可以在商业应用程序中自由使用OpenCV，并且可以查看源代码并根据需要解决问题。如果使用OpenCV，则不必开源项目。</li><li>庞大的优化库：OpenCV中可用的算法还针对性能进行了优化。使用OpenCV3，您可以使用Transparent API轻松使用计算机上符合OpenCL的设备（例如GPU）。许多算法都有CUDA实现。</li><li>平台和设备：显然，您可以在桌面应用程序中或Web应用程序的后端使用OpenCV。由于OpenCV（C / C++）注重性能，因此它是许多嵌入式视觉应用程序和移动应用程序中选择的视觉库。</li><li>大型社区：有一个使用并支持OpenCV的大型开发人员社区（约有4.7万）。它已被下载超过900万次。与由研究人员组成的MATLAB社区不同，OpenCV社区是来自许多领域和行业的人们的混合体。OpenCV开发由英特尔，AMD和Google等公司资助。不用说，这个博客是这个互相帮助的人的活跃社区的一部分。</li></ol><h3 id="_3-2-为什么不应该将opencv-c-用于计算机视觉-缺点" tabindex="-1"><a class="header-anchor" href="#_3-2-为什么不应该将opencv-c-用于计算机视觉-缺点"><span>3.2 为什么不应该将OpenCV（C++）用于计算机视觉：缺点</span></a></h3><ol><li>初学者比较难：如果您没有C++编程经验，那么使用OpenCV（C++）将会令人生畏。您可能最好改用Python。</li><li>文档薄弱： OpenCV文档不好。有时您需要对算法有一个很好的了解，并实际阅读本文，因为文档并不总是解释参数的含义以及它们如何影响结果。该文档并不总是附带示例代码，这使得它很难理解。OpenCV附带的示例代码虽然非常有用，但是也没有很好地记录下来。我们只是说这是正在进行的工作，人们正在努力改善它。</li><li>小型机器学习库：计算机视觉工程师经常需要许多机器学习例程。与使用OpenCV（Python）时可用的选择相比，OpenCV拥有少量的机器学习算法。</li><li>可视化和调试：在任何C++环境中，调试和可视化都很困难。如果您要从头开始提出新算法，则尤其如此。许多研究者有时将数据转储到磁盘，然后使用MATLAB进行分析</li></ol><h2 id="_4-适用于计算机视觉的opencv-python" tabindex="-1"><a class="header-anchor" href="#_4-适用于计算机视觉的opencv-python"><span>4 适用于计算机视觉的OpenCV（Python）</span></a></h2><p>相信OpenCV的python版本为其流行度做出了很大贡献。它是学习计算机视觉的绝佳选择，并且足以满足各种实际应用。让我们看一下利弊。</p><h3 id="_4-1-为什么要使用opencv-python-进行计算机视觉-优点" tabindex="-1"><a class="header-anchor" href="#_4-1-为什么要使用opencv-python-进行计算机视觉-优点"><span>4.1 为什么要使用OpenCV（Python）进行计算机视觉：优点</span></a></h3><ol><li>易用性：如果您是python程序员，则使用OpenCV（Python）将非常容易。Python是一种易于学习的语言（特别是与C++相比）。它也是一种很好的学习第一语言。</li><li>Python已成为科学计算的语言：几年前，MATLAB被称为科学计算的语言。但是现在，有了OpenCV，numpy，scipy，scikit-learn和matplotlib Python为学习和尝试计算机视觉和机器学习提供了强大的环境。</li><li>可视化和调试：使用OpenCV（Python）时，您可以访问为Python编写的大量库。使用matplotlib的可视化效果与MATLAB差不多。我发现在Python中调试代码比在C++中更容易，但是它与MATLAB的超级易用性并不完全匹配。</li><li>建立网站后端： Python也是建立网站的流行语言。诸如Django，Web2py和Flask之类的框架使您可以快速组合Web应用程序。将OpenCV（Python）与这些Web框架一起使用非常容易。</li></ol><h3 id="_4-2-为什么不应该将opencv-python-用于计算机视觉-缺点" tabindex="-1"><a class="header-anchor" href="#_4-2-为什么不应该将opencv-python-用于计算机视觉-缺点"><span>4.2 为什么不应该将OpenCV（Python）用于计算机视觉：缺点</span></a></h3><ol><li>薄弱的文档：如前所述，OpenCV（C++）文档不是很好。但是python文档更加糟糕。新手用户只能猜测如何使用某些功能。例如，在撰写本文时，几乎找不到cv2.Subdiv2D的python文档。您还会发现有关OpenCV（Python）的教程较少。</li><li>缺乏支持：支持OpenCV的公司（英特尔，AMD，NVidia等）在使用C++版本的OpenCV时遇到了麻烦。他们希望您使用OpenCV并购买其硬件（CPU / GPU等）来运行这些算法。但是，OpenCV（Python）似乎是红头发的继子，似乎并没有引起他们的注意。</li><li>运行时间更慢：与C++相比，Python中的程序运行通常会更慢。要增加额外的麻烦，您可以在OpenCV（C++）中使用GPU（使用CUDA或OpenCL），并使代码运行速度比Python实现快10倍。</li><li>OpenCV用C / C++编写：开源库的一大优点是可以修改它们以满足您的需求。如果要修改OpenCV，则必须修改C / C++源。</li></ol><h2 id="_5-总结" tabindex="-1"><a class="header-anchor" href="#_5-总结"><span>5 总结</span></a></h2><p>作为工程师和工匠，我们需要使用正确的工具来完成正确的工作。最终，您必须学习此行业中的所有工具。根据经验，使用MATLAB / OpenCV（Python）制作新算法的原型，并在生产中使用OpenCV（C++）这是最合适不过的。</p><h2 id="_6-参考" tabindex="-1"><a class="header-anchor" href="#_6-参考"><span>6 参考</span></a></h2><blockquote><p><a href="https://www.learnopencv.com/opencv-c-vs-python-vs-matlab-for-computer-vision/" target="_blank" rel="noopener noreferrer">OpenCV (C++ vs Python) vs MATLAB for Computer Vision</a></p></blockquote>`,28)]))}const h=n(t,[["render",i],["__file","2020-05-07-_OpenCV实战_40 计算机视觉工具对比.html.vue"]]),c=JSON.parse('{"path":"/blog/opencv/opencv%E5%AE%9E%E6%88%98/2020-05-07-_OpenCV%E5%AE%9E%E6%88%98_40%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%B7%A5%E5%85%B7%E5%AF%B9%E6%AF%94.html","title":"[OpenCV实战]40 计算机视觉工具对比","lang":"zh-CN","frontmatter":{"category":["OpenCV"],"date":"2020-05-07T19:34:31.000Z","tag":["OpenCV实战","OpenCV","图像处理"],"description":"[OpenCV实战]40 计算机视觉工具对比 1 简介 我们经常将自己的工具与工艺混淆。工具可以帮助您练习手工艺品，但不能使您成为优秀的工匠。一个好的工匠的口袋里有很多不同的工具，所以她明智地使用了适合该工作的工具。她还没有嫁给这些工具。她嫁给了自己的手艺。 我经常被关于编程语言好坏的战争逗乐，人们对哪一种更好有很强的看法。事实是程序员应该选择适合其任...","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/opencv/opencv%E5%AE%9E%E6%88%98/2020-05-07-_OpenCV%E5%AE%9E%E6%88%98_40%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%B7%A5%E5%85%B7%E5%AF%B9%E6%AF%94.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[OpenCV实战]40 计算机视觉工具对比"}],["meta",{"property":"og:description","content":"[OpenCV实战]40 计算机视觉工具对比 1 简介 我们经常将自己的工具与工艺混淆。工具可以帮助您练习手工艺品，但不能使您成为优秀的工匠。一个好的工匠的口袋里有很多不同的工具，所以她明智地使用了适合该工作的工具。她还没有嫁给这些工具。她嫁给了自己的手艺。 我经常被关于编程语言好坏的战争逗乐，人们对哪一种更好有很强的看法。事实是程序员应该选择适合其任..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"OpenCV实战"}],["meta",{"property":"article:tag","content":"OpenCV"}],["meta",{"property":"article:tag","content":"图像处理"}],["meta",{"property":"article:published_time","content":"2020-05-07T19:34:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[OpenCV实战]40 计算机视觉工具对比\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-07T19:34:31.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2 适用于计算机视觉的MATLAB","slug":"_2-适用于计算机视觉的matlab","link":"#_2-适用于计算机视觉的matlab","children":[{"level":3,"title":"2.1 为什么要使用MATLAB进行计算机视觉：优点","slug":"_2-1-为什么要使用matlab进行计算机视觉-优点","link":"#_2-1-为什么要使用matlab进行计算机视觉-优点","children":[]},{"level":3,"title":"2.2 为什么不应该将MATLAB用于计算机视觉：缺点","slug":"_2-2-为什么不应该将matlab用于计算机视觉-缺点","link":"#_2-2-为什么不应该将matlab用于计算机视觉-缺点","children":[]}]},{"level":2,"title":"3 适用于计算机视觉的OpenCV（C++）","slug":"_3-适用于计算机视觉的opencv-c","link":"#_3-适用于计算机视觉的opencv-c","children":[{"level":3,"title":"3.1 为什么要使用OpenCV（C++）进行计算机视觉：优点","slug":"_3-1-为什么要使用opencv-c-进行计算机视觉-优点","link":"#_3-1-为什么要使用opencv-c-进行计算机视觉-优点","children":[]},{"level":3,"title":"3.2 为什么不应该将OpenCV（C++）用于计算机视觉：缺点","slug":"_3-2-为什么不应该将opencv-c-用于计算机视觉-缺点","link":"#_3-2-为什么不应该将opencv-c-用于计算机视觉-缺点","children":[]}]},{"level":2,"title":"4 适用于计算机视觉的OpenCV（Python）","slug":"_4-适用于计算机视觉的opencv-python","link":"#_4-适用于计算机视觉的opencv-python","children":[{"level":3,"title":"4.1 为什么要使用OpenCV（Python）进行计算机视觉：优点","slug":"_4-1-为什么要使用opencv-python-进行计算机视觉-优点","link":"#_4-1-为什么要使用opencv-python-进行计算机视觉-优点","children":[]},{"level":3,"title":"4.2 为什么不应该将OpenCV（Python）用于计算机视觉：缺点","slug":"_4-2-为什么不应该将opencv-python-用于计算机视觉-缺点","link":"#_4-2-为什么不应该将opencv-python-用于计算机视觉-缺点","children":[]}]},{"level":2,"title":"5 总结","slug":"_5-总结","link":"#_5-总结","children":[]},{"level":2,"title":"6 参考","slug":"_6-参考","link":"#_6-参考","children":[]}],"git":{},"readingTime":{"minutes":9.67,"words":2900},"filePathRelative":"blog/opencv/opencv实战/2020-05-07-[OpenCV实战]40 计算机视觉工具对比.md","localizedDate":"2020年5月8日","excerpt":"\\n<h2>1 简介</h2>\\n<p>我们经常将自己的工具与工艺混淆。工具可以帮助您练习手工艺品，但不能使您成为优秀的工匠。一个好的工匠的口袋里有很多不同的工具，所以她明智地使用了适合该工作的工具。她还没有嫁给这些工具。她嫁给了自己的手艺。</p>\\n<p>我经常被关于编程语言好坏的战争逗乐，人们对哪一种更好有很强的看法。事实是程序员应该选择适合其任务的语言。是否想快速构建Web应用程序？尝试使用Ruby on Rails或Django。想要为嵌入式设备编写高性能代码。尝试C。</p>\\n<p>在计算机视觉中，我们面临着类似的选择。计算机视觉工程师/程序员应该学习哪种工具-使用C++的OpenCV，使用Python的OpenCV或MATLAB？好消息是，今天我们有几种选择！十年前，还没有很好的计算机视觉库。如果您想学习，只需拿起一本书，然后开始编写自己的微型计算机视觉算法库即可。幸运的是，现在情况好多了。</p>","autoDesc":true}');export{h as comp,c as data};
