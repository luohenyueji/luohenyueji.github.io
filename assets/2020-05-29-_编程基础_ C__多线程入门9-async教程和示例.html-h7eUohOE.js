const t=JSON.parse('{"key":"v-1706fe4c","path":"/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8/2020-05-29-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A89-async%E6%95%99%E7%A8%8B%E5%92%8C%E7%A4%BA%E4%BE%8B.html","title":"[编程基础] C++多线程入门9-async教程和示例","lang":"zh-CN","frontmatter":{"date":"2020-05-29T17:16:21.000Z","category":["编程基础"],"tag":["编程基础"],"description":"[编程基础] C++多线程入门9-async教程和示例 原始C++标准仅支持单线程编程。新的C++标准(称为C++11或C++0x)于2011年发布。在C++11中，引入了新的线程库。因此运行本文程序需要C++至少符合C++11标准。 9 async教程和示例 在本文中，我们将讨论如何在C++11中使用std::async异步执行任务。std::async在c++11中引入。 9.1 什么是std::async() std::async()是一个函数模板，它接受回调(即函数或函数对象)作为参数，并有可能异步执行它们。","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8/2020-05-29-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20C__%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A89-async%E6%95%99%E7%A8%8B%E5%92%8C%E7%A4%BA%E4%BE%8B.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[编程基础] C++多线程入门9-async教程和示例"}],["meta",{"property":"og:description","content":"[编程基础] C++多线程入门9-async教程和示例 原始C++标准仅支持单线程编程。新的C++标准(称为C++11或C++0x)于2011年发布。在C++11中，引入了新的线程库。因此运行本文程序需要C++至少符合C++11标准。 9 async教程和示例 在本文中，我们将讨论如何在C++11中使用std::async异步执行任务。std::async在c++11中引入。 9.1 什么是std::async() std::async()是一个函数模板，它接受回调(即函数或函数对象)作为参数，并有可能异步执行它们。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"编程基础"}],["meta",{"property":"article:published_time","content":"2020-05-29T17:16:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[编程基础] C++多线程入门9-async教程和示例\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-29T17:16:21.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"9 async教程和示例","slug":"_9-async教程和示例","link":"#_9-async教程和示例","children":[{"level":3,"title":"9.1 什么是std::async()","slug":"_9-1-什么是std-async","link":"#_9-1-什么是std-async","children":[]},{"level":3,"title":"9.2 需要std::async()","slug":"_9-2-需要std-async","link":"#_9-2-需要std-async","children":[]},{"level":3,"title":"9.3 使用函数指针作为回调调用std::async","slug":"_9-3-使用函数指针作为回调调用std-async","link":"#_9-3-使用函数指针作为回调调用std-async","children":[]}]}],"git":{},"readingTime":{"minutes":4.89,"words":1468},"filePathRelative":"blog/编程基础/C++多线程入门/2020-05-29-[编程基础] C++多线程入门9-async教程和示例.md","localizedDate":"2020年5月30日","excerpt":"<h1> [编程基础] C++多线程入门9-async教程和示例</h1>\\n<p>原始C++标准仅支持单线程编程。新的C++标准(称为C++11或C++0x)于2011年发布。在C++11中，引入了新的线程库。因此运行本文程序需要C++至少符合C++11标准。</p>\\n<h2> 9 async教程和示例</h2>\\n<p>在本文中，我们将讨论如何在C++11中使用std::async异步执行任务。std::async在c++11中引入。</p>\\n<h3> 9.1 什么是std::async()</h3>\\n<p>std::async()是一个函数模板，它接受回调(即函数或函数对象)作为参数，并有可能异步执行它们。</p>","autoDesc":true}');export{t as data};
