import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c,a as n,b as s,d as t,e}from"./app-MsA2k2kn.js";const l={},u=n("h1",{id:"python-基于diagrams库绘制系统架构图",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-基于diagrams库绘制系统架构图","aria-hidden":"true"},"#"),s(" [python] 基于diagrams库绘制系统架构图")],-1),r={href:"https://github.com/mingrammer/diagrams",target:"_blank",rel:"noopener noreferrer"},d={href:"https://diagrams.mingrammer.com/docs/getting-started/examples",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"_0-安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0-安装","aria-hidden":"true"},"#"),s(" 0 安装")],-1),m={href:"https://graphviz.org/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://blog.csdn.net/LuohenYJ/article/details/106172201",target:"_blank",rel:"noopener noreferrer"},v={href:"https://blog.csdn.net/qq_42257666/article/details/121688656",target:"_blank",rel:"noopener noreferrer"},b=e(`<blockquote><p>sudo apt-get install graphviz</p></blockquote><blockquote><p>sudo apt-get install graphviz graphviz-doc</p></blockquote><p>Diagrams库需要在Python3.6及以上环境运行，安装graphviz后，输入以下指令安装diagrams库：</p><blockquote><p>pip install -U diagrams</p></blockquote><p>安装完成后，以下代码成功输出结果表示Diagrams库安装成功。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 代码示例</span>
<span class="token keyword">from</span> diagrams <span class="token keyword">import</span> Diagram
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>compute <span class="token keyword">import</span> EC2
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>database <span class="token keyword">import</span> RDS
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>network <span class="token keyword">import</span> ELB

<span class="token keyword">with</span> Diagram<span class="token punctuation">(</span><span class="token string">&quot;Web Service&quot;</span><span class="token punctuation">,</span> show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    ELB<span class="token punctuation">(</span><span class="token string">&quot;lb&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> RDS<span class="token punctuation">(</span><span class="token string">&quot;userdb&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示图片</span>
<span class="token comment"># from IPython.display import Image</span>
<span class="token comment"># Image(url= &quot;web_service.png&quot;)</span>

<span class="token comment"># 使用Pillow库</span>
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image  

image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;web_service.png&quot;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于diagrams库绘制系统架构图/output_4_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_1-模块说明" tabindex="-1"><a class="header-anchor" href="#_1-模块说明" aria-hidden="true">#</a> 1 模块说明</h2><h3 id="_1-1-diagrams" tabindex="-1"><a class="header-anchor" href="#_1-1-diagrams" aria-hidden="true">#</a> 1.1 Diagrams</h3><p>Diagrams是绘制图像的主要模块，Diagrams用于设置全局图上下文。</p><p>Diagram构造函数的第一个参数将设置图片名称，如果没有设置输出图片文件名，将用图片名称做为输出图片的文件名。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> diagrams <span class="token keyword">import</span> Diagram
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>compute <span class="token keyword">import</span> EC2

<span class="token comment"># 输出文件图片名会自动将大写字母转为小写，空格转为下划线，并默认输出png格式图片</span>
<span class="token keyword">with</span> Diagram<span class="token punctuation">(</span><span class="token string">&quot;SIMPLE IMAGE&quot;</span><span class="token punctuation">,</span>show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    EC2<span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示图片</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;simple_image.png&quot;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于diagrams库绘制系统架构图/output_9_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>可以通过设置outformat和filename来设置输出图片的格式和文件名。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> diagrams <span class="token keyword">import</span> Diagram
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>compute <span class="token keyword">import</span> EC2

<span class="token keyword">with</span> Diagram<span class="token punctuation">(</span><span class="token string">&quot;Simple Diagram&quot;</span><span class="token punctuation">,</span> outformat<span class="token operator">=</span><span class="token string">&quot;jpg&quot;</span><span class="token punctuation">,</span> filename<span class="token operator">=</span><span class="token string">&quot;MY Diagram&quot;</span><span class="token punctuation">,</span>show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    EC2<span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示图片</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;MY Diagram.jpg&quot;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于diagrams库绘制系统架构图/output_12_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure>`,19),h={href:"https://www.graphviz.org/doc/info/attrs.html",target:"_blank",rel:"noopener noreferrer"},w=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> diagrams <span class="token keyword">import</span> Diagram
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>compute <span class="token keyword">import</span> EC2

graph_attr <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;fontsize&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;24&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;bgcolor&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;transparent&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;fontcolor&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;red&quot;</span>
<span class="token punctuation">}</span>

<span class="token keyword">with</span> Diagram<span class="token punctuation">(</span><span class="token string">&quot;Simple Diagram&quot;</span><span class="token punctuation">,</span> show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> graph_attr<span class="token operator">=</span>graph_attr<span class="token punctuation">)</span><span class="token punctuation">:</span>
    EC2<span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示图片</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;simple_diagram.png&quot;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于diagrams库绘制系统架构图/output_15_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_1-2-nodes" tabindex="-1"><a class="header-anchor" href="#_1-2-nodes" aria-hidden="true">#</a> 1.2 Nodes</h3><p>节点是图表的基本组成部分。一个节点对象由三部分组成：提供者、资源类型和节点名称。</p><p>例如下面的示例，aws表示提供者，compute表示资源类型，EC2表示节点名称。可以查看官方文档，看看不同节点的使用。比如Azure、Alibaba、IBM提供的节点。</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>from diagrams import Diagram
from diagrams.aws.compute import EC2

with Diagram(&quot;Simple Diagram&quot;):
    EC2(&quot;web&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过使用以下运算符连接节点来表示数据流：</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>&gt;&gt; : 从左到右连接节点。
&lt;&lt; : 从右到左连接节点。
- ：无方向连接节点。无向的。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> diagrams <span class="token keyword">import</span> Diagram
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>compute <span class="token keyword">import</span> EC2
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>database <span class="token keyword">import</span> RDS
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>network <span class="token keyword">import</span> ELB
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>storage <span class="token keyword">import</span> S3

<span class="token comment"># 先声明的数据流后渲染</span>
<span class="token keyword">with</span> Diagram<span class="token punctuation">(</span><span class="token string">&quot;Web Services&quot;</span><span class="token punctuation">,</span> show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    ELB<span class="token punctuation">(</span><span class="token string">&quot;lb&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> RDS<span class="token punctuation">(</span><span class="token string">&quot;userdb&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> S3<span class="token punctuation">(</span><span class="token string">&quot;store&quot;</span><span class="token punctuation">)</span>
    ELB<span class="token punctuation">(</span><span class="token string">&quot;lb&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> RDS<span class="token punctuation">(</span><span class="token string">&quot;userdb&quot;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;stat&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">(</span>ELB<span class="token punctuation">(</span><span class="token string">&quot;lb&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> RDS<span class="token punctuation">(</span><span class="token string">&quot;userdb&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示图片</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;web_services.png&quot;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于diagrams库绘制系统架构图/output_19_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>通过设置Diagram的direction参数，可以设置图表数据流的方向，默认从左到右（LR)，参数如下：</p><ul><li>TB，从上往下</li><li>BT，从下往上</li><li>LR，从左往右</li><li>RL，从右往左</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> diagrams <span class="token keyword">import</span> Diagram
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>compute <span class="token keyword">import</span> EC2
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>database <span class="token keyword">import</span> RDS
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>network <span class="token keyword">import</span> ELB

<span class="token keyword">with</span> Diagram<span class="token punctuation">(</span><span class="token string">&quot;Workers&quot;</span><span class="token punctuation">,</span> show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> direction<span class="token operator">=</span><span class="token string">&quot;BT&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    lb <span class="token operator">=</span> ELB<span class="token punctuation">(</span><span class="token string">&quot;lb&quot;</span><span class="token punctuation">)</span>
    db <span class="token operator">=</span> RDS<span class="token punctuation">(</span><span class="token string">&quot;events&quot;</span><span class="token punctuation">)</span>
    lb <span class="token operator">&gt;&gt;</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;worker1&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> db
    lb <span class="token operator">&gt;&gt;</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;worker2&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> db
    lb <span class="token operator">&gt;&gt;</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;worker3&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> db
    lb <span class="token operator">&gt;&gt;</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;worker4&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> db
    lb <span class="token operator">&gt;&gt;</span> EC2<span class="token punctuation">(</span><span class="token string">&quot;worker5&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> db

<span class="token comment"># 展示图片</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;workers.png&quot;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于diagrams库绘制系统架构图/output_21_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>当然也可以将多个节点表示为一组，即将多个节点放入一个python列表中，但是不支持列表与列表之间进行直接连接。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> diagrams <span class="token keyword">import</span> Diagram
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>compute <span class="token keyword">import</span> EC2
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>database <span class="token keyword">import</span> RDS
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>network <span class="token keyword">import</span> ELB

<span class="token keyword">with</span> Diagram<span class="token punctuation">(</span><span class="token string">&quot;Grouped Workers&quot;</span><span class="token punctuation">,</span> show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> direction<span class="token operator">=</span><span class="token string">&quot;TB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    ELB<span class="token punctuation">(</span><span class="token string">&quot;lb&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token punctuation">[</span>EC2<span class="token punctuation">(</span><span class="token string">&quot;worker1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                  EC2<span class="token punctuation">(</span><span class="token string">&quot;worker2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                  EC2<span class="token punctuation">(</span><span class="token string">&quot;worker3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                  EC2<span class="token punctuation">(</span><span class="token string">&quot;worker4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                  EC2<span class="token punctuation">(</span><span class="token string">&quot;worker5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span> RDS<span class="token punctuation">(</span><span class="token string">&quot;events&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 展示图片</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;grouped_workers.png&quot;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于diagrams库绘制系统架构图/output_23_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_1-3-clusters" tabindex="-1"><a class="header-anchor" href="#_1-3-clusters" aria-hidden="true">#</a> 1.3 Clusters</h3><p>通过创建Cluster部件，可以将部分节点进行聚合，并与其他节点隔离开来。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> diagrams <span class="token keyword">import</span> Cluster<span class="token punctuation">,</span> Diagram
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>compute <span class="token keyword">import</span> ECS
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>database <span class="token keyword">import</span> RDS
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>network <span class="token keyword">import</span> Route53

<span class="token keyword">with</span> Diagram<span class="token punctuation">(</span><span class="token string">&quot;Simple Cluster&quot;</span><span class="token punctuation">,</span> show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    dns <span class="token operator">=</span> Route53<span class="token punctuation">(</span><span class="token string">&quot;dns&quot;</span><span class="token punctuation">)</span>
    web <span class="token operator">=</span> ECS<span class="token punctuation">(</span><span class="token string">&quot;service&quot;</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 设置集群，第一值为集群名</span>
    <span class="token keyword">with</span> Cluster<span class="token punctuation">(</span><span class="token string">&quot;DB Cluster&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        db_primary <span class="token operator">=</span> RDS<span class="token punctuation">(</span><span class="token string">&quot;primary&quot;</span><span class="token punctuation">)</span>
        db_primary <span class="token operator">-</span> <span class="token punctuation">[</span>RDS<span class="token punctuation">(</span><span class="token string">&quot;replica1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                     RDS<span class="token punctuation">(</span><span class="token string">&quot;replica2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token comment"># 设置数据流方向</span>
    dns <span class="token operator">&gt;&gt;</span> web <span class="token operator">&gt;&gt;</span> db_primary

<span class="token comment"># 展示图片</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;simple_cluster.png&quot;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于diagrams库绘制系统架构图/output_25_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>同时也支持创建嵌套节点，嵌套节点中也可以创建多个cluster。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> diagrams <span class="token keyword">import</span> Cluster<span class="token punctuation">,</span> Diagram
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>compute <span class="token keyword">import</span> ECS<span class="token punctuation">,</span> EKS<span class="token punctuation">,</span> Lambda
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>database <span class="token keyword">import</span> Redshift
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>integration <span class="token keyword">import</span> SQS
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>aws<span class="token punctuation">.</span>storage <span class="token keyword">import</span> S3

<span class="token keyword">with</span> Diagram<span class="token punctuation">(</span><span class="token string">&quot;Event Processing&quot;</span><span class="token punctuation">,</span> show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    source <span class="token operator">=</span> EKS<span class="token punctuation">(</span><span class="token string">&quot;k8s source&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">with</span> Cluster<span class="token punctuation">(</span><span class="token string">&quot;Event Flows&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> Cluster<span class="token punctuation">(</span><span class="token string">&quot;Event Workers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            workers <span class="token operator">=</span> <span class="token punctuation">[</span>ECS<span class="token punctuation">(</span><span class="token string">&quot;worker1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                       ECS<span class="token punctuation">(</span><span class="token string">&quot;worker2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                       ECS<span class="token punctuation">(</span><span class="token string">&quot;worker3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

        queue <span class="token operator">=</span> SQS<span class="token punctuation">(</span><span class="token string">&quot;event queue&quot;</span><span class="token punctuation">)</span>

        <span class="token keyword">with</span> Cluster<span class="token punctuation">(</span><span class="token string">&quot;Processing&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            handlers <span class="token operator">=</span> <span class="token punctuation">[</span>Lambda<span class="token punctuation">(</span><span class="token string">&quot;proc1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        Lambda<span class="token punctuation">(</span><span class="token string">&quot;proc2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        Lambda<span class="token punctuation">(</span><span class="token string">&quot;proc3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

    store <span class="token operator">=</span> S3<span class="token punctuation">(</span><span class="token string">&quot;events store&quot;</span><span class="token punctuation">)</span>
    dw <span class="token operator">=</span> Redshift<span class="token punctuation">(</span><span class="token string">&quot;analytics&quot;</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 设置数据流方向</span>
    source <span class="token operator">&gt;&gt;</span> workers <span class="token operator">&gt;&gt;</span> queue <span class="token operator">&gt;&gt;</span> handlers
    handlers <span class="token operator">&gt;&gt;</span> store
    handlers <span class="token operator">&gt;&gt;</span> dw

<span class="token comment"># 展示图片</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;event_processing.png&quot;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于diagrams库绘制系统架构图/output_27_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_1-4-edges" tabindex="-1"><a class="header-anchor" href="#_1-4-edges" aria-hidden="true">#</a> 1.4 Edges</h3><p>edge用于设置节点间连接线的属性。包含三个属性：标签label、颜色color和样式style，它们对应于Graphviz的edge属性设置。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> diagrams <span class="token keyword">import</span> Cluster<span class="token punctuation">,</span> Diagram<span class="token punctuation">,</span> Edge
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>alibabacloud<span class="token punctuation">.</span>compute <span class="token keyword">import</span> ElasticSearch
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>alibabacloud<span class="token punctuation">.</span>compute <span class="token keyword">import</span> FunctionCompute
<span class="token keyword">from</span> diagrams<span class="token punctuation">.</span>alibabacloud<span class="token punctuation">.</span>compute <span class="token keyword">import</span> ContainerService

<span class="token keyword">with</span> Diagram<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Web Service&quot;</span><span class="token punctuation">,</span> show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 设置三个节点</span>
    service <span class="token operator">=</span> ContainerService<span class="token punctuation">(</span><span class="token string">&quot;service&quot;</span><span class="token punctuation">)</span>
    compute <span class="token operator">=</span> FunctionCompute<span class="token punctuation">(</span><span class="token string">&quot;compute&quot;</span><span class="token punctuation">)</span>
    search <span class="token operator">=</span> ElasticSearch<span class="token punctuation">(</span><span class="token string">&quot;search&quot;</span><span class="token punctuation">)</span>
    <span class="token comment"># 设置连接方式</span>
    service <span class="token operator">&gt;&gt;</span> Edge<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&quot;firebrick&quot;</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&quot;dashed&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> compute
    <span class="token comment"># 设置连接方式</span>
    compute <span class="token operator">-</span> Edge<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&quot;orange&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;link&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> search
    service  <span class="token operator">&gt;&gt;</span> search


<span class="token comment"># 展示图片</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;web_service.png&quot;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于diagrams库绘制系统架构图/output_29_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_2-参考" tabindex="-1"><a class="header-anchor" href="#_2-参考" aria-hidden="true">#</a> 2 参考</h2>`,31),q={href:"https://github.com/mingrammer/diagrams",target:"_blank",rel:"noopener noreferrer"},y={href:"https://diagrams.mingrammer.com/docs/getting-started/examples",target:"_blank",rel:"noopener noreferrer"},_={href:"https://graphviz.org/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://blog.csdn.net/LuohenYJ/article/details/106172201",target:"_blank",rel:"noopener noreferrer"},D={href:"https://blog.csdn.net/qq_42257666/article/details/121688656",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.graphviz.org/doc/info/attrs.html",target:"_blank",rel:"noopener noreferrer"};function E(S,x){const a=o("ExternalLinkIcon");return i(),c("div",null,[u,n("p",null,[s("Python的Diagrams库允许通过简单的Python代码绘制云系统架构，实现对新的系统架构进行原型设计。Diagrams的官方仓库地址见："),n("a",r,[s("diagrams"),t(a)]),s("。Diagrams的官方文档和使用示例见："),n("a",d,[s("diagrams-doc"),t(a)]),s("。")]),k,n("p",null,[s("Diagrams库依赖于开源的图可视化工具"),n("a",m,[s("Graphviz"),t(a)]),s("。Python下的Graphviz使用见"),n("a",g,[s("python模块graphviz使用入门"),t(a)]),s("。Graphviz在windows下的安装见"),n("a",v,[s("Graphviz安装配置教程"),t(a)]),s("。在linux下的安装，命令行输入以下指令即可：")]),b,n("p",null,[s("此外还可以设置Graphviz中的graph_attr, node_attr和edge_attr属性来控制图形参数，这些属性具体介绍含义见"),n("a",h,[s("Graphviz_Attributes"),t(a)]),s("。")]),w,n("ul",null,[n("li",null,[n("a",q,[s("diagrams"),t(a)])]),n("li",null,[n("a",y,[s("diagrams-doc"),t(a)])]),n("li",null,[n("a",_,[s("Graphviz"),t(a)])]),n("li",null,[n("a",f,[s("python模块graphviz使用入门"),t(a)])]),n("li",null,[n("a",D,[s("Graphviz安装配置教程"),t(a)])]),n("li",null,[n("a",C,[s("Graphviz_Attributes"),t(a)])])])])}const R=p(l,[["render",E],["__file","2022-09-10-_python_ 基于diagrams库绘制系统架构图.html.vue"]]);export{R as default};
