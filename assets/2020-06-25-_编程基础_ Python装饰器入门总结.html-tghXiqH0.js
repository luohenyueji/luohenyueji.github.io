const t=JSON.parse('{"key":"v-066b72ac","path":"/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2020-06-25-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20Python%E8%A3%85%E9%A5%B0%E5%99%A8%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93.html","title":"[编程基础] Python装饰器入门总结","lang":"zh-CN","frontmatter":{"date":"2020-06-25T17:12:53.000Z","category":["编程基础"],"tag":["编程基础","Python"],"description":"[编程基础] Python装饰器入门总结 Python装饰器教程展示了如何在Python中使用装饰器基本功能。 1 使用教程 Python函数是一等公民。这意味着函数与Python中的其他对象具有同等的状态。可以将函数分配给变量，存储在集合中，动态创建和删除或作为参数传递。嵌套函数也称为内部函数，指的是在另一个函数中定义的函数。 Python decorator扩展并修改可调用函数的行为，而不修改可调用函数本身。decorator是修饰（或包装）其他函数并在包装函数运行前后执行代码的函数。Python装饰器通常用于日志记录，身份验证和授权，计时和缓存中。","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2020-06-25-_%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80_%20Python%E8%A3%85%E9%A5%B0%E5%99%A8%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[编程基础] Python装饰器入门总结"}],["meta",{"property":"og:description","content":"[编程基础] Python装饰器入门总结 Python装饰器教程展示了如何在Python中使用装饰器基本功能。 1 使用教程 Python函数是一等公民。这意味着函数与Python中的其他对象具有同等的状态。可以将函数分配给变量，存储在集合中，动态创建和删除或作为参数传递。嵌套函数也称为内部函数，指的是在另一个函数中定义的函数。 Python decorator扩展并修改可调用函数的行为，而不修改可调用函数本身。decorator是修饰（或包装）其他函数并在包装函数运行前后执行代码的函数。Python装饰器通常用于日志记录，身份验证和授权，计时和缓存中。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"编程基础"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:published_time","content":"2020-06-25T17:12:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[编程基础] Python装饰器入门总结\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-25T17:12:53.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1 使用教程","slug":"_1-使用教程","link":"#_1-使用教程","children":[{"level":3,"title":"1.1 Python装饰器简单示例","slug":"_1-1-python装饰器简单示例","link":"#_1-1-python装饰器简单示例","children":[]},{"level":3,"title":"1.2 带@符号的Python装饰器","slug":"_1-2-带-符号的python装饰器","link":"#_1-2-带-符号的python装饰器","children":[]},{"level":3,"title":"1.3 用参数修饰函数","slug":"_1-3-用参数修饰函数","link":"#_1-3-用参数修饰函数","children":[]},{"level":3,"title":"1.4 Python装饰器修改数据","slug":"_1-4-python装饰器修改数据","link":"#_1-4-python装饰器修改数据","children":[]},{"level":3,"title":"1.5 Python多层装饰器","slug":"_1-5-python多层装饰器","link":"#_1-5-python多层装饰器","children":[]},{"level":3,"title":"1.6 Python装饰器计时示例","slug":"_1-6-python装饰器计时示例","link":"#_1-6-python装饰器计时示例","children":[]}]},{"level":2,"title":"2 参考","slug":"_2-参考","link":"#_2-参考","children":[]}],"git":{},"readingTime":{"minutes":2.99,"words":898},"filePathRelative":"blog/编程基础/学习笔记/2020-06-25-[编程基础] Python装饰器入门总结.md","localizedDate":"2020年6月26日","excerpt":"<h1> [编程基础] Python装饰器入门总结</h1>\\n<p>Python装饰器教程展示了如何在Python中使用装饰器基本功能。</p>\\n<h2> 1 使用教程</h2>\\n<p>Python函数是一等公民。这意味着函数与Python中的其他对象具有同等的状态。可以将函数分配给变量，存储在集合中，动态创建和删除或作为参数传递。嵌套函数也称为内部函数，指的是在另一个函数中定义的函数。\\nPython decorator扩展并修改可调用函数的行为，而不修改可调用函数本身。decorator是修饰（或包装）其他函数并在包装函数运行前后执行代码的函数。Python装饰器通常用于日志记录，身份验证和授权，计时和缓存中。</p>","autoDesc":true}');export{t as data};
