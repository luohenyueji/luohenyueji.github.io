const t=JSON.parse('{"key":"v-05d7f596","path":"/blog/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/YUV%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%85%A5%E9%97%A8/2018-12-11-_%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86_%20YUV%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%85%A5%E9%97%A82.html","title":"[图像处理] YUV图像处理入门2","lang":"zh-CN","frontmatter":{"date":"2018-12-11T17:17:33.000Z","category":["图像处理"],"tag":["图像处理"],"description":"[图像处理] YUV图像处理入门2 1 分离YUV420中YUV分量 本程序中的函数主要是将YUV420P视频数据流的第一帧图像中的Y、U、V三个分量分离开并保存成三个文件。函数的代码如下所示： /** * @file\\t1 yuv_split.cpp * @author\\tluohen * @brief\\tsplit of yuv * @date\\t2018-12-07 * */ #include \\"stdafx.h\\" #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;string.h&gt; #include &lt;math.h&gt; #include &lt;iostream&gt; using namespace std; /** * @brief * * @param url\\tlocation of input yuv420p file * @param w\\t\\twidth of input yuv420p file * @param h \\theight of input yuv420p file * @return\\tint */ int yuv420_split(const char *url, int w, int h) { \\t//reading yuv image \\tFILE *input_fp; \\tif ((input_fp = fopen(url, \\"rb\\")) == NULL) \\t{ \\t\\tprintf(\\"%s open error!\\\\n\\", url); \\t\\treturn -1; \\t} \\telse \\t{ \\t\\tprintf(\\"%s open.\\\\n\\", url); \\t} \\t//writing yuv image \\tFILE *outputY_fp = fopen(\\"video_result/output_420_y.y\\", \\"wb+\\"); \\tFILE *outputU_fp = fopen(\\"video_result/output_420_u.y\\", \\"wb+\\"); \\tFILE *outputV_fp = fopen(\\"video_result/output_420_v.y\\", \\"wb+\\"); \\tunsigned char *pic = new unsigned char[w * h * 3 / 2]; \\t//读数据，每次读取的字节数为sizeof(unsigned char)=1，共读取w*h*3/2次 \\t//reading data \\tfread(pic, sizeof(unsigned char), w * h * 3 / 2, input_fp); \\t//writing data \\t//Y \\tfwrite(pic, sizeof(unsigned char), w * h, outputY_fp); \\t//U \\tfwrite(pic + w * h, sizeof(unsigned char), w * h / 4, outputU_fp); \\t//V \\tfwrite(pic + w * h * 5 / 4, sizeof(unsigned char), w * h / 4, outputV_fp); \\t//memory release and files closing \\tdelete[] pic; \\tfclose(input_fp); \\tfclose(outputY_fp); \\tfclose(outputU_fp); \\tfclose(outputV_fp); \\treturn 0; } /** * @brief main * * @return int */ int main() { \\t//Setting YUV information \\tint state = yuv420_split(\\"video/akiyo.yuv\\", 352, 288); \\treturn 0; }","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/YUV%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%85%A5%E9%97%A8/2018-12-11-_%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86_%20YUV%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%85%A5%E9%97%A82.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[图像处理] YUV图像处理入门2"}],["meta",{"property":"og:description","content":"[图像处理] YUV图像处理入门2 1 分离YUV420中YUV分量 本程序中的函数主要是将YUV420P视频数据流的第一帧图像中的Y、U、V三个分量分离开并保存成三个文件。函数的代码如下所示： /** * @file\\t1 yuv_split.cpp * @author\\tluohen * @brief\\tsplit of yuv * @date\\t2018-12-07 * */ #include \\"stdafx.h\\" #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;string.h&gt; #include &lt;math.h&gt; #include &lt;iostream&gt; using namespace std; /** * @brief * * @param url\\tlocation of input yuv420p file * @param w\\t\\twidth of input yuv420p file * @param h \\theight of input yuv420p file * @return\\tint */ int yuv420_split(const char *url, int w, int h) { \\t//reading yuv image \\tFILE *input_fp; \\tif ((input_fp = fopen(url, \\"rb\\")) == NULL) \\t{ \\t\\tprintf(\\"%s open error!\\\\n\\", url); \\t\\treturn -1; \\t} \\telse \\t{ \\t\\tprintf(\\"%s open.\\\\n\\", url); \\t} \\t//writing yuv image \\tFILE *outputY_fp = fopen(\\"video_result/output_420_y.y\\", \\"wb+\\"); \\tFILE *outputU_fp = fopen(\\"video_result/output_420_u.y\\", \\"wb+\\"); \\tFILE *outputV_fp = fopen(\\"video_result/output_420_v.y\\", \\"wb+\\"); \\tunsigned char *pic = new unsigned char[w * h * 3 / 2]; \\t//读数据，每次读取的字节数为sizeof(unsigned char)=1，共读取w*h*3/2次 \\t//reading data \\tfread(pic, sizeof(unsigned char), w * h * 3 / 2, input_fp); \\t//writing data \\t//Y \\tfwrite(pic, sizeof(unsigned char), w * h, outputY_fp); \\t//U \\tfwrite(pic + w * h, sizeof(unsigned char), w * h / 4, outputU_fp); \\t//V \\tfwrite(pic + w * h * 5 / 4, sizeof(unsigned char), w * h / 4, outputV_fp); \\t//memory release and files closing \\tdelete[] pic; \\tfclose(input_fp); \\tfclose(outputY_fp); \\tfclose(outputU_fp); \\tfclose(outputV_fp); \\treturn 0; } /** * @brief main * * @return int */ int main() { \\t//Setting YUV information \\tint state = yuv420_split(\\"video/akiyo.yuv\\", 352, 288); \\treturn 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"图像处理"}],["meta",{"property":"article:published_time","content":"2018-12-11T17:17:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[图像处理] YUV图像处理入门2\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-12-11T17:17:33.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1 分离YUV420中YUV分量","slug":"_1-分离yuv420中yuv分量","link":"#_1-分离yuv420中yuv分量","children":[]},{"level":2,"title":"2 YUV420灰度化","slug":"_2-yuv420灰度化","link":"#_2-yuv420灰度化","children":[]},{"level":2,"title":"3 YUV420亮度减半","slug":"_3-yuv420亮度减半","link":"#_3-yuv420亮度减半","children":[]},{"level":2,"title":"4 YUV420添加边框","slug":"_4-yuv420添加边框","link":"#_4-yuv420添加边框","children":[]}],"git":{},"readingTime":{"minutes":8.32,"words":2496},"filePathRelative":"blog/图像处理/YUV图像处理入门/2018-12-11-[图像处理] YUV图像处理入门2.md","localizedDate":"2018年12月12日","excerpt":"<h1> [图像处理] YUV图像处理入门2</h1>\\n<h2> <strong>1 分离YUV420中YUV分量</strong></h2>\\n<p>本程序中的函数主要是将YUV420P视频数据流的第一帧图像中的Y、U、V三个分量分离开并保存成三个文件。函数的代码如下所示：</p>\\n<pre><code>/**\\n * @file\\t1 yuv_split.cpp\\n * @author\\tluohen\\n * @brief\\tsplit of yuv\\n * @date\\t2018-12-07\\n *\\n */\\n\\n#include \\"stdafx.h\\"\\n#include &lt;stdio.h&gt;\\n#include &lt;stdlib.h&gt;\\n#include &lt;string.h&gt;\\n#include &lt;math.h&gt;\\n#include &lt;iostream&gt;\\n\\nusing namespace std;\\n\\n/**\\n * @brief\\n *\\n * @param url\\tlocation of input yuv420p file\\n * @param w\\t\\twidth of input yuv420p file\\n * @param h \\theight of input yuv420p file\\n * @return\\tint\\n */\\nint yuv420_split(const char *url, int w, int h)\\n{\\n\\t//reading yuv image\\n\\tFILE *input_fp;\\n\\tif ((input_fp = fopen(url, \\"rb\\")) == NULL)\\n\\t{\\n\\t\\tprintf(\\"%s open error!\\\\n\\", url);\\n\\t\\treturn -1;\\n\\t}\\n\\telse\\n\\t{\\n\\t\\tprintf(\\"%s open.\\\\n\\", url);\\n\\t}\\n\\n\\t//writing yuv image\\n\\tFILE *outputY_fp = fopen(\\"video_result/output_420_y.y\\", \\"wb+\\");\\n\\tFILE *outputU_fp = fopen(\\"video_result/output_420_u.y\\", \\"wb+\\");\\n\\tFILE *outputV_fp = fopen(\\"video_result/output_420_v.y\\", \\"wb+\\");\\n\\n\\tunsigned char *pic = new unsigned char[w * h * 3 / 2];\\n\\n\\t//读数据，每次读取的字节数为sizeof(unsigned char)=1，共读取w*h*3/2次\\n\\t//reading data\\n\\tfread(pic, sizeof(unsigned char), w * h * 3 / 2, input_fp);\\n\\t//writing data\\n\\t//Y\\n\\tfwrite(pic, sizeof(unsigned char), w * h, outputY_fp);\\n\\t//U\\n\\tfwrite(pic + w * h, sizeof(unsigned char), w * h / 4, outputU_fp);\\n\\t//V\\n\\tfwrite(pic + w * h * 5 / 4, sizeof(unsigned char), w * h / 4, outputV_fp);\\n\\n\\t//memory release and files closing\\n\\tdelete[] pic;\\n\\tfclose(input_fp);\\n\\tfclose(outputY_fp);\\n\\tfclose(outputU_fp);\\n\\tfclose(outputV_fp);\\n\\n\\treturn 0;\\n}\\n\\n/**\\n * @brief main\\n *\\n * @return int\\n */\\nint main()\\n{\\n\\t//Setting YUV information\\n\\tint state = yuv420_split(\\"video/akiyo.yuv\\", 352, 288);\\n\\treturn 0;\\n}\\n</code></pre>","autoDesc":true}');export{t as data};
