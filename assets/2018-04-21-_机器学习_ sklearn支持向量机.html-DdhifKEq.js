import{_ as l,c as e,a as n,d as a,o as s}from"./app-TQoR7mvJ.js";const T={},i={class:"MathJax",jax:"SVG",display:"true",style:{position:"relative"}},Q={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"13.407ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 5926 1000","aria-hidden":"true"},r={class:"MathJax",jax:"SVG",display:"true",style:{position:"relative"}},o={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"18.894ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 8351.2 1000","aria-hidden":"true"};function p(m,t){return s(),e("div",null,[t[4]||(t[4]=n('<h1 id="机器学习-sklearn支持向量机" tabindex="-1"><a class="header-anchor" href="#机器学习-sklearn支持向量机"><span>[机器学习] sklearn支持向量机</span></a></h1><p>支持向量机SVM(Support Vector Machine)是一种用来进行模式识别、分类、回归的机器学习模型。</p><h2 id="svm原理描述" tabindex="-1"><a class="header-anchor" href="#svm原理描述"><span>SVM原理描述</span></a></h2><p><strong>模型表示</strong></p><p>以一个客户好坏分类为案例，客户信息如下所示：</p><figure><img src="https://img-blog.csdn.net/20180421114544590" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>客户信息数轴表示如下所示：</p><figure><img src="https://img-blog.csdn.net/20180421105543936" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>以数学表达式对上述信息进行描述，可以用下式进行表示：</p><figure><img src="https://img-blog.csdn.net/20180421110051201" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然而该方法对于大型数据集容易发生拟合，且过于复杂。</p><p>因此可以忽略一些点，进行一刀切，如下所示：</p><figure><img src="https://img-blog.csdn.net/20180421110240700" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但是该方法容易导致错分率高。因此SVM就是找一种方式正确的描述分类方程。</p><p><strong>超平面</strong></p><figure><img src="https://img-blog.csdn.net/20180421110551185" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>因此该超平面的公式可以用下式进行表示：</p>',17)),a("mjx-container",i,[(s(),e("svg",Q,t[0]||(t[0]=[n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(866,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(1351,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2017.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3073.6,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(3789.6,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(4496.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(5497,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g>',1)]))),t[1]||(t[1]=a("mjx-assistive-mml",{unselectable:"on",display:"block"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("mi",null,"g"),a("mo",{stretchy:"false"},"("),a("mi",null,"v"),a("mo",{stretchy:"false"},")"),a("mo",null,"="),a("mi",null,"w"),a("mi",null,"v"),a("mo",null,"+"),a("mi",null,"b")])],-1))]),t[5]||(t[5]=a("p",null,"其中v是样本向量，在二维空间v=(x,y)，在三维空间v=(x,y,z)。w是参数向量，在二维空间w=(A,B),在三维空间w=(A,B,C)。",-1)),t[6]||(t[6]=a("figure",null,[a("img",{src:"https://img-blog.csdn.net/2018042111161441",alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1)),t[7]||(t[7]=a("p",null,"因此上述距离公式可以表示为：",-1)),a("mjx-container",r,[(s(),e("svg",o,t[2]||(t[2]=[n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(520,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(909,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(1394,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2060.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(3116.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(3394.6,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(3871.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(4260.6,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(4745.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5134.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5412.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mrow" transform="translate(6079.2,0)"><g data-mml-node="mo" transform="translate(0 -51)"><path data-c="2016" d="M257 0V602H300V0H257ZM478 0V602H521V0H478Z"></path></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1494,0) translate(0 -51)"><path data-c="2016" d="M257 0V602H300V0H257ZM478 0V602H521V0H478Z"></path></g></g></g></g>',1)]))),t[3]||(t[3]=a("mjx-assistive-mml",{unselectable:"on",display:"block"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("mi",null,"d"),a("mo",{stretchy:"false"},"("),a("mi",null,"v"),a("mo",{stretchy:"false"},")"),a("mo",null,"="),a("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),a("mi",null,"g"),a("mo",{stretchy:"false"},"("),a("mi",null,"v"),a("mo",{stretchy:"false"},")"),a("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mo",null,"/")]),a("mrow",{"data-mjx-texclass":"INNER"},[a("mo",{"data-mjx-texclass":"OPEN",symmetric:"true"},"‖"),a("mi",null,"w"),a("mo",{"data-mjx-texclass":"CLOSE",symmetric:"true"},"‖")])])],-1))]),t[8]||(t[8]=n(`<p><strong>超平面确定</strong></p><p>SVM目标是找到一个超平面，使得其在两个类中间分开。并使得该超平面到两边的距离最大，如下图所示：</p><figure><img src="https://img-blog.csdn.net/20180421112301900" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但是如果对于线性不可分的情况，如下图所示：</p><figure><img src="https://img-blog.csdn.net/20180421112753872" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此时上述方式无法确定超平面。在SVM在则是通过升维的方式解决。例如：</p><figure><img src="https://img-blog.csdn.net/20180421112959560" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>因此SVM在一维空间上解决线性不可分割的问题是把函数映射到二维空间。同样在n维空间的线性不可分割问题映射到n+1维空间。而这种映射分类函数，在svm用核函数（kernel）进行构造。</p><p>因此支持向量机具体算法步骤为：</p><ol><li>把所有的样本和其标记交给算法进行训练</li><li>如果线性可分则直接找出超平面</li><li>如果线性不可分，进行映射找出超平面</li><li>得到超平面表达式，进行分类回归</li></ol><p><strong>sklearn实现</strong></p><p>在sklearn支持向量机主要用SVC类支持。SVC所支持的和函数有linear(线性和函数）、rbf(径向基核函数)、sigmoid(神经元激活函数)等，通常推荐使用rbf函数。以客户评价为例代码如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>from sklearn import svm</span></span>
<span class="line"><span>import numpy as np</span></span>
<span class="line"><span>#年龄</span></span>
<span class="line"><span>X = np.array([[34, 33, 32, 31, 30, 30, 25, 23, 22, 18]])</span></span>
<span class="line"><span>X = X.T</span></span>
<span class="line"><span>#质量</span></span>
<span class="line"><span>y = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1]</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>clf = svm.SVC(kernel=&#39;rbf&#39;).fit(X, y)</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>p = [[30]]</span></span>
<span class="line"><span>print(clf.predict(p)) #1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>函数其他参数改动可参考官网文档：<a href="http://scikit-learn.org/stable/modules/svm.html#svm" target="_blank" rel="noopener noreferrer">svm</a></p>`,14))])}const g=l(T,[["render",p],["__file","2018-04-21-_机器学习_ sklearn支持向量机.html.vue"]]),c=JSON.parse('{"path":"/blog/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/sklearn/2018-04-21-_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0_%20sklearn%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA.html","title":"[机器学习] sklearn支持向量机","lang":"zh-CN","frontmatter":{"date":"2018-04-21T11:20:45.000Z","category":["机器学习"],"tag":["机器学习","Python"],"description":"[机器学习] sklearn支持向量机 支持向量机SVM(Support Vector Machine)是一种用来进行模式识别、分类、回归的机器学习模型。 SVM原理描述 模型表示 以一个客户好坏分类为案例，客户信息如下所示： 客户信息数轴表示如下所示： 以数学表达式对上述信息进行描述，可以用下式进行表示： 然而该方法对于大型数据集容易发生拟合，且过于...","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/sklearn/2018-04-21-_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0_%20sklearn%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[机器学习] sklearn支持向量机"}],["meta",{"property":"og:description","content":"[机器学习] sklearn支持向量机 支持向量机SVM(Support Vector Machine)是一种用来进行模式识别、分类、回归的机器学习模型。 SVM原理描述 模型表示 以一个客户好坏分类为案例，客户信息如下所示： 客户信息数轴表示如下所示： 以数学表达式对上述信息进行描述，可以用下式进行表示： 然而该方法对于大型数据集容易发生拟合，且过于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img-blog.csdn.net/20180421114544590"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"机器学习"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:published_time","content":"2018-04-21T11:20:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[机器学习] sklearn支持向量机\\",\\"image\\":[\\"https://img-blog.csdn.net/20180421114544590\\",\\"https://img-blog.csdn.net/20180421105543936\\",\\"https://img-blog.csdn.net/20180421110051201\\",\\"https://img-blog.csdn.net/20180421110240700\\",\\"https://img-blog.csdn.net/20180421110551185\\",\\"https://img-blog.csdn.net/2018042111161441\\",\\"https://img-blog.csdn.net/20180421112301900\\",\\"https://img-blog.csdn.net/20180421112753872\\",\\"https://img-blog.csdn.net/20180421112959560\\"],\\"datePublished\\":\\"2018-04-21T11:20:45.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"SVM原理描述","slug":"svm原理描述","link":"#svm原理描述","children":[]}],"git":{},"readingTime":{"minutes":2.35,"words":706},"filePathRelative":"blog/机器学习/sklearn/2018-04-21-[机器学习] sklearn支持向量机.md","localizedDate":"2018年4月21日","excerpt":"\\n<p>支持向量机SVM(Support Vector Machine)是一种用来进行模式识别、分类、回归的机器学习模型。</p>\\n<h2>SVM原理描述</h2>\\n<p><strong>模型表示</strong></p>\\n<p>以一个客户好坏分类为案例，客户信息如下所示：</p>\\n<figure><img src=\\"https://img-blog.csdn.net/20180421114544590\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<p>客户信息数轴表示如下所示：</p>\\n<figure><img src=\\"https://img-blog.csdn.net/20180421105543936\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>","autoDesc":true}');export{g as comp,c as data};
