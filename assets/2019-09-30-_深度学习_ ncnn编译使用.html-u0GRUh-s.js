const n=JSON.parse('{"key":"v-0dbccbc4","path":"/blog/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-09-30-_%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0_%20ncnn%E7%BC%96%E8%AF%91%E4%BD%BF%E7%94%A8.html","title":"[深度学习] ncnn编译使用","lang":"zh-CN","frontmatter":{"date":"2019-09-30T17:40:21.000Z","category":["深度学习"],"tag":["深度学习","常用工具"],"description":"[深度学习] ncnn编译使用 工程 ncnn工程编译使用(cpu) 在linux下建立如CMakeLists文件即可编译生成ncnn工程 ## 最低cmake版本 cmake_minimum_required(VERSION 3.2) ## 工程名 project(ncnnTest) ## 添加OpenCV支持 find_package(OpenCV REQUIRED) ## 添加OpenMP支持 FIND_PACKAGE(OpenMP REQUIRED) if(OPENMP_FOUND) message(\\"OPENMP FOUND\\") set(CMAKE_C_FLAGS \\"${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}\\") set(CMAKE_CXX_FLAGS \\"${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}\\") set(CMAKE_EXE_LINKER_FLAGS \\"${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}\\") endif() ## 头文件目录 include_directories(/home/computerA/ncnn/build/install/include/ncnn) ## 库文件目录 link_directories(/home/computerA/ncnn/build/install/lib) ## 生成可执行文件 add_executable(ncnnTest test.cpp) ## 链接 target_link_libraries(ncnnTest ncnn ${OpenCV_LIBS} /home/computerA/ncnn/build/install/lib/libncnn.a)","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-09-30-_%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0_%20ncnn%E7%BC%96%E8%AF%91%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[深度学习] ncnn编译使用"}],["meta",{"property":"og:description","content":"[深度学习] ncnn编译使用 工程 ncnn工程编译使用(cpu) 在linux下建立如CMakeLists文件即可编译生成ncnn工程 ## 最低cmake版本 cmake_minimum_required(VERSION 3.2) ## 工程名 project(ncnnTest) ## 添加OpenCV支持 find_package(OpenCV REQUIRED) ## 添加OpenMP支持 FIND_PACKAGE(OpenMP REQUIRED) if(OPENMP_FOUND) message(\\"OPENMP FOUND\\") set(CMAKE_C_FLAGS \\"${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}\\") set(CMAKE_CXX_FLAGS \\"${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}\\") set(CMAKE_EXE_LINKER_FLAGS \\"${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}\\") endif() ## 头文件目录 include_directories(/home/computerA/ncnn/build/install/include/ncnn) ## 库文件目录 link_directories(/home/computerA/ncnn/build/install/lib) ## 生成可执行文件 add_executable(ncnnTest test.cpp) ## 链接 target_link_libraries(ncnnTest ncnn ${OpenCV_LIBS} /home/computerA/ncnn/build/install/lib/libncnn.a)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"深度学习"}],["meta",{"property":"article:tag","content":"常用工具"}],["meta",{"property":"article:published_time","content":"2019-09-30T17:40:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[深度学习] ncnn编译使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-09-30T17:40:21.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"工程","slug":"工程","link":"#工程","children":[{"level":3,"title":"ncnn工程编译使用(cpu)","slug":"ncnn工程编译使用-cpu","link":"#ncnn工程编译使用-cpu","children":[]},{"level":3,"title":"ncnn工程编译使用(vulkan)","slug":"ncnn工程编译使用-vulkan","link":"#ncnn工程编译使用-vulkan","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{},"readingTime":{"minutes":1.58,"words":473},"filePathRelative":"blog/深度学习/2019-09-30-[深度学习] ncnn编译使用.md","localizedDate":"2019年10月1日","excerpt":"<h1> [深度学习] ncnn编译使用</h1>\\n<h2> 工程</h2>\\n<h3> ncnn工程编译使用(cpu)</h3>\\n<p>在linux下建立如CMakeLists文件即可编译生成ncnn工程</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\">## 最低cmake版本</span>\\ncmake_minimum_required<span class=\\"token punctuation\\">(</span>VERSION <span class=\\"token number\\">3.2</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">## 工程名</span>\\nproject<span class=\\"token punctuation\\">(</span>ncnnTest<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">## 添加OpenCV支持</span>\\nfind_package<span class=\\"token punctuation\\">(</span>OpenCV REQUIRED<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">## 添加OpenMP支持</span>\\nFIND_PACKAGE<span class=\\"token punctuation\\">(</span>OpenMP REQUIRED<span class=\\"token punctuation\\">)</span>  \\n<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>OPENMP_FOUND<span class=\\"token punctuation\\">)</span>  \\n    message<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"OPENMP FOUND\\"</span><span class=\\"token punctuation\\">)</span>  \\n    <span class=\\"token builtin\\">set</span><span class=\\"token punctuation\\">(</span>CMAKE_C_FLAGS <span class=\\"token string\\">\\"${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}\\"</span><span class=\\"token punctuation\\">)</span>  \\n    <span class=\\"token builtin\\">set</span><span class=\\"token punctuation\\">(</span>CMAKE_CXX_FLAGS <span class=\\"token string\\">\\"${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}\\"</span><span class=\\"token punctuation\\">)</span>  \\n    <span class=\\"token builtin\\">set</span><span class=\\"token punctuation\\">(</span>CMAKE_EXE_LINKER_FLAGS <span class=\\"token string\\">\\"${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}\\"</span><span class=\\"token punctuation\\">)</span>  \\nendif<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>  \\n<span class=\\"token comment\\">## 头文件目录</span>\\ninclude_directories<span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">/</span>home<span class=\\"token operator\\">/</span>computerA<span class=\\"token operator\\">/</span>ncnn<span class=\\"token operator\\">/</span>build<span class=\\"token operator\\">/</span>install<span class=\\"token operator\\">/</span>include<span class=\\"token operator\\">/</span>ncnn<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">## 库文件目录</span>\\nlink_directories<span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">/</span>home<span class=\\"token operator\\">/</span>computerA<span class=\\"token operator\\">/</span>ncnn<span class=\\"token operator\\">/</span>build<span class=\\"token operator\\">/</span>install<span class=\\"token operator\\">/</span>lib<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">## 生成可执行文件</span>\\nadd_executable<span class=\\"token punctuation\\">(</span>ncnnTest test<span class=\\"token punctuation\\">.</span>cpp<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">## 链接</span>\\ntarget_link_libraries<span class=\\"token punctuation\\">(</span>ncnnTest ncnn $<span class=\\"token punctuation\\">{</span>OpenCV_LIBS<span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">/</span>home<span class=\\"token operator\\">/</span>computerA<span class=\\"token operator\\">/</span>ncnn<span class=\\"token operator\\">/</span>build<span class=\\"token operator\\">/</span>install<span class=\\"token operator\\">/</span>lib<span class=\\"token operator\\">/</span>libncnn<span class=\\"token punctuation\\">.</span>a<span class=\\"token punctuation\\">)</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
