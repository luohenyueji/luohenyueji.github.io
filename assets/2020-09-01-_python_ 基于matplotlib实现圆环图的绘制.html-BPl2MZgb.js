const t=JSON.parse('{"key":"v-209ec196","path":"/blog/python/python%E5%AD%A6%E4%B9%A0/2020-09-01-_python_%20%E5%9F%BA%E4%BA%8Ematplotlib%E5%AE%9E%E7%8E%B0%E5%9C%86%E7%8E%AF%E5%9B%BE%E7%9A%84%E7%BB%98%E5%88%B6.html","title":"[python] 基于matplotlib实现圆环图的绘制","lang":"zh-CN","frontmatter":{"date":"2020-09-01T19:05:16.000Z","category":["Python"],"tag":["Python","数据分析与可视化"],"description":"[python] 基于matplotlib实现圆环图的绘制 圆环图本质上是一个中间切出一块区域的饼状图。可以使用python和matplotlib库来实现。本文主要介绍基于matplotlib实现圆环图。本文所有代码见：Python-Study-Notes # 去掉警告 import warnings warnings.filterwarnings(\\"ignore\\") # 多行输出 from IPython.core.interactiveshell import InteractiveShell InteractiveShell.ast_node_interactivity = \\"all\\"","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/python/python%E5%AD%A6%E4%B9%A0/2020-09-01-_python_%20%E5%9F%BA%E4%BA%8Ematplotlib%E5%AE%9E%E7%8E%B0%E5%9C%86%E7%8E%AF%E5%9B%BE%E7%9A%84%E7%BB%98%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[python] 基于matplotlib实现圆环图的绘制"}],["meta",{"property":"og:description","content":"[python] 基于matplotlib实现圆环图的绘制 圆环图本质上是一个中间切出一块区域的饼状图。可以使用python和matplotlib库来实现。本文主要介绍基于matplotlib实现圆环图。本文所有代码见：Python-Study-Notes # 去掉警告 import warnings warnings.filterwarnings(\\"ignore\\") # 多行输出 from IPython.core.interactiveshell import InteractiveShell InteractiveShell.ast_node_interactivity = \\"all\\""}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"数据分析与可视化"}],["meta",{"property":"article:published_time","content":"2020-09-01T19:05:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[python] 基于matplotlib实现圆环图的绘制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-09-01T19:05:16.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1 基础圆环图绘制 Basic donut plot","slug":"_1-基础圆环图绘制-basic-donut-plot","link":"#_1-基础圆环图绘制-basic-donut-plot","children":[]},{"level":2,"title":"2 自定义圆环图 Custom matplotlib donut plot","slug":"_2-自定义圆环图-custom-matplotlib-donut-plot","link":"#_2-自定义圆环图-custom-matplotlib-donut-plot","children":[{"level":3,"title":"2.1 自定义颜色","slug":"_2-1-自定义颜色","link":"#_2-1-自定义颜色","children":[]},{"level":3,"title":"2.2 自定义标签","slug":"_2-2-自定义标签","link":"#_2-2-自定义标签","children":[]},{"level":3,"title":"2.3 自定义背景颜色","slug":"_2-3-自定义背景颜色","link":"#_2-3-自定义背景颜色","children":[]},{"level":3,"title":"2.4 自定义标记","slug":"_2-4-自定义标记","link":"#_2-4-自定义标记","children":[]}]},{"level":2,"title":"3 多层级圆环图 Donut plot with subgroups","slug":"_3-多层级圆环图-donut-plot-with-subgroups","link":"#_3-多层级圆环图-donut-plot-with-subgroups","children":[]},{"level":2,"title":"4 参考","slug":"_4-参考","link":"#_4-参考","children":[]}],"git":{},"readingTime":{"minutes":6.46,"words":1937},"filePathRelative":"blog/python/python学习/2020-09-01-[python] 基于matplotlib实现圆环图的绘制.md","localizedDate":"2020年9月2日","excerpt":"<h1> [python] 基于matplotlib实现圆环图的绘制</h1>\\n<p>圆环图本质上是一个中间切出一块区域的饼状图。可以使用python和matplotlib库来实现。本文主要介绍基于matplotlib实现圆环图。本文所有代码见：<a href=\\"https://github.com/luohenyueji/Python-Study-Notes/tree/master/Plot%20Items\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Python-Study-Notes</a></p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\"># 去掉警告</span>\\n<span class=\\"token keyword\\">import</span> warnings\\nwarnings<span class=\\"token punctuation\\">.</span>filterwarnings<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ignore\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\"># 多行输出</span>\\n<span class=\\"token keyword\\">from</span> IPython<span class=\\"token punctuation\\">.</span>core<span class=\\"token punctuation\\">.</span>interactiveshell <span class=\\"token keyword\\">import</span> InteractiveShell\\nInteractiveShell<span class=\\"token punctuation\\">.</span>ast_node_interactivity <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"all\\"</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
