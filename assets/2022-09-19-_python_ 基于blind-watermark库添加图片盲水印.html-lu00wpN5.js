import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c,a as n,b as a,d as t,e as p}from"./app-MsA2k2kn.js";const l={},u=n("h1",{id:"python-基于blind-watermark库添加图片盲水印",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-基于blind-watermark库添加图片盲水印","aria-hidden":"true"},"#"),a(" [python] 基于blind-watermark库添加图片盲水印")],-1),r={href:"https://github.com/guofei9987/blind_watermark",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.jianshu.com/p/7a0834559e5f",target:"_blank",rel:"noopener noreferrer"},d=p(`<p>blind-watermark安装命令如下：</p><blockquote><p>pip install blind-watermark</p></blockquote><p>[toc]</p><h2 id="_1-使用说明" tabindex="-1"><a class="header-anchor" href="#_1-使用说明" aria-hidden="true">#</a> 1 使用说明</h2><h3 id="_1-1-嵌入二进制数据" tabindex="-1"><a class="header-anchor" href="#_1-1-嵌入二进制数据" aria-hidden="true">#</a> 1.1 嵌入二进制数据</h3><p>下面的代码会读取图片并加入二进制数据盲水印。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> blind_watermark
<span class="token comment"># 关闭输出消息</span>
blind_watermark<span class="token punctuation">.</span>bw_notes<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> blind_watermark <span class="token keyword">import</span> att
<span class="token keyword">from</span> blind_watermark <span class="token keyword">import</span> WaterMark
<span class="token keyword">import</span> cv2
<span class="token keyword">from</span> blind_watermark <span class="token keyword">import</span> WaterMarkCore
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np


<span class="token comment"># 水印的长宽wm_shape</span>
bwm <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 读取原图</span>
imgpath <span class="token operator">=</span> <span class="token string">&#39;input.jpg&#39;</span>
bwm<span class="token punctuation">.</span>read_img<span class="token punctuation">(</span>imgpath<span class="token punctuation">)</span>

wm <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span>
<span class="token comment"># 嵌入二进制bit数据</span>
bwm<span class="token punctuation">.</span>read_wm<span class="token punctuation">(</span>wm<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;bit&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 打上盲水印</span>
outputpath <span class="token operator">=</span> <span class="token string">&#39;output.png&#39;</span>
<span class="token comment"># 保存输出图片</span>
bwm<span class="token punctuation">.</span>embed<span class="token punctuation">(</span>outputpath<span class="token punctuation">)</span>

<span class="token comment"># 解水印需要用到长度</span>
len_wm <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>wm<span class="token punctuation">)</span>  
<span class="token comment">#  抗攻击需要知道原图的shape</span>
ori_img_shape <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>imgpath<span class="token punctuation">)</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码会往图片中添加二进制数据的盲水印，对比原图和加入盲水印的图片，可以发现虽然看不到水印，但是实际上图像质量有一定下降。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image  
<span class="token comment"># 展示原图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>imgpath<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 展示添加盲水印后的图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outputpath<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_6_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_6_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>以下代码会从加入盲水印的图像中提取水印结果。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 注意设定水印的长宽wm_shape</span>
bwm1 <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment"># 提取水印</span>
wm_extract <span class="token operator">=</span> bwm1<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>outputpath<span class="token punctuation">,</span> wm_shape<span class="token operator">=</span>len_wm<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;bit&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;不攻击的提取结果：&quot;</span><span class="token punctuation">,</span> wm_extract<span class="token punctuation">)</span>

<span class="token keyword">assert</span> np<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>wm <span class="token operator">==</span> wm_extract<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;提取水印和原水印不一致&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>不攻击的提取结果： [ True False  True False  True False  True False  True False]
</code></pre><p>以下代码展示了对添加水印的图片进行截图后依然能够提取水印，这种方式只是将非截取区域用白色遮挡，不是真正的截图。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 截取区域设置</span>
<span class="token comment"># 截取方式x1, y1, x2, y2 = shape[0] * loc[0][0], shape[1] * loc[0][1], shape[0] * loc[1][0], shape[1] * loc[1][1]</span>
<span class="token comment"># (x1,y1),(x2,y2)</span>
loc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">0.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

outputpath_ <span class="token operator">=</span> <span class="token string">&#39;截屏攻击.png&#39;</span>
<span class="token comment"># 保存截屏后的图片</span>
att<span class="token punctuation">.</span>cut_att<span class="token punctuation">(</span>input_filename<span class="token operator">=</span>outputpath<span class="token punctuation">,</span> output_file_name<span class="token operator">=</span>outputpath_<span class="token punctuation">,</span> loc<span class="token operator">=</span>loc<span class="token punctuation">)</span>

bwm1 <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
wm_extract <span class="token operator">=</span> bwm1<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>outputpath_<span class="token punctuation">,</span> wm_shape<span class="token operator">=</span>len_wm<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;bit&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;截屏攻击{loc}后的提取结果：&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>loc<span class="token operator">=</span>loc<span class="token punctuation">)</span><span class="token punctuation">,</span> wm_extract<span class="token punctuation">)</span>
<span class="token keyword">assert</span> np<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>wm <span class="token operator">==</span> wm_extract<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;提取水印和原水印不一致&#39;</span>

<span class="token comment"># 展示添加攻击后的盲水印图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outputpath_<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>截屏攻击((0.3, 0.1), (0.7, 0.9))后的提取结果： [ True False  True False  True False  True False  True False]
</code></pre><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_10_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>以下代码展示了对添加水印的图片进行横向剪裁后依然能够提取水印。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>r <span class="token operator">=</span> <span class="token number">0.5</span>
outputpath <span class="token operator">=</span> <span class="token string">&#39;output.png&#39;</span>
outputpath_ <span class="token operator">=</span> <span class="token string">&#39;横向裁剪攻击.png&#39;</span>
outputpath_r <span class="token operator">=</span> <span class="token string">&#39;横向裁剪攻击_填补.png&#39;</span>
att<span class="token punctuation">.</span>cut_att_width<span class="token punctuation">(</span>input_filename<span class="token operator">=</span>outputpath<span class="token punctuation">,</span> output_file_name<span class="token operator">=</span>outputpath_<span class="token punctuation">,</span> ratio<span class="token operator">=</span>r<span class="token punctuation">)</span>
<span class="token comment"># 需要填补图像，用空白填补图像</span>
att<span class="token punctuation">.</span>anti_cut_att<span class="token punctuation">(</span>input_filename<span class="token operator">=</span>outputpath_<span class="token punctuation">,</span> output_file_name<span class="token operator">=</span>outputpath_r<span class="token punctuation">,</span>
                 origin_shape<span class="token operator">=</span>ori_img_shape<span class="token punctuation">)</span>


<span class="token comment"># extract:</span>
bwm1 <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
wm_extract <span class="token operator">=</span> bwm1<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>outputpath_r<span class="token punctuation">,</span> wm_shape<span class="token operator">=</span>len_wm<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;bit&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;横向裁剪攻击r=</span><span class="token interpolation"><span class="token punctuation">{</span>r<span class="token punctuation">}</span></span><span class="token string">后的提取结果：&quot;</span></span><span class="token punctuation">,</span> wm_extract<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>横向裁剪攻击r=0.5后的提取结果： [ True False  True False  True False  True False  True False]
</code></pre><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示添加横向裁剪攻击后的盲水印图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outputpath_<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>(177, 354)
</code></pre><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_13_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示添加横向裁剪攻击_填补后的盲水印图，缺失区域用白色填充，以保持和原图尺寸一致</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outputpath_r<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>(354, 354)
</code></pre><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_14_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>以下代码展示了对添加水印的图片进行遮挡后依然能够提取水印。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>outputpath_ <span class="token operator">=</span> <span class="token string">&#39;遮挡攻击.png&#39;</span>
n <span class="token operator">=</span> <span class="token number">60</span>
att<span class="token punctuation">.</span>shelter_att<span class="token punctuation">(</span>input_filename<span class="token operator">=</span>outputpath<span class="token punctuation">,</span> output_file_name<span class="token operator">=</span>outputpath_<span class="token punctuation">,</span> ratio<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">,</span> n<span class="token operator">=</span>n<span class="token punctuation">)</span>

<span class="token comment"># 提取</span>
bwm1 <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
wm_extract <span class="token operator">=</span> bwm1<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>outputpath_<span class="token punctuation">,</span> wm_shape<span class="token operator">=</span>len_wm<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;bit&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;遮挡攻击</span><span class="token interpolation"><span class="token punctuation">{</span>n<span class="token punctuation">}</span></span><span class="token string">后的提取结果：&quot;</span></span><span class="token punctuation">,</span> wm_extract<span class="token punctuation">)</span>
<span class="token keyword">assert</span> np<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>wm <span class="token operator">==</span> wm_extract<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;提取水印和原水印不一致&#39;</span>

<span class="token comment"># 展示添加攻击后的盲水印图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outputpath_<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>遮挡攻击60后的提取结果： [ True False  True False  True False  True False  True False]
</code></pre><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_16_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>以下代码展示了对添加水印的图片进行旋转后依然能够提取水印，但是需要将旋转后的图片再旋转回来。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>outputpath_ <span class="token operator">=</span> <span class="token string">&#39;旋转攻击.png&#39;</span>
outputpath_r <span class="token operator">=</span> <span class="token string">&#39;旋转攻击还原.png&#39;</span>
att<span class="token punctuation">.</span>rot_att<span class="token punctuation">(</span>input_filename<span class="token operator">=</span>outputpath<span class="token punctuation">,</span> output_file_name<span class="token operator">=</span>outputpath_<span class="token punctuation">,</span> angle<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>
att<span class="token punctuation">.</span>rot_att<span class="token punctuation">(</span>input_filename<span class="token operator">=</span>outputpath_<span class="token punctuation">,</span> output_file_name<span class="token operator">=</span>outputpath_r<span class="token punctuation">,</span> angle<span class="token operator">=</span><span class="token operator">-</span><span class="token number">45</span><span class="token punctuation">)</span>

<span class="token comment"># 提取水印</span>
bwm1 <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
wm_extract <span class="token operator">=</span> bwm1<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>outputpath_r<span class="token punctuation">,</span> wm_shape<span class="token operator">=</span>len_wm<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;bit&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;旋转攻击后的提取结果：&quot;</span><span class="token punctuation">,</span> wm_extract<span class="token punctuation">)</span>
<span class="token keyword">assert</span> np<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>wm <span class="token operator">==</span> wm_extract<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;提取水印和原水印不一致&#39;</span>

<span class="token comment"># 展示添加攻击后的盲水印图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outputpath_<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>旋转攻击后的提取结果： [ True False  True False  True False  True False  True False]
</code></pre><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_18_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure>`,35),m={href:"https://github.com/guofei9987/blind_watermark/blob/master/examples/example_bit.py",target:"_blank",rel:"noopener noreferrer"},v=p(`<h3 id="_1-2-嵌入图片数据" tabindex="-1"><a class="header-anchor" href="#_1-2-嵌入图片数据" aria-hidden="true">#</a> 1.2 嵌入图片数据</h3><p>下面的代码会读取图片并加入水印图片，水印图片不能大于1.936kb，恢复后的水印图片会丢失色彩信息。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2

<span class="token keyword">from</span> blind_watermark <span class="token keyword">import</span> WaterMark

bwm <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment"># 读取原图</span>
imgpath <span class="token operator">=</span> <span class="token string">&#39;input.jpg&#39;</span>
bwm<span class="token punctuation">.</span>read_img<span class="token punctuation">(</span>filename <span class="token operator">=</span> imgpath<span class="token punctuation">)</span>
<span class="token comment"># 设置水印图片,水印图片不能大于1.936kb</span>
markimgpath <span class="token operator">=</span> <span class="token string">&#39;watermark.bmp&#39;</span>
bwm<span class="token punctuation">.</span>read_wm<span class="token punctuation">(</span>markimgpath<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span>

outputpath <span class="token operator">=</span> <span class="token string">&#39;output.png&#39;</span>
<span class="token comment"># 打上盲水印</span>
bwm<span class="token punctuation">.</span>embed<span class="token punctuation">(</span>outputpath<span class="token punctuation">)</span>
wm_shape <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>markimgpath<span class="token punctuation">,</span> flags<span class="token operator">=</span>cv2<span class="token punctuation">.</span>IMREAD_GRAYSCALE<span class="token punctuation">)</span><span class="token punctuation">.</span>shape

bwm1 <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment"># 注意需要设定水印的长宽wm_shape</span>
wm_extract <span class="token operator">=</span> bwm1<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>outputpath<span class="token punctuation">,</span> wm_shape<span class="token operator">=</span>wm_shape<span class="token punctuation">,</span> out_wm_name<span class="token operator">=</span><span class="token string">&#39;wm_extracted.png&#39;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示盲水印图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outputpath<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_23_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示添加的水印图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>markimgpath<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_24_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示提取的水印图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;wm_extracted.png&#39;</span><span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_25_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_1-3-嵌入文字数据" tabindex="-1"><a class="header-anchor" href="#_1-3-嵌入文字数据" aria-hidden="true">#</a> 1.3 嵌入文字数据</h3><p>下面的代码会读取图片并加入文字数据盲水印，这种方式也是最常见添加水印方法。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bwm <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
imgpath <span class="token operator">=</span> <span class="token string">&#39;input.jpg&#39;</span>
bwm<span class="token punctuation">.</span>read_img<span class="token punctuation">(</span>imgpath<span class="token punctuation">)</span>
wm <span class="token operator">=</span> <span class="token string">&#39;hello 世界！&#39;</span>
bwm<span class="token punctuation">.</span>read_wm<span class="token punctuation">(</span>wm<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;str&#39;</span><span class="token punctuation">)</span>
outputpath <span class="token operator">=</span> <span class="token string">&#39;output.png&#39;</span>
bwm<span class="token punctuation">.</span>embed<span class="token punctuation">(</span>outputpath<span class="token punctuation">)</span>

len_wm <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>bwm<span class="token punctuation">.</span>wm_bit<span class="token punctuation">)</span>  <span class="token comment"># 解水印需要用到长度</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Put down the length of wm_bit {len_wm}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>len_wm<span class="token operator">=</span>len_wm<span class="token punctuation">)</span><span class="token punctuation">)</span>

ori_img_shape <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>outputpath<span class="token punctuation">)</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>  

<span class="token comment"># 解水印</span>
bwm1 <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
wm_extract <span class="token operator">=</span> bwm1<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>outputpath<span class="token punctuation">,</span> wm_shape<span class="token operator">=</span>len_wm<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;str&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;不攻击的提取结果：&quot;</span><span class="token punctuation">,</span> wm_extract<span class="token punctuation">)</span>

<span class="token keyword">assert</span> wm <span class="token operator">==</span> wm_extract<span class="token punctuation">,</span> <span class="token string">&#39;提取水印和原水印不一致&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Put down the length of wm_bit 119
不攻击的提取结果： hello 世界！
</code></pre>`,13),b={href:"https://github.com/guofei9987/blind_watermark/blob/master/examples/example_str.py",target:"_blank",rel:"noopener noreferrer"},g=p(`<p>以下代码展示了对添加水印的图片进行椒盐效果添加后依然能够提取水印。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 往水印图片添加椒盐效果</span>
<span class="token comment"># ratio是椒盐概率，太高恢复不了</span>
ratio <span class="token operator">=</span> <span class="token number">0.02</span>
outputpath_ <span class="token operator">=</span> <span class="token string">&#39;椒盐攻击.png&#39;</span>
att<span class="token punctuation">.</span>salt_pepper_att<span class="token punctuation">(</span>input_filename<span class="token operator">=</span>outputpath<span class="token punctuation">,</span> output_file_name<span class="token operator">=</span>outputpath_<span class="token punctuation">,</span> ratio<span class="token operator">=</span>ratio<span class="token punctuation">)</span>

<span class="token comment"># 提取</span>
wm_extract <span class="token operator">=</span> bwm1<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>outputpath_<span class="token punctuation">,</span> wm_shape<span class="token operator">=</span>len_wm<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;str&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;椒盐攻击ratio=</span><span class="token interpolation"><span class="token punctuation">{</span>ratio<span class="token punctuation">}</span></span><span class="token string">后的提取结果：&quot;</span></span><span class="token punctuation">,</span> wm_extract<span class="token punctuation">)</span>
<span class="token keyword">assert</span> np<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>wm <span class="token operator">==</span> wm_extract<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;提取水印和原水印不一致&#39;</span>

<span class="token comment"># 展示添加椒盐水印后的盲水印图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outputpath_<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>椒盐攻击ratio=0.02后的提取结果： hello 世界！
</code></pre><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_31_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>以下代码展示了对添加水印的图片进行纵向剪裁后依然能够提取水印。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 纵向剪裁图片</span>
r <span class="token operator">=</span> <span class="token number">0.4</span>
outputpath <span class="token operator">=</span> <span class="token string">&#39;output.png&#39;</span>
outputpath_ <span class="token operator">=</span> <span class="token string">&#39;纵向裁剪攻击.png&#39;</span>
outputpath_r <span class="token operator">=</span> <span class="token string">&#39;纵向裁剪攻击_填补.png&#39;</span>
att<span class="token punctuation">.</span>cut_att_height<span class="token punctuation">(</span>input_filename<span class="token operator">=</span>outputpath<span class="token punctuation">,</span> output_file_name<span class="token operator">=</span>outputpath_<span class="token punctuation">,</span> ratio<span class="token operator">=</span>r<span class="token punctuation">)</span>
<span class="token comment"># 需要填补图像，用空白填补图像</span>
att<span class="token punctuation">.</span>anti_cut_att<span class="token punctuation">(</span>input_filename<span class="token operator">=</span>outputpath_<span class="token punctuation">,</span> output_file_name<span class="token operator">=</span>outputpath_r<span class="token punctuation">,</span>
                 origin_shape<span class="token operator">=</span>ori_img_shape<span class="token punctuation">)</span>

<span class="token comment"># extract:</span>
bwm1 <span class="token operator">=</span> WaterMark<span class="token punctuation">(</span>password_wm<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> password_img<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
wm_extract <span class="token operator">=</span> bwm1<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>outputpath_r<span class="token punctuation">,</span> wm_shape<span class="token operator">=</span>len_wm<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;str&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;纵向裁剪攻击r=</span><span class="token interpolation"><span class="token punctuation">{</span>r<span class="token punctuation">}</span></span><span class="token string">后的提取结果：&quot;</span></span><span class="token punctuation">,</span> wm_extract<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>纵向裁剪攻击r=0.4后的提取结果： hello 世界！
</code></pre><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示添加纵向裁剪攻击后的盲水印图</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outputpath_<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>(354, 141)
</code></pre><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_34_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 展示添加纵向裁剪攻击_填补后的盲水印图，缺失区域用白色填充，以保持和原图尺寸一致</span>
image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outputpath_r<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
image<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>(354, 354)
</code></pre><figure><img src="http://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[python] 基于blind-watermark库添加图片盲水印/output_35_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_2-参考" tabindex="-1"><a class="header-anchor" href="#_2-参考" aria-hidden="true">#</a> 2 参考</h2>`,14),_={href:"https://github.com/guofei9987/blind_watermark",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.jianshu.com/p/7a0834559e5f",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/guofei9987/blind_watermark/blob/master/examples/example_bit.py",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/guofei9987/blind_watermark/blob/master/examples/example_str.py",target:"_blank",rel:"noopener noreferrer"};function f(x,T){const s=o("ExternalLinkIcon");return i(),c("div",null,[u,n("p",null,[n("a",r,[a("blind-watermark"),t(s)]),a("是一个能够给图片添加/解析基于频域的数字盲水印的Python库。图像水印image watermark是指在图片里添加文本或图形，以标记图片的来源。但是图像水印会破坏原图。因此另外一种水印形式，即图像盲水印blind image watermark在实践中更多地用于标记图像来源。图像盲水印是一种肉眼不可见的水印，以不可见的形式添加到原始图像中，不会对原始图像的质量产生很大影响。图像盲水印的具体原理见"),n("a",k,[a("给你的图片加上盲水印"),t(s)]),a("。")]),d,n("p",null,[a("总之，blind_watermark提供了很稳定的盲水印添加和恢复方式，还有其他不同的攻击效果，比如亮度椒盐缩放。具体可以查看代码"),n("a",m,[a("blind_watermark_bit"),t(s)]),a("。但是要注意的是，对于特定图像，添加某些图像处理效果blind_watermark是没法准确提取水印的。")]),v,n("p",null,[a("当然对存入水印后的图片进行图像变换也是可以恢复水印结果，具体使用可以参考"),n("a",b,[a("blind_watermark_str"),t(s)]),a("。")]),g,n("ul",null,[n("li",null,[n("a",_,[a("blind-watermark"),t(s)])]),n("li",null,[n("a",h,[a("给你的图片加上盲水印"),t(s)])]),n("li",null,[n("a",w,[a("blind_watermark_bit"),t(s)])]),n("li",null,[n("a",y,[a("blind_watermark_str"),t(s)])])])])}const q=e(l,[["render",f],["__file","2022-09-19-_python_ 基于blind-watermark库添加图片盲水印.html.vue"]]);export{q as default};
