import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o as c,c as l,a as n,d as t,b as s,e as p}from"./app-MsA2k2kn.js";const i={},u=n("h1",{id:"python-基于networkx实现网络图的绘制",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-基于networkx实现网络图的绘制","aria-hidden":"true"},"#"),s(" [python] 基于NetworkX实现网络图的绘制")],-1),d={href:"https://github.com/luohenyueji/Python-Study-Notes/blob/master/Plot%20Items/%E7%BD%91%E7%BB%9C%E5%9B%BENetwork%20chart.ipynb",target:"_blank",rel:"noopener noreferrer"},r=n("strong",null,"代码下载地址",-1),k=n("br",null,null,-1),m={href:"https://networkx.github.io/documentation/stable/index.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://graph-tool.skewed.de/",target:"_blank",rel:"noopener noreferrer"},g=p(`<ol><li>来自pandas基础网格图绘制 Basic Network from pandas data frame</li><li>自定义NetworkX图形外观 Custom NetworkX graph appearance</li><li>网络布局的可能性 Network layout possibilities</li><li>有向或无向网络 Directed or Undirected network</li><li>将颜色映射到网络节点 Map a color to network nodes</li><li>将颜色映射到网络的边 Map colour to the edges of a Network</li><li>网络图的背景颜色 Background colour of network chart</li><li>来自相关性矩阵的网络 Network from correlation matrix NetworkX安装：</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pip install networkx<span class="token operator">==</span><span class="token number">2.4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>本文参考：</p>`,3),b={href:"https://python-graph-gallery.com/network-chart/",target:"_blank",rel:"noopener noreferrer"},h=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> IPython<span class="token punctuation">.</span>core<span class="token punctuation">.</span>interactiveshell <span class="token keyword">import</span> InteractiveShell
InteractiveShell<span class="token punctuation">.</span>ast_node_interactivity <span class="token operator">=</span> <span class="token string">&quot;all&quot;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-自pandas基础网格图绘制-basic-network-from-pandas-data-frame" tabindex="-1"><a class="header-anchor" href="#_1-自pandas基础网格图绘制-basic-network-from-pandas-data-frame" aria-hidden="true">#</a> 1. 自pandas基础网格图绘制 Basic Network from pandas data frame</h2><p>该示例可能是您可以实现的最基本的网络图表。网络图由节点组成。这些节点通过边相互连接。因此，基本格式是数据帧，其中每行描述一个连接。在这里，我们用4条线构造一个数据框，描述此图的4个连接！因此，如果您的连接带有一个csv文件，请加载该文件并准备对其进行可视化！FROM表示起点，to表示终点。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># libraries 导入模块</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Build a dataframe with 4 connections</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Build your graph</span>
<span class="token comment"># 绘制网络图，每次结果可能不一样</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">)</span>
 
<span class="token comment"># Plot it</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th></tr></thead><tbody><tr><th>0</th><td>A</td><td>D</td></tr><tr><th>1</th><td>B</td><td>A</td></tr><tr><th>2</th><td>C</td><td>E</td></tr><tr><th>3</th><td>A</td><td>C</td></tr></tbody></table></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF80XzEucG5n?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_2-自定义networkx图形外观-custom-networkx-graph-appearance" tabindex="-1"><a class="header-anchor" href="#_2-自定义networkx图形外观-custom-networkx-graph-appearance" aria-hidden="true">#</a> 2. 自定义NetworkX图形外观 Custom NetworkX graph appearance</h2><p>现在，让我们看一下自定义图表外观的参数。自定义分为三个主要类别：节点，节点标签和边：</p><ul><li>节点 Nodes</li><li>标签 Labels</li><li>边 Edges</li><li>总结 All</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 节点 Nodes</span>

<span class="token comment"># libraries 载入库</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># Build a dataframe with your connections</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Build your graph 建立表格</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">)</span>
 
<span class="token comment"># Graph with Custom nodes: 自定义表格</span>
<span class="token comment"># with_labels是否显示标签，node_size节点大小，node_color节点颜色，node_shape节点形状，alpha透明度，linewidths线条宽度</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&quot;skyblue&quot;</span><span class="token punctuation">,</span> node_shape<span class="token operator">=</span><span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> linewidths<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th></tr></thead><tbody><tr><th>0</th><td>A</td><td>D</td></tr><tr><th>1</th><td>B</td><td>A</td></tr><tr><th>2</th><td>C</td><td>E</td></tr><tr><th>3</th><td>A</td><td>C</td></tr></tbody></table></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF82XzEucG5n?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 标签 Labels</span>
<span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># Build a dataframe with your connections</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Build your graph</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">)</span>
 
<span class="token comment"># Custom the edges:</span>
<span class="token comment"># font_size标签字体大小，font_color标签字体颜色,font_weight字体形式</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> font_size<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span> font_color<span class="token operator">=</span><span class="token string">&quot;yellow&quot;</span><span class="token punctuation">,</span> font_weight<span class="token operator">=</span><span class="token string">&quot;bold&quot;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th></tr></thead><tbody><tr><th>0</th><td>A</td><td>D</td></tr><tr><th>1</th><td>B</td><td>A</td></tr><tr><th>2</th><td>C</td><td>E</td></tr><tr><th>3</th><td>A</td><td>C</td></tr></tbody></table></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF83XzEucG5n?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 边 Edges</span>
<span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># Build a dataframe with your connections</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Build your graph</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">)</span>
 
<span class="token comment"># Chart with Custom edges:</span>
<span class="token comment"># width边线条宽，edge_color边线条颜色</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> edge_color<span class="token operator">=</span><span class="token string">&quot;skyblue&quot;</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&quot;solid&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th></tr></thead><tbody><tr><th>0</th><td>A</td><td>D</td></tr><tr><th>1</th><td>B</td><td>A</td></tr><tr><th>2</th><td>C</td><td>E</td></tr><tr><th>3</th><td>A</td><td>C</td></tr></tbody></table></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF84XzEucG5n?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 总结 All</span>
<span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># Build a dataframe with your connections</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Build your graph</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">)</span>
 
<span class="token comment"># All together we can do something fancy</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&quot;skyblue&quot;</span><span class="token punctuation">,</span> node_shape<span class="token operator">=</span><span class="token string">&quot;o&quot;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> linewidths<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> font_size<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span> font_color<span class="token operator">=</span><span class="token string">&quot;grey&quot;</span><span class="token punctuation">,</span> font_weight<span class="token operator">=</span><span class="token string">&quot;bold&quot;</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> edge_color<span class="token operator">=</span><span class="token string">&quot;grey&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th></tr></thead><tbody><tr><th>0</th><td>A</td><td>D</td></tr><tr><th>1</th><td>B</td><td>A</td></tr><tr><th>2</th><td>C</td><td>E</td></tr><tr><th>3</th><td>A</td><td>C</td></tr></tbody></table></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF85XzEucG5n?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_3-网络布局的可能性-network-layout-possibilities" tabindex="-1"><a class="header-anchor" href="#_3-网络布局的可能性-network-layout-possibilities" aria-hidden="true">#</a> 3. 网络布局的可能性 Network layout possibilities</h2><p>实际上，有一种算法可以计算每个节点的最佳位置。NetworkX已开发并提出了几种算法。此页面通过采用相同的小型数据集并对其应用不同的布局算法来说明此概念。如果您不知道哪一个最适合您，则默认情况下将其设置为默认值！默认Spring布局</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># Build a dataframe with your connections</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;G&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;G&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;G&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;G&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Build your graph</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th></tr></thead><tbody><tr><th>0</th><td>A</td><td>D</td></tr><tr><th>1</th><td>B</td><td>A</td></tr><tr><th>2</th><td>C</td><td>E</td></tr><tr><th>3</th><td>A</td><td>C</td></tr><tr><th>4</th><td>E</td><td>A</td></tr><tr><th>5</th><td>F</td><td>F</td></tr><tr><th>6</th><td>E</td><td>G</td></tr><tr><th>7</th><td>G</td><td>D</td></tr><tr><th>8</th><td>G</td><td>B</td></tr><tr><th>9</th><td>D</td><td>G</td></tr><tr><th>10</th><td>F</td><td>C</td></tr></tbody></table></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Fruchterman Reingold Fruchterman Reingold引导布局算法布局</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&quot;skyblue&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span>nx<span class="token punctuation">.</span>fruchterman_reingold_layout<span class="token punctuation">(</span>G<span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;fruchterman_reingold&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Text(0.5, 1.0, &#39;fruchterman_reingold&#39;)
</code></pre><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8xMl8xLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Circular 环形布局</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&quot;skyblue&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span>nx<span class="token punctuation">.</span>circular_layout<span class="token punctuation">(</span>G<span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;circular&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Text(0.5, 1.0, &#39;circular&#39;)
</code></pre><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8xM18xLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Random 随机布局</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&quot;skyblue&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span>nx<span class="token punctuation">.</span>random_layout<span class="token punctuation">(</span>G<span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;random&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Text(0.5, 1.0, &#39;random&#39;)
</code></pre><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8xNF8xLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Spectral 光谱式布局</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&quot;skyblue&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span>nx<span class="token punctuation">.</span>spectral_layout<span class="token punctuation">(</span>G<span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;spectral&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Text(0.5, 1.0, &#39;spectral&#39;)
</code></pre><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8xNV8xLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Spring 跳跃式布局</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&quot;skyblue&quot;</span><span class="token punctuation">,</span> pos<span class="token operator">=</span>nx<span class="token punctuation">.</span>spring_layout<span class="token punctuation">(</span>G<span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;spring&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Text(0.5, 1.0, &#39;spring&#39;)
</code></pre><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8xNl8xLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_4-有向或无向网络-directed-or-undirected-network" tabindex="-1"><a class="header-anchor" href="#_4-有向或无向网络-directed-or-undirected-network" aria-hidden="true">#</a> 4. 有向或无向网络 Directed or Undirected network</h2><p>网络图可以在2个主要类别进行分割：有向网络和无向网络。如果它是定向的，那么在两个节点之间就有一个流的概念，这样就留下了一个去其他地方的地方。就像钱从A公司流向B公司一样。这就是为什么你可以看到（某种程度上）左边图表上的箭头，它给出了方向。例如，流量从B流向A。如果它是无向的，则这两个节点之间只有一个链接，例如，先生A和先生B是朋友。 生成图形时，必须使用适合您需要的函数：Graph（）用于无向（默认），DiGraph用于有向图</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment">##  DIRECTED 有向图</span>
 
<span class="token comment"># Build a dataframe with your connections</span>
<span class="token comment"># This time a pair can appear 2 times, in one side or in the other!</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Build your graph. Note that we use the DiGraph function to create the graph!</span>
<span class="token comment"># create_using=nx.DiGraph()创建有向图,默认是无向图</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> create_using<span class="token operator">=</span>nx<span class="token punctuation">.</span>DiGraph<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 
<span class="token comment"># Make the graph 有向图</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span> arrows<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th></tr></thead><tbody><tr><th>0</th><td>D</td><td>A</td></tr><tr><th>1</th><td>A</td><td>D</td></tr><tr><th>2</th><td>B</td><td>A</td></tr><tr><th>3</th><td>C</td><td>E</td></tr><tr><th>4</th><td>A</td><td>C</td></tr></tbody></table></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8xOF8xLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># UNDIRECTED 无向图</span>
 
<span class="token comment"># Build a dataframe with your connections</span>
<span class="token comment"># This time a pair can appear 2 times, in one side or in the other!</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Build your graph. Note that we use the Graph function to create the graph!</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> create_using<span class="token operator">=</span>nx<span class="token punctuation">.</span>Graph<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 
<span class="token comment"># Make the graph</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span> arrows<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;UN-Directed&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th></tr></thead><tbody><tr><th>0</th><td>D</td><td>A</td></tr><tr><th>1</th><td>A</td><td>D</td></tr><tr><th>2</th><td>B</td><td>A</td></tr><tr><th>3</th><td>C</td><td>E</td></tr><tr><th>4</th><td>A</td><td>C</td></tr></tbody></table></div><pre><code>Text(0.5, 1.0, &#39;UN-Directed&#39;)
</code></pre><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8xOV8yLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_5-将颜色映射到网络节点-map-a-color-to-network-nodes" tabindex="-1"><a class="header-anchor" href="#_5-将颜色映射到网络节点-map-a-color-to-network-nodes" aria-hidden="true">#</a> 5. 将颜色映射到网络节点 Map a color to network nodes</h2><p>一个常见的任务是按照节点的功能为网络图表的每个节点着色（我们称其为映射颜色）。它允许在图表中显示更多信息。有两种可能性：</p><ol><li>您要映射的要素是一个数值。然后，我们将使用连续的色标。在左图上，A比C暗，比B暗。</li><li>该功能是分类的。在右图上，A和B属于同一组，D和E分组在一起，而C在他的组中单独存在。我们使用了分类色标。</li></ol><p>通常我们使用2个表。第一个提供节点之间的链接。第二个提供每个节点的功能。您可以如下链接这两个文件。</p><ul><li>连续颜色</li><li>分类颜色</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## Continuous color scale 连续颜色</span>
<span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># Build a dataframe with your connections</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
 
<span class="token comment"># And a data frame with characteristics for your nodes</span>
carac <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;ID&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;E&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;myvalue&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;25&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;76&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;34&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment"># 设置值</span>
carac
<span class="token comment"># Build your graph 建立图</span>
G <span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> create_using<span class="token operator">=</span>nx<span class="token punctuation">.</span>Graph<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
 
<span class="token comment"># The order of the node for networkX is the following order:</span>
<span class="token comment"># 节点顺序</span>
G<span class="token punctuation">.</span>nodes<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Thus, we cannot give directly the &#39;myvalue&#39; column to netowrkX, we need to arrange the order!</span>
<span class="token comment"># Here is the tricky part: I need to reorder carac, to assign the good color to each node</span>
<span class="token comment"># 根据myvalue设置颜色,并匹配节点顺序和ID号</span>
carac <span class="token operator">=</span> carac<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">)</span>
carac <span class="token operator">=</span>carac<span class="token punctuation">.</span>reindex<span class="token punctuation">(</span>G<span class="token punctuation">.</span>nodes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
carac
<span class="token comment"># Plot it, providing a continuous color scale with cmap:</span>
<span class="token comment"># node_color设定颜色，输入的必须是float数组或者int值；cmap颜色条</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>carac<span class="token punctuation">[</span><span class="token string">&#39;myvalue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span>dtype<span class="token operator">=</span><span class="token string">&#39;float32&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>Blues<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>ID</th><th>myvalue</th></tr></thead><tbody><tr><th>0</th><td>A</td><td>123</td></tr><tr><th>1</th><td>B</td><td>25</td></tr><tr><th>2</th><td>C</td><td>76</td></tr><tr><th>3</th><td>D</td><td>12</td></tr><tr><th>4</th><td>E</td><td>34</td></tr></tbody></table></div><pre><code>NodeView((&#39;A&#39;, &#39;D&#39;, &#39;B&#39;, &#39;C&#39;, &#39;E&#39;))
</code></pre><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>myvalue</th></tr><tr><th>ID</th><th></th></tr></thead><tbody><tr><th>A</th><td>123</td></tr><tr><th>D</th><td>12</td></tr><tr><th>B</th><td>25</td></tr><tr><th>C</th><td>76</td></tr><tr><th>E</th><td>34</td></tr></tbody></table></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8yMV8zLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## Categorical color scale 连续颜色</span>
<span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># Build a dataframe with your connections</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
 
<span class="token comment"># And a data frame with characteristics for your nodes</span>
carac <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;ID&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;E&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;myvalue&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;group1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;group1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;group2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;group3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;group3&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
 
<span class="token comment"># Build your graph</span>
<span class="token comment"># 建立图</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> create_using<span class="token operator">=</span>nx<span class="token punctuation">.</span>Graph<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
 
<span class="token comment"># The order of the node for networkX is the following order:</span>
<span class="token comment"># 打印节点顺序</span>
G<span class="token punctuation">.</span>nodes<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Thus, we cannot give directly the &#39;myvalue&#39; column to netowrkX, we need to arrange the order!</span>
 
<span class="token comment"># Here is the tricky part: I need to reorder carac to assign the good color to each node</span>
carac<span class="token operator">=</span> carac<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 根据节点顺序设定值</span>
carac<span class="token operator">=</span>carac<span class="token punctuation">.</span>reindex<span class="token punctuation">(</span>G<span class="token punctuation">.</span>nodes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 
<span class="token comment"># And I need to transform my categorical column in a numerical value: group1-&gt;1, group2-&gt;2...</span>
<span class="token comment"># 设定类别</span>
carac<span class="token punctuation">[</span><span class="token string">&#39;myvalue&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>pd<span class="token punctuation">.</span>Categorical<span class="token punctuation">(</span>carac<span class="token punctuation">[</span><span class="token string">&#39;myvalue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
carac<span class="token punctuation">[</span><span class="token string">&#39;myvalue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cat<span class="token punctuation">.</span>codes
    
<span class="token comment"># Custom the nodes:</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span>carac<span class="token punctuation">[</span><span class="token string">&#39;myvalue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cat<span class="token punctuation">.</span>codes<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>Set1<span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>NodeView((&#39;A&#39;, &#39;D&#39;, &#39;B&#39;, &#39;C&#39;, &#39;E&#39;))






ID
A    0
D    2
B    0
C    1
E    2
dtype: int8
</code></pre><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8yMl8yLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_6-将颜色映射到网络的边-map-colour-to-the-edges-of-a-network" tabindex="-1"><a class="header-anchor" href="#_6-将颜色映射到网络的边-map-colour-to-the-edges-of-a-network" aria-hidden="true">#</a> 6. 将颜色映射到网络的边 Map colour to the edges of a Network</h2><p>我们假设我们对网络的每个边缘都有一个功能，例如，此功能可以是此链接表示的金额（数字值），也可以是发生在哪个洲（类别值）。我们希望边缘根据此变量而有所不同。</p><ul><li>数值型 numerical</li><li>类别型 categorical</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 数值型 numerical</span>
<span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># Build a dataframe with your connections</span>
<span class="token comment"># value设定链接值</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Build your graph</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> create_using<span class="token operator">=</span>nx<span class="token punctuation">.</span>Graph<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
 
<span class="token comment"># Custom the nodes:</span>
<span class="token comment"># edge_color设置边的颜色</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&#39;skyblue&#39;</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> edge_color<span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">10.0</span><span class="token punctuation">,</span> edge_cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>Blues<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th><th>value</th></tr></thead><tbody><tr><th>0</th><td>A</td><td>D</td><td>1</td></tr><tr><th>1</th><td>B</td><td>A</td><td>10</td></tr><tr><th>2</th><td>C</td><td>E</td><td>5</td></tr><tr><th>3</th><td>A</td><td>C</td><td>5</td></tr></tbody></table></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8yNF8xLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 类别型 categorical</span>
<span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># Build a dataframe with your connections</span>
<span class="token comment"># value设置类型</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;typeA&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;typeA&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;typeB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;typeB&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># And I need to transform my categorical column in a numerical value typeA-&gt;1, typeB-&gt;2...</span>
<span class="token comment"># 转换为类别</span>
df<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>pd<span class="token punctuation">.</span>Categorical<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cat<span class="token punctuation">.</span>codes
 
<span class="token comment"># Build your graph</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> create_using<span class="token operator">=</span>nx<span class="token punctuation">.</span>Graph<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
 
<span class="token comment"># Custom the nodes:</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&#39;skyblue&#39;</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> edge_color<span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cat<span class="token punctuation">.</span>codes<span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">10.0</span><span class="token punctuation">,</span> edge_cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>Set2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th><th>value</th></tr></thead><tbody><tr><th>0</th><td>A</td><td>D</td><td>typeA</td></tr><tr><th>1</th><td>B</td><td>A</td><td>typeA</td></tr><tr><th>2</th><td>C</td><td>E</td><td>typeB</td></tr><tr><th>3</th><td>A</td><td>C</td><td>typeB</td></tr></tbody></table></div><pre><code>0    0
1    0
2    1
3    1
dtype: int8
</code></pre><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8yNV8yLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_7-网络图的背景颜色-background-colour-of-network-chart" tabindex="-1"><a class="header-anchor" href="#_7-网络图的背景颜色-background-colour-of-network-chart" aria-hidden="true">#</a> 7. 网络图的背景颜色 Background colour of network chart</h2><p>你可以改变背景颜色您的网络图与 fig.set_facecolor()。 请注意，如果要保留png的背景色，则需要添加fig.get_facecolor。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># Build a dataframe with your connections</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Build your graph</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token string">&#39;from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> create_using<span class="token operator">=</span>nx<span class="token punctuation">.</span>Graph<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
 
<span class="token comment"># Custom the nodes:</span>
fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&#39;skyblue&#39;</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">,</span> edge_color<span class="token operator">=</span><span class="token string">&#39;white&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 设置背景颜色</span>
fig<span class="token punctuation">.</span>set_facecolor<span class="token punctuation">(</span><span class="token string">&quot;#00000F&quot;</span><span class="token punctuation">)</span>
 
<span class="token comment"># If you want to save the figure to png:</span>
<span class="token comment"># 保存图像需要设定facecolor=fig.get_facecolor() ，否者背景颜色为白色</span>
<span class="token comment"># plt.savefig(&#39;yourname.png&#39;, facecolor=fig.get_facecolor()，dpi=300)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>from</th><th>to</th></tr></thead><tbody><tr><th>0</th><td>A</td><td>D</td></tr><tr><th>1</th><td>B</td><td>A</td></tr><tr><th>2</th><td>C</td><td>E</td></tr><tr><th>3</th><td>A</td><td>C</td></tr></tbody></table></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8yN18xLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_8-来自相关性矩阵的网络-network-from-correlation-matrix" tabindex="-1"><a class="header-anchor" href="#_8-来自相关性矩阵的网络-network-from-correlation-matrix" aria-hidden="true">#</a> 8. 来自相关性矩阵的网络 Network from correlation matrix</h2><p>本页说明了如何绘制相关网络：基于相关矩阵构建的网络。假设您有10个人，并且知道他们彼此之间的亲密关系。可以在网络中表示这些关系。每个人都是一个节点。如果2个人足够接近（我们设定了一个阈值），则它们由边链接。那将显示人口结构！</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># libraries</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> networkx <span class="token keyword">as</span> nx
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
 
<span class="token comment"># I build a data set: 10 individuals and 5 variables for each</span>
ind1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
ind5<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span>
<span class="token comment"># 建立矩阵</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">:</span>ind1<span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">:</span>ind1 <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span>ind1 <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span>ind1 <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">:</span>ind1 <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">:</span>ind5<span class="token punctuation">,</span> <span class="token string">&#39;G&#39;</span><span class="token punctuation">:</span>ind5 <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token string">&#39;H&#39;</span><span class="token punctuation">:</span>ind5 <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;I&#39;</span><span class="token punctuation">:</span>ind5 <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;J&#39;</span><span class="token punctuation">:</span>ind5 <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df
 
<span class="token comment"># Calculate the correlation between individuals. We have to transpose first, because the corr function calculate the pairwise correlations between columns.</span>
<span class="token comment"># 计算相关性</span>
corr <span class="token operator">=</span> df<span class="token punctuation">.</span>corr<span class="token punctuation">(</span><span class="token punctuation">)</span>
corr
 
<span class="token comment"># Transform it in a links data frame (3 columns only):</span>
<span class="token comment"># 将相关系数矩阵压平</span>
links <span class="token operator">=</span> corr<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 设置列名</span>
links<span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;var1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;var2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span>
<span class="token comment">#links</span>
 
<span class="token comment"># Keep only correlation over a threshold and remove self correlation (cors (A,A)=1)</span>
<span class="token comment"># 剔除相同编号的行以及相关系数小于0.8的行</span>
links_filtered<span class="token operator">=</span>links<span class="token punctuation">.</span>loc<span class="token punctuation">[</span> <span class="token punctuation">(</span>links<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0.8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>links<span class="token punctuation">[</span><span class="token string">&#39;var1&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> links<span class="token punctuation">[</span><span class="token string">&#39;var2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">]</span>
<span class="token comment">#links_filtered</span>
 
<span class="token comment"># Build your graph</span>
<span class="token comment"># 作图</span>
G<span class="token operator">=</span>nx<span class="token punctuation">.</span>from_pandas_edgelist<span class="token punctuation">(</span>links_filtered<span class="token punctuation">,</span> <span class="token string">&#39;var1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;var2&#39;</span><span class="token punctuation">)</span>
 
<span class="token comment"># Plot the network:</span>
nx<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>G<span class="token punctuation">,</span> with_labels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> node_color<span class="token operator">=</span><span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> node_size<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span> edge_color<span class="token operator">=</span><span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span> linewidths<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> font_size<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>A</th><th>B</th><th>C</th><th>D</th><th>E</th><th>F</th><th>G</th><th>H</th><th>I</th><th>J</th></tr></thead><tbody><tr><th>0</th><td>5</td><td>13</td><td>6</td><td>8</td><td>8</td><td>1</td><td>4</td><td>2</td><td>1</td><td>3</td></tr><tr><th>1</th><td>10</td><td>19</td><td>10</td><td>14</td><td>12</td><td>1</td><td>3</td><td>4</td><td>4</td><td>5</td></tr><tr><th>2</th><td>3</td><td>9</td><td>3</td><td>5</td><td>3</td><td>13</td><td>17</td><td>13</td><td>14</td><td>15</td></tr><tr><th>3</th><td>4</td><td>6</td><td>5</td><td>4</td><td>5</td><td>4</td><td>7</td><td>4</td><td>7</td><td>4</td></tr><tr><th>4</th><td>8</td><td>13</td><td>9</td><td>12</td><td>10</td><td>18</td><td>19</td><td>19</td><td>20</td><td>19</td></tr><tr><th>5</th><td>10</td><td>13</td><td>13</td><td>11</td><td>11</td><td>5</td><td>8</td><td>9</td><td>7</td><td>9</td></tr><tr><th>6</th><td>12</td><td>16</td><td>14</td><td>15</td><td>13</td><td>2</td><td>2</td><td>3</td><td>6</td><td>3</td></tr><tr><th>7</th><td>1</td><td>7</td><td>6</td><td>3</td><td>4</td><td>11</td><td>14</td><td>14</td><td>14</td><td>11</td></tr><tr><th>8</th><td>9</td><td>11</td><td>9</td><td>9</td><td>9</td><td>3</td><td>4</td><td>5</td><td>7</td><td>5</td></tr><tr><th>9</th><td>4</td><td>9</td><td>4</td><td>7</td><td>4</td><td>8</td><td>8</td><td>8</td><td>10</td><td>8</td></tr></tbody></table></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>A</th><th>B</th><th>C</th><th>D</th><th>E</th><th>F</th><th>G</th><th>H</th><th>I</th><th>J</th></tr></thead><tbody><tr><th>A</th><td>1.000000</td><td>0.816480</td><td>0.901905</td><td>0.936634</td><td>0.949857</td><td>-0.409401</td><td>-0.505922</td><td>-0.327200</td><td>-0.325622</td><td>-0.276172</td></tr><tr><th>B</th><td>0.816480</td><td>1.000000</td><td>0.706978</td><td>0.928908</td><td>0.876425</td><td>-0.380840</td><td>-0.440560</td><td>-0.291830</td><td>-0.369119</td><td>-0.214817</td></tr><tr><th>C</th><td>0.901905</td><td>0.706978</td><td>1.000000</td><td>0.830659</td><td>0.926892</td><td>-0.343944</td><td>-0.416735</td><td>-0.200915</td><td>-0.245105</td><td>-0.230368</td></tr><tr><th>D</th><td>0.936634</td><td>0.928908</td><td>0.830659</td><td>1.000000</td><td>0.939070</td><td>-0.282163</td><td>-0.397256</td><td>-0.212778</td><td>-0.229146</td><td>-0.151093</td></tr><tr><th>E</th><td>0.949857</td><td>0.876425</td><td>0.926892</td><td>0.939070</td><td>1.000000</td><td>-0.412766</td><td>-0.488815</td><td>-0.301198</td><td>-0.346611</td><td>-0.278961</td></tr><tr><th>F</th><td>-0.409401</td><td>-0.380840</td><td>-0.343944</td><td>-0.282163</td><td>-0.412766</td><td>1.000000</td><td>0.972397</td><td>0.968543</td><td>0.975579</td><td>0.965554</td></tr><tr><th>G</th><td>-0.505922</td><td>-0.440560</td><td>-0.416735</td><td>-0.397256</td><td>-0.488815</td><td>0.972397</td><td>1.000000</td><td>0.952668</td><td>0.923379</td><td>0.957782</td></tr><tr><th>H</th><td>-0.327200</td><td>-0.291830</td><td>-0.200915</td><td>-0.212778</td><td>-0.301198</td><td>0.968543</td><td>0.952668</td><td>1.000000</td><td>0.956089</td><td>0.973569</td></tr><tr><th>I</th><td>-0.325622</td><td>-0.369119</td><td>-0.245105</td><td>-0.229146</td><td>-0.346611</td><td>0.975579</td><td>0.923379</td><td>0.956089</td><td>1.000000</td><td>0.927947</td></tr><tr><th>J</th><td>-0.276172</td><td>-0.214817</td><td>-0.230368</td><td>-0.151093</td><td>-0.278961</td><td>0.965554</td><td>0.957782</td><td>0.973569</td><td>0.927947</td><td>1.000000</td></tr></tbody></table></div><figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vbHVtaW5pb3VzL2FydGljbGVfcGljdHVyZV93YXJlaG91c2UvcmF3L21hc3Rlci9QeXRob24tU3R1ZHktTm90ZXMvTmV0d29yayUyMGNoYXJ0L291dHB1dF8yOV8yLnBuZw?x-oss-process=image/format,png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure>`,84);function y(f,w){const a=e("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[n("a",d,[r,t(a)]),k,s(" 网络图 （或图表或图形）显示了一组实体之间的互连。每个实体由一个或多个节点表示。节点之间的连接通过链接（或边）表示。网络的理论与实现是一个广阔的研究领域。整个网络都可以致力于此。例如，网络可以是有向的或无向的，加权的或未加权的。有许多不同的输入格式。为了指导您该领域，我建议按照建议的顺序执行以下示例。请注意关于该工具，我主要依靠"),n("a",m,[s("NetworkX"),t(a)]),s("库(2.4版本)。但是请注意，还应考虑使用"),n("a",v,[s("Graph Tool"),t(a)]),s("，尤其是在涉及高维网络时。该章节主要内容有：")]),g,n("blockquote",null,[n("p",null,[n("a",b,[s("https://python-graph-gallery.com/network-chart/"),t(a)])])]),h])}const G=o(i,[["render",y],["__file","2019-10-28-_python_ 基于NetworkX实现网络图的绘制.html.vue"]]);export{G as default};
