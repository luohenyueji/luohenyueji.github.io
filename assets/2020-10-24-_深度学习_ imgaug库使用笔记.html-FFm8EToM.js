import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c,a as n,b as a,d as p,e as t}from"./app-MsA2k2kn.js";const u={},l=n("h1",{id:"深度学习-imgaug库使用笔记",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#深度学习-imgaug库使用笔记","aria-hidden":"true"},"#"),a(" [深度学习] imgaug库使用笔记")],-1),r=n("p",null,"imgaug是一款非常有用的python图像增强库，非常值得推荐应用于深度学习图像增强。其包含许多增强技术，支持图像分类，目标检测，语义分割，热图、关键点检测等一系列任务的图像增强。本文主要介绍imgaug基本使用，以及应用关键点和边界框增强。",-1),k={href:"https://github.com/aleju/imgaug",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/aleju/imgaug-doc/tree/master/notebooks",target:"_blank",rel:"noopener noreferrer"},m={href:"https://imgaug.readthedocs.io/en/latest/source/overview_of_augmenters.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://imgaug.readthedocs.io/en/latest/source/api.html",target:"_blank",rel:"noopener noreferrer"},b=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 安装imgaug模块</span>
<span class="token comment">## pip install imgaug</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-加载和增强图片" tabindex="-1"><a class="header-anchor" href="#_1-加载和增强图片" aria-hidden="true">#</a> 1 加载和增强图片</h2><h3 id="_1-1-读图" tabindex="-1"><a class="header-anchor" href="#_1-1-读图" aria-hidden="true">#</a> 1.1 读图</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> imageio
<span class="token keyword">import</span> imgaug <span class="token keyword">as</span> ia
<span class="token comment">## 图片地址</span>
<span class="token comment">## https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/private/halayu_avatar/1.jpg</span>
image <span class="token operator">=</span> imageio<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&quot;1.jpg&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Original:&quot;</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image<span class="token punctuation">)</span>

<span class="token comment">## 改变图形尺寸,(240,120)为图形高宽</span>
image_resize <span class="token operator">=</span> ia<span class="token punctuation">.</span>imresize_single_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Resize:&quot;</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image_resize<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Original:
Resize:
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_4_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_4_2.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_1-2-增强一张图片" tabindex="-1"><a class="header-anchor" href="#_1-2-增强一张图片" aria-hidden="true">#</a> 1.2 增强一张图片</h3><p>使用该技术将图像旋转-25度至25度之间的随机值，我们也可以直接设置rotate为180，则图片固定旋转180度</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> imgaug <span class="token keyword">import</span> augmenters <span class="token keyword">as</span> iaa
<span class="token comment">## 设定随机数</span>
ia<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>

<span class="token comment">## 设定角度</span>
rotate <span class="token operator">=</span> iaa<span class="token punctuation">.</span>Affine<span class="token punctuation">(</span>rotate<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
image_aug <span class="token operator">=</span> rotate<span class="token punctuation">(</span>image<span class="token operator">=</span>image<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Augmented:&quot;</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image_aug<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Augmented:
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_6_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_1-3-增强多张图片" tabindex="-1"><a class="header-anchor" href="#_1-3-增强多张图片" aria-hidden="true">#</a> 1.3 增强多张图片</h3><p>直接将原始图像复制几次，然后进行扩增，得到四张不同效果的扩增图片。通常图片大小不同，用列表最为合适，如果是同样大小，按(N, H, W, [C])顺序输入一个numpy数组也行，N是图像个数，H,W为图像高宽，C为图像通道数。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

images <span class="token operator">=</span> <span class="token punctuation">[</span>image<span class="token punctuation">,</span> image<span class="token punctuation">,</span> image<span class="token punctuation">,</span> image<span class="token punctuation">]</span>
images_aug <span class="token operator">=</span> rotate<span class="token punctuation">(</span>images<span class="token operator">=</span>images<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;image count: {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>images_aug<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;image size: {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>images_aug<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Augmented batch:&quot;</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span>images_aug<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>image count: 4
image size: (320, 320, 3)
Augmented batch:
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_8_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_1-4-多个增强器使用" tabindex="-1"><a class="header-anchor" href="#_1-4-多个增强器使用" aria-hidden="true">#</a> 1.4 多个增强器使用</h3>`,18),v={href:"https://imgaug.readthedocs.io/en/latest/source/overview_of_augmenters.html",target:"_blank",rel:"noopener noreferrer"},h=t(`<p>要注意的是Crop函数剪切图片后，图像尺寸不变，非原图区域用黑色填充。如果想要更改图像大小修改Crop为，Crop(..., keep_size=False)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>seq <span class="token operator">=</span> iaa<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>
    iaa<span class="token punctuation">.</span>Affine<span class="token punctuation">(</span>rotate<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    iaa<span class="token punctuation">.</span>AdditiveGaussianNoise<span class="token punctuation">(</span>scale<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    iaa<span class="token punctuation">.</span>Crop<span class="token punctuation">(</span>percent<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>keep_size<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

images_aug <span class="token operator">=</span> seq<span class="token punctuation">(</span>images<span class="token operator">=</span>images<span class="token punctuation">)</span>

<span class="token keyword">for</span> i<span class="token punctuation">,</span>img <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>images_aug<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;img{} size is{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Augmented:&quot;</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span>images_aug<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>img0 size is(320, 320, 3)
img1 size is(320, 320, 3)
img2 size is(320, 320, 3)
img3 size is(320, 320, 3)
Augmented:
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_10_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p><strong>不同尺寸的结果</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>seq <span class="token operator">=</span> iaa<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>
    iaa<span class="token punctuation">.</span>Affine<span class="token punctuation">(</span>rotate<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    iaa<span class="token punctuation">.</span>AdditiveGaussianNoise<span class="token punctuation">(</span>scale<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    iaa<span class="token punctuation">.</span>Crop<span class="token punctuation">(</span>percent<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>keep_size<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

images_aug <span class="token operator">=</span> seq<span class="token punctuation">(</span>images<span class="token operator">=</span>images<span class="token punctuation">)</span>

<span class="token keyword">for</span> i<span class="token punctuation">,</span>img <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>images_aug<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;img{} size is{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">)</span>
    ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>img0 size is(241, 258, 3)
img1 size is(251, 267, 3)
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_12_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_12_2.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>img2 size is(264, 262, 3)
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_12_4.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>img3 size is(260, 249, 3)
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_12_6.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>此外，我们可以设置random_order=True，以随机排序使用各种增强技术，具体如下所示</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>seq <span class="token operator">=</span> iaa<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>
    iaa<span class="token punctuation">.</span>Affine<span class="token punctuation">(</span>rotate<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    iaa<span class="token punctuation">.</span>AdditiveGaussianNoise<span class="token punctuation">(</span>scale<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    iaa<span class="token punctuation">.</span>Crop<span class="token punctuation">(</span>percent<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span> random_order<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

images_aug <span class="token operator">=</span> <span class="token punctuation">[</span>seq<span class="token punctuation">(</span>image<span class="token operator">=</span>image<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Augmented:&quot;</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>ia<span class="token punctuation">.</span>draw_grid<span class="token punctuation">(</span>images_aug<span class="token punctuation">,</span> cols<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> rows<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Augmented:
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/blog/[深度学习] imgaug库使用笔记/20201024100636416.png?ref_type=heads" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_1-5-不同尺寸的图片随机增强" tabindex="-1"><a class="header-anchor" href="#_1-5-不同尺寸的图片随机增强" aria-hidden="true">#</a> 1.5 不同尺寸的图片随机增强</h3><p>这个例子我们将增强不同大小的图像</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>seq <span class="token operator">=</span> iaa<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token comment">## crop and pad images 裁剪并填充图形</span>
    iaa<span class="token punctuation">.</span>CropAndPad<span class="token punctuation">(</span>percent<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pad_mode<span class="token operator">=</span><span class="token string">&quot;edge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
    <span class="token comment">## change their color 更改颜色</span>
    iaa<span class="token punctuation">.</span>AddToHueAndSaturation<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
    <span class="token comment">## water-like effect 添加水体般的效果</span>
    iaa<span class="token punctuation">.</span>ElasticTransformation<span class="token punctuation">(</span>alpha<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">,</span> sigma<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
    <span class="token comment">## replace one squared area within the image by a constant intensity value 用一个单色框随机填充区域</span>
    iaa<span class="token punctuation">.</span>Cutout<span class="token punctuation">(</span><span class="token punctuation">)</span>  
<span class="token punctuation">]</span><span class="token punctuation">,</span> random_order<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment">## load images with different sizes</span>
<span class="token comment">## 不同尺寸图像</span>
images_different_sizes <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token comment">## https://upload.wikimedia.org/wikipedia/commons/e/ed/BRACHYLAGUS_IDAHOENSIS.jpg</span>
    imageio<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&quot;https://upload.wikimedia.org/wikipedia/commons/e/ed/BRACHYLAGUS_IDAHOENSIS.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    imageio<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&quot;1.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token comment">## augment them as one batch</span>
images_aug <span class="token operator">=</span> seq<span class="token punctuation">(</span>images<span class="token operator">=</span>images_different_sizes<span class="token punctuation">)</span>

<span class="token comment">## visualize the results</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Image 0 (input shape: %s, output shape: %s)&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>images_different_sizes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">,</span> images_aug<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">[</span>images_different_sizes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> images_aug<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Image 1 (input shape: %s, output shape: %s)&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>images_different_sizes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">,</span> images_aug<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">[</span>images_different_sizes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> images_aug<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Image 0 (input shape: (257, 286, 3), output shape: (257, 286, 3))
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_16_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>Image 1 (input shape: (320, 320, 3), output shape: (320, 320, 3))
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_16_3.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_1-6-保存图片" tabindex="-1"><a class="header-anchor" href="#_1-6-保存图片" aria-hidden="true">#</a> 1.6 保存图片</h3><p>直接循环结果列表通过imageio.imwrite即可保存图片</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> index<span class="token punctuation">,</span>image <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>images_aug<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## imwrite == imsave</span>
    imageio<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">&quot;result{}.jpg&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>image<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-关键点图片增强" tabindex="-1"><a class="header-anchor" href="#_2-关键点图片增强" aria-hidden="true">#</a> 2 关键点图片增强</h2><p>关键点为图像上的点，通常以像素点的坐标位置表示。又称为landmarks，常用于人体姿势估计，人脸识别等。imgaug进行关键点增强所用到的api为KeypointsOnImage，KeypointsOnImage实例化关键点类，将关键点列表与图像形状组合在一起</p><h3 id="_2-1-基础实例" tabindex="-1"><a class="header-anchor" href="#_2-1-基础实例" aria-hidden="true">#</a> 2.1 基础实例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> imageio
<span class="token keyword">import</span> imgaug <span class="token keyword">as</span> ia

<span class="token comment">## https://upload.wikimedia.org/wikipedia/commons/e/e6/Macropus_rufogriseus_rufogriseus_Bruny.jpg</span>
image <span class="token operator">=</span> imageio<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&quot;https://upload.wikimedia.org/wikipedia/commons/e/e6/Macropus_rufogriseus_rufogriseus_Bruny.jpg&quot;</span><span class="token punctuation">)</span>
<span class="token comment">## 重置图片大小</span>
image <span class="token operator">=</span> ia<span class="token punctuation">.</span>imresize_single_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">389</span><span class="token punctuation">,</span> <span class="token number">259</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_21_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>然后我们放置并可视化一些关键点</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> imgaug<span class="token punctuation">.</span>augmentables<span class="token punctuation">.</span>kps <span class="token keyword">import</span> Keypoint<span class="token punctuation">,</span> KeypointsOnImage
kps <span class="token operator">=</span> <span class="token punctuation">[</span>
    Keypoint<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">81</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token comment">## left eye (from camera perspective)</span>
    Keypoint<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">125</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">## right eye</span>
    Keypoint<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">112</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">102</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">## nose</span>
    Keypoint<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">102</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">210</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">## left paw</span>
    Keypoint<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">127</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">207</span><span class="token punctuation">)</span>  <span class="token comment">## right paw</span>
<span class="token punctuation">]</span>
<span class="token comment">## 实例化关键点类，将关键点列表与图像形状组合在一起</span>
<span class="token comment">## https://imgaug.readthedocs.io/en/latest/source/api_augmentables_kps.html?highlight=KeypointsOnImage#imgaug.augmentables.kps.KeypointsOnImage.from_xy_array</span>
kpsoi <span class="token operator">=</span> KeypointsOnImage<span class="token punctuation">(</span>kps<span class="token punctuation">,</span> shape<span class="token operator">=</span>image<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>kpsoi<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## 打印关键点</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>kpsoi<span class="token punctuation">.</span>keypoints<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_23_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>[Keypoint(x=99.00000000, y=81.00000000), Keypoint(x=125.00000000, y=80.00000000), Keypoint(x=112.00000000, y=102.00000000), Keypoint(x=102.00000000, y=210.00000000), Keypoint(x=127.00000000, y=207.00000000)]
</code></pre><p><strong>接下来我们将应用平移和仿射变化改变图片和关键点</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> imgaug<span class="token punctuation">.</span>augmenters <span class="token keyword">as</span> iaa
ia<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

seq <span class="token operator">=</span> iaa<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>
    iaa<span class="token punctuation">.</span>Affine<span class="token punctuation">(</span>translate_px<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> rotate<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">## color jitter, only affects the image 色彩抖动只影响图片，不影响关键点。</span>
    iaa<span class="token punctuation">.</span>AddToHueAndSaturation<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  
<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">## 输入图形和关键点参数，得到变换后的图形和关键点参数</span>
<span class="token comment">## 如果是处理多张图像，给出图像列表和对应的关键点列表</span>
image_aug<span class="token punctuation">,</span> kpsoi_aug <span class="token operator">=</span> seq<span class="token punctuation">(</span>image<span class="token operator">=</span>image<span class="token punctuation">,</span> keypoints<span class="token operator">=</span>kpsoi<span class="token punctuation">)</span>

<span class="token comment">## 可视化变换前后关键点效果</span>
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>
    np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">[</span>
        kpsoi<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        kpsoi_aug<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_aug<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_25_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_2-2-关键点投影" tabindex="-1"><a class="header-anchor" href="#_2-2-关键点投影" aria-hidden="true">#</a> 2.2 关键点投影</h3><p>使用关键点时，您可能有时必须更改图像大小。KeypointsOnImage.on(image or shape)更改图像大小后，该方法可用于重新计算关键点坐标。它将关键点投影到新图像上相同的相对位置上</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 扩大图像为原来的两倍</span>
image_larger <span class="token operator">=</span> ia<span class="token punctuation">.</span>imresize_single_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Small image %s with keypoints optimized for the size:&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>image<span class="token punctuation">.</span>shape<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>kpsoi<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Large image %s with keypoints optimized for the small image size:&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>image_larger<span class="token punctuation">.</span>shape<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>kpsoi<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_larger<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Large image %s with keypoints projected onto that size:&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>image_larger<span class="token punctuation">.</span>shape<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>kpsoi<span class="token punctuation">.</span>on<span class="token punctuation">(</span>image_larger<span class="token punctuation">)</span><span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_larger<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Small image (389, 259, 3) with keypoints optimized for the size:
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_27_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>Large image (778, 518, 3) with keypoints optimized for the small image size:
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_27_3.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>Large image (778, 518, 3) with keypoints projected onto that size:
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_27_5.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>当然输出投影后的关键点信息也可以用KeypointsOnImage.on</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 打印关键点</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>kpsoi<span class="token punctuation">.</span>keypoints<span class="token punctuation">)</span>
<span class="token comment">## 打印关键点</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>kpsoi<span class="token punctuation">.</span>on<span class="token punctuation">(</span>image_larger<span class="token punctuation">)</span><span class="token punctuation">.</span>keypoints<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>[Keypoint(x=99.00000000, y=81.00000000), Keypoint(x=125.00000000, y=80.00000000), Keypoint(x=112.00000000, y=102.00000000), Keypoint(x=102.00000000, y=210.00000000), Keypoint(x=127.00000000, y=207.00000000)]
[Keypoint(x=198.00000000, y=162.00000000), Keypoint(x=250.00000000, y=160.00000000), Keypoint(x=224.00000000, y=203.99998474), Keypoint(x=204.00000000, y=420.00000000), Keypoint(x=254.00000000, y=414.00003052)]
</code></pre><h3 id="_2-3-关键点平移" tabindex="-1"><a class="header-anchor" href="#_2-3-关键点平移" aria-hidden="true">#</a> 2.3 关键点平移</h3><p>前面提到的on()可以在调整大小的图像的情况下提供帮助，但是在填充图像时则无济于事，因为在这些情况下，关键点在图像上的相对位置会发生变化。可以使用KeypointsOnImage.shift(x=<code>&lt;number&gt;</code>, y=<code>&lt;number&gt;</code>)来补偿这种填充，其中x描述了向左/向右和y向顶部/底部的移动。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>image_pad <span class="token operator">=</span> ia<span class="token punctuation">.</span>pad<span class="token punctuation">(</span>image<span class="token punctuation">,</span> left<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>
kpsoi_pad <span class="token operator">=</span> kpsoi<span class="token punctuation">.</span>shift<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>kpsoi_pad<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_pad<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">## 打印关键点</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>kpsoi<span class="token punctuation">.</span>shift<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>keypoints<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>/opt/conda/envs/python35-paddle120-env/lib/python3.7/site-packages/imgaug/imgaug.py:106: DeprecationWarning: Using imgaug.imgaug.pad is deprecated. Use imgaug.augmenters.size.pad instead.
  warn(msg, category=DeprecationWarning, stacklevel=stacklevel)
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_31_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>[Keypoint(x=199.00000000, y=81.00000000), Keypoint(x=225.00000000, y=80.00000000), Keypoint(x=212.00000000, y=102.00000000), Keypoint(x=202.00000000, y=210.00000000), Keypoint(x=227.00000000, y=207.00000000)]
</code></pre><h3 id="_2-4-关键点绘制" tabindex="-1"><a class="header-anchor" href="#_2-4-关键点绘制" aria-hidden="true">#</a> 2.4 关键点绘制</h3><p>KeypointsOnImage.draw_on_image()可以在图像上绘制关键点，size控制关键点大小，color控制关键点颜色。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">[</span>
    kpsoi<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    kpsoi<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    kpsoi<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    kpsoi<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_33_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>此外draw_on_image()方法还提供了一个copy参数，可以将其设置为False直接修改图像</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>image_draw <span class="token operator">=</span> np<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
kpsoi<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_draw<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> copy<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
kpsoi<span class="token punctuation">.</span>shift<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_draw<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> copy<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
kpsoi<span class="token punctuation">.</span>shift<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_draw<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> copy<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image_draw<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_35_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>以下代码显示如何单独设置各个关键点的颜色</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
image_drawn <span class="token operator">=</span> np<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
<span class="token keyword">for</span> kp<span class="token punctuation">,</span> color <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>kpsoi<span class="token punctuation">.</span>keypoints<span class="token punctuation">,</span> colors<span class="token punctuation">)</span><span class="token punctuation">:</span>
    image_drawn <span class="token operator">=</span> kp<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_drawn<span class="token punctuation">,</span> color<span class="token operator">=</span>color<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">,</span> copy<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image_drawn<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_37_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_2-5-关键点与numpy数组" tabindex="-1"><a class="header-anchor" href="#_2-5-关键点与numpy数组" aria-hidden="true">#</a> 2.5 关键点与numpy数组</h3><p>KeypointsOnImage可以轻松转换为(N, 2)xy坐标形式的float32 numpy数组</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>arr <span class="token operator">=</span> kpsoi<span class="token punctuation">.</span>to_xy_array<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Keypoints as objects:&quot;</span><span class="token punctuation">,</span> kpsoi<span class="token punctuation">.</span>keypoints<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Keypoints as array:&quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Shape:&quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>Keypoints as objects: [Keypoint(x=99.00000000, y=81.00000000), Keypoint(x=125.00000000, y=80.00000000), Keypoint(x=112.00000000, y=102.00000000), Keypoint(x=102.00000000, y=210.00000000), Keypoint(x=127.00000000, y=207.00000000)]
Keypoints as array: [[ 99.  81.]
 [125.  80.]
 [112. 102.]
 [102. 210.]
 [127. 207.]]
Shape: (5, 2)
</code></pre><p>同样numpy数组也可以直接转换为KeypointsOnImage，但必须要提供图像尺寸</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>xy <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">27.54</span><span class="token punctuation">,</span> <span class="token number">49.13</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
image_height <span class="token operator">=</span> <span class="token number">50</span>
image_width <span class="token operator">=</span> <span class="token number">100</span>
kpsoi_new <span class="token operator">=</span> ia<span class="token punctuation">.</span>KeypointsOnImage<span class="token punctuation">.</span>from_xy_array<span class="token punctuation">(</span>xy<span class="token punctuation">,</span> shape<span class="token operator">=</span><span class="token punctuation">(</span>image_height<span class="token punctuation">,</span> image_width<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>kpsoi_new<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>KeypointsOnImage([Keypoint(x=10.00000000, y=20.00000000), Keypoint(x=50.00000000, y=17.00000000), Keypoint(x=27.54000092, y=49.13000107)], shape=(50, 100, 3))
</code></pre><h2 id="_3-边界框增强" tabindex="-1"><a class="header-anchor" href="#_3-边界框增强" aria-hidden="true">#</a> 3 边界框增强</h2><p>常用api如下：</p><ol><li>imgaug.augmentables.bbs.BoundingBox(x1, y1, x2, y2, label=None): 单个边界框的容器，根据其左上角和右下角定义，每个角均以x和y像素坐标给出,label为标签</li><li>imgaug.augmentables.bbs.BoundingBoxesOnImage(bounding_boxes, shape): 包含放置在图像上的边界框列表的容器。shape变量表示放置边界框的图像的形状。</li></ol><h3 id="_3-1-基础实例" tabindex="-1"><a class="header-anchor" href="#_3-1-基础实例" aria-hidden="true">#</a> 3.1 基础实例</h3><p>让我们尝试一个简单的边界框增强示例。我们加载一张图像，在其上放置两个边界框，然后使用仿射变换来扩充数据。首先，我们加载并可视化数据。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> imageio
<span class="token keyword">import</span> imgaug <span class="token keyword">as</span> ia
<span class="token keyword">from</span> imgaug<span class="token punctuation">.</span>augmentables<span class="token punctuation">.</span>bbs <span class="token keyword">import</span> BoundingBox<span class="token punctuation">,</span> BoundingBoxesOnImage

ia<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>

image <span class="token operator">=</span> imageio<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&quot;https://upload.wikimedia.org/wikipedia/commons/8/8e/Yellow-headed_caracara_%28Milvago_chimachima%29_on_capybara_%28Hydrochoeris_hydrochaeris%29.JPG&quot;</span><span class="token punctuation">)</span>
<span class="token comment">## 重置图像大小</span>
image <span class="token operator">=</span> ia<span class="token punctuation">.</span>imresize_single_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">298</span><span class="token punctuation">,</span> <span class="token number">447</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## 设置边界框</span>
bbs <span class="token operator">=</span> BoundingBoxesOnImage<span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token comment">## 边界框的左上角和右下角坐标</span>
    BoundingBox<span class="token punctuation">(</span>x1<span class="token operator">=</span><span class="token number">0.2</span><span class="token operator">*</span><span class="token number">447</span><span class="token punctuation">,</span> x2<span class="token operator">=</span><span class="token number">0.85</span><span class="token operator">*</span><span class="token number">447</span><span class="token punctuation">,</span> y1<span class="token operator">=</span><span class="token number">0.3</span><span class="token operator">*</span><span class="token number">298</span><span class="token punctuation">,</span> y2<span class="token operator">=</span><span class="token number">0.95</span><span class="token operator">*</span><span class="token number">298</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    BoundingBox<span class="token punctuation">(</span>x1<span class="token operator">=</span><span class="token number">0.4</span><span class="token operator">*</span><span class="token number">447</span><span class="token punctuation">,</span> x2<span class="token operator">=</span><span class="token number">0.65</span><span class="token operator">*</span><span class="token number">447</span><span class="token punctuation">,</span> y1<span class="token operator">=</span><span class="token number">0.1</span><span class="token operator">*</span><span class="token number">298</span><span class="token punctuation">,</span> y2<span class="token operator">=</span><span class="token number">0.4</span><span class="token operator">*</span><span class="token number">298</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span> shape<span class="token operator">=</span>image<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bbs<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_45_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>下一步是定义我们要应用的增强方法。我们选择一个简单的对比度增强（仅影响图像）和仿射变换（影响图像和边界框）。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> imgaug <span class="token keyword">import</span> augmenters <span class="token keyword">as</span> iaa 
ia<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

seq <span class="token operator">=</span> iaa<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>
    iaa<span class="token punctuation">.</span>GammaContrast<span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    iaa<span class="token punctuation">.</span>Affine<span class="token punctuation">(</span>translate_percent<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，我们同时增强图像和其上的边框。我们可以使用seq.augment(...)它或它的快捷方式seq(...)。请注意，如果我们想扩充几张图片，则可以使用seq(images=[image1, image2, ...], bounding_boxes=[bbs1, bbs2, ...])。该方法相当灵活，并且还可以处理不同于的边界框BoundingBoxesOnImage</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 输入增强前的图像和边框，得到增强后的图像和边框</span>
image_aug<span class="token punctuation">,</span> bbs_aug <span class="token operator">=</span> seq<span class="token punctuation">(</span>image<span class="token operator">=</span>image<span class="token punctuation">,</span> bounding_boxes<span class="token operator">=</span>bbs<span class="token punctuation">)</span>
<span class="token comment">## 可视化，size边框的宽度</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bbs_aug<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_aug<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_49_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>如果想要保存数据到xml，直接循环提取信息即可</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> index<span class="token punctuation">,</span>bb <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>bbs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;index is {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;x1 is {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span>x1<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;y1 is {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span>y1<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;x2 is {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span>x2<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;y2 is {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span>y2<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;label is {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span>label<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token operator">*</span><span class="token number">50</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>index is 0
x1 is 89.4
y1 is 89.39999999999999
x2 is 379.95
y2 is 283.09999999999997
label is None
--------------------------------------------------
index is 1
x1 is 178.8
y1 is 29.8
x2 is 290.55
y2 is 119.2
label is None
--------------------------------------------------
</code></pre><h3 id="_3-2-图像旋转带来的问题" tabindex="-1"><a class="header-anchor" href="#_3-2-图像旋转带来的问题" aria-hidden="true">#</a> 3.2 图像旋转带来的问题</h3><p>让我们尝试另一种增强技术。这次我们应用仅包含旋转的仿射变换。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>image_aug<span class="token punctuation">,</span> bbs_aug <span class="token operator">=</span> iaa<span class="token punctuation">.</span>Affine<span class="token punctuation">(</span>rotate<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">(</span>image<span class="token operator">=</span>image<span class="token punctuation">,</span> bounding_boxes<span class="token operator">=</span>bbs<span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bbs_aug<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_aug<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_53_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>您现在可能倾向于说这些增强功能看起来有些错误，并且某些地方一定出错了。但是输出实际上是正确的，并且显示了边界框扩展的特殊情况，为什么要避免旋转。问题源于非对象像素是边界框的一部分。旋转后，必须绘制一个新的边界框，其中包含了这些非对象像素。以下示例将问题可视化。可以看到旋转后原来的对象一部分在图像外了，所以尽可能不要旋转图像。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

<span class="token comment">## highlight the area of each bounding box</span>
<span class="token comment">## 深度复制图像</span>
image_points <span class="token operator">=</span> np<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token comment">## 设置每个边框面积颜色</span>
<span class="token keyword">for</span> bb<span class="token punctuation">,</span> color <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">,</span> colors<span class="token punctuation">)</span><span class="token punctuation">:</span>
    image_points<span class="token punctuation">[</span>bb<span class="token punctuation">.</span>y1_int<span class="token punctuation">:</span>bb<span class="token punctuation">.</span>y2_int<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span> bb<span class="token punctuation">.</span>x1_int<span class="token punctuation">:</span>bb<span class="token punctuation">.</span>x2_int<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> color

<span class="token comment">## rotate the image with the highlighted bounding box areas</span>
<span class="token comment">## 旋转图像</span>
rot <span class="token operator">=</span> iaa<span class="token punctuation">.</span>Affine<span class="token punctuation">(</span>rotate<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>
image_points_aug<span class="token punctuation">,</span> bbs_aug <span class="token operator">=</span> rot<span class="token punctuation">(</span>image<span class="token operator">=</span>image_points<span class="token punctuation">,</span> bounding_boxes<span class="token operator">=</span>bbs<span class="token punctuation">)</span>

<span class="token comment">## visualize</span>
<span class="token comment">## 可视化</span>
side_by_side <span class="token operator">=</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">[</span>
    bbs<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_points<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    bbs_aug<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_points_aug<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>side_by_side<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>&lt;matplotlib.image.AxesImage at 0x7f36ac06f690&gt;
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_55_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_3-3-绘图" tabindex="-1"><a class="header-anchor" href="#_3-3-绘图" aria-hidden="true">#</a> 3.3 绘图</h3><p>常见的操作是在图像上绘制边框。上面的示例中已经使用了执行此操作的方法。它提供参数来控制绘制的边界框的颜色，size（即边框厚度）和alpha（即透明度）。以下示例显示了它们的用法。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>image_bbs <span class="token operator">=</span> np<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
image_bbs <span class="token operator">=</span> bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_bbs<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
image_bbs <span class="token operator">=</span> bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_bbs<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image_bbs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_57_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>如果我们向边界框添加标签，它们也会自动绘制</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bbs_labeled <span class="token operator">=</span> bbs<span class="token punctuation">.</span>deepcopy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">## 添加标签</span>
bbs_labeled<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">&quot;approximately a pig&quot;</span>
bbs_labeled<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">&quot;bird&quot;</span>

image_bbs <span class="token operator">=</span> bbs_labeled<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>

ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image_bbs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_59_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>如果要在边界框上设置标签但不绘制它们，请在每个边界框上手动调用draw_box_on_image()或者draw_label_on_image()。那只会画边界框或者标签</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bbs_labeled <span class="token operator">=</span> bbs<span class="token punctuation">.</span>deepcopy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">## 添加标签</span>
bbs_labeled<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">&quot;approximately a pig&quot;</span>
bbs_labeled<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">&quot;bird&quot;</span>

image_bbs <span class="token operator">=</span> bbs_labeled<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>draw_box_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image_bbs<span class="token punctuation">)</span>
image_bbs <span class="token operator">=</span> bbs_labeled<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>draw_label_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image_bbs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_61_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_61_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_3-4-提取图像内容-移动边界框" tabindex="-1"><a class="header-anchor" href="#_3-4-提取图像内容-移动边界框" aria-hidden="true">#</a> 3.4 提取图像内容，移动边界框</h3><p>使用边界框时，另一种常见操作是提取其相应的图像区域。当边界框完全位于图像平面内时，这很容易。如果它全部或部分位于图像平面之外，则操作将变得更加复杂。BoundingBox提供extract_from_image(image)，避免了处理此类问题。如果边界框未完全位于图像中，则将结果零填充，以达到边界框的高度和宽度。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bird <span class="token operator">=</span> bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>extract_from_image<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bird<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_63_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>通过结合.extend()和.extract_from_image()可以提取更大的图像区域</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bird <span class="token operator">=</span> bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>extend<span class="token punctuation">(</span>all_sides<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> left<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_from_image<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bird<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_65_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>现在，我们将边界框部分移到图像的外部，然后提取其内容</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bb <span class="token operator">=</span> bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bb<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bb<span class="token punctuation">.</span>extract_from_image<span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_67_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_67_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>如您在第二张图像中看到的，图像外部的像素填充有零。如果您不希望这样做，则可以添加参数pad=False以停用填充。默认情况下，它将仍然填充以防止任何轴变为零，即，您将不会获得(0, 0, 3)输出数组。这样可以防止错误，例如在绘制过程中。如果您希望在这种情况下获得零大小的数组，只需添加prevent_zero_size=False。</p><h3 id="_3-5-交并比intersection-union-and-iou" tabindex="-1"><a class="header-anchor" href="#_3-5-交并比intersection-union-and-iou" aria-hidden="true">#</a> 3.5 交并比Intersection, Union and IoU</h3><p>在处理边界框时，计算IoU值（联合上的交集）是最常见的任务之一。imgaug提供了一种方法可用于计算边界框的交集和并集。让我们从相交处开始，可以使用相交进行估算BoundingBox.intersection(other_bounding_box)并返回一个新的边界框。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## 例子中两个边框的交集</span>
bb_intersection <span class="token operator">=</span> bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>intersection<span class="token punctuation">(</span>bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bb_intersection<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The intersection has a height of %.4f, width of %.4f and an area of %.4f&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>
    bb_intersection<span class="token punctuation">.</span>height<span class="token punctuation">,</span> bb_intersection<span class="token punctuation">.</span>width<span class="token punctuation">,</span> bb_intersection<span class="token punctuation">.</span>area<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_71_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>The intersection has a height of 29.8000, width of 111.7500 and an area of 3330.1500
</code></pre><p>现在，使用BoundingBox.union(other_bounding_box)计算并集</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bb_union <span class="token operator">=</span> bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>union<span class="token punctuation">(</span>bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bb_union<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The union has a height of %.4f, width of %.4f and an area of %.4f.&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>
    bb_union<span class="token punctuation">.</span>height<span class="token punctuation">,</span> bb_union<span class="token punctuation">.</span>width<span class="token punctuation">,</span> bb_union<span class="token punctuation">.</span>area<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_73_0.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>The union has a height of 253.3000, width of 290.5500 and an area of 73596.3150.
</code></pre><p>最后是IoU值，计算为BoundingBox.iou(other_bounding_box)。在下面的代码块中，我们为标准示例边界框计算一次，然后在移动两个框之一以使其重叠的情况下计算一次。在后一种情况下，IoU较高。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## Shift one BB down so that the BBs overlap</span>
<span class="token comment">## 平移图像，以重叠图像</span>
bbs_shifted <span class="token operator">=</span> ia<span class="token punctuation">.</span>BoundingBoxesOnImage<span class="token punctuation">(</span><span class="token punctuation">[</span>
    bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span> shape<span class="token operator">=</span>bbs<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

<span class="token comment">## Compute IoU without shift</span>
<span class="token comment">## 平移前的交并比</span>
iou <span class="token operator">=</span> bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>iou<span class="token punctuation">(</span>bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The IoU of the bounding boxes is: %.4f.&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>iou<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## Compute IoU after shift</span>
<span class="token comment">## 平移后的交并比</span>
iou_shifted <span class="token operator">=</span> bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>iou<span class="token punctuation">(</span>bbs_shifted<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The IoU of the bounding boxes after shifting one box is: %.4f.&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>iou_shifted<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## Visualize unshifted and shifted BBs</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>
    np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">[</span>
        bbs<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        bbs_shifted<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>The IoU of the bounding boxes is: 0.0529.
The IoU of the bounding boxes after shifting one box is: 0.1775.
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_75_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h3 id="_3-6-将边界框投影到其他图像上" tabindex="-1"><a class="header-anchor" href="#_3-6-将边界框投影到其他图像上" aria-hidden="true">#</a> 3.6 将边界框投影到其他图像上</h3><p>有时可能需要将边界框从一个图像投影到另一个图像。这在调整图像大小时尤其重要。在这种情况下，您可以使用BoundingBox.project（from_shape, to_shap）和BoundingBoxesImage.on（new_image）。如下所示。如果您必须补偿填充，请使用BoundingBox.shift（[top]、[right]、[bottom]、[left]）或相同的BoundingBoxesImage方法。对于BoundingBoxesImage，请确保在填充后使用新的图像形状更新.shape属性。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## we limit the example here to the bounding box of the bird</span>
<span class="token comment">## #我们将这里的例子局限于鸟的边界框</span>
bb_bird <span class="token operator">=</span> bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
bbsoi_bird <span class="token operator">=</span> ia<span class="token punctuation">.</span>BoundingBoxesOnImage<span class="token punctuation">(</span><span class="token punctuation">[</span>bbs<span class="token punctuation">.</span>bounding_boxes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> shape<span class="token operator">=</span>image<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

<span class="token comment">## lets resize the original image to twice its width</span>
<span class="token comment">## 扩大图像的宽为原来的两倍</span>
image_larger <span class="token operator">=</span> ia<span class="token punctuation">.</span>imresize_single_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## we draw what would happen without any change to the bounding box</span>
<span class="token comment">## 原始框绘制</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;BoundingBox without changes:&quot;</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bb_bird<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_larger<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## now the change it using project()</span>
<span class="token comment">## 使用project扩充绘制框</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;BoundingBox with project(from, to):&quot;</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bb_bird<span class="token punctuation">.</span>project<span class="token punctuation">(</span>from_shape<span class="token operator">=</span>image<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> to_shape<span class="token operator">=</span>image_larger<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_larger<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>BoundingBox without changes:
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_77_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>BoundingBox with project(from, to):
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_77_3.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><p>也可以用on方法绘制框</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## and now we do the same two steps for BoundingBoxesOnImage, though here the method is called .on()</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;BoundingBoxesOnImage without changes:&quot;</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bbsoi_bird<span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_larger<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;BoundingBoxesOnImage with on(shape):&quot;</span><span class="token punctuation">)</span>
ia<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>bbsoi_bird<span class="token punctuation">.</span>on<span class="token punctuation">(</span>image_larger<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">.</span>draw_on_image<span class="token punctuation">(</span>image_larger<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>BoundingBoxesOnImage without changes:
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_79_1.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><pre><code>BoundingBoxesOnImage with on(shape):
</code></pre><figure><img src="https://gitlab.com/luohenyueji/article_picture_warehouse/-/raw/main/CSDN/[深度学习] imgaug库使用笔记/output_79_3.png" alt="png" tabindex="0" loading="lazy"><figcaption>png</figcaption></figure><h2 id="_4-参考" tabindex="-1"><a class="header-anchor" href="#_4-参考" aria-hidden="true">#</a> 4 参考</h2>`,147),_={href:"https://github.com/aleju/imgaug",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/aleju/imgaug-doc/tree/master/notebooks",target:"_blank",rel:"noopener noreferrer"},f={href:"https://imgaug.readthedocs.io/en/latest/source/overview_of_augmenters.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://imgaug.readthedocs.io/en/latest/source/api.html",target:"_blank",rel:"noopener noreferrer"};function x(z,q){const s=o("ExternalLinkIcon");return i(),c("div",null,[l,r,n("ul",null,[n("li",null,[a("官方代码仓库："),n("a",k,[a("imgaug"),p(s)])]),n("li",null,[a("官方入门文档："),n("a",d,[a("imgaug doc"),p(s)])]),n("li",null,[a("增强效果预览："),n("a",m,[a("overview of augmenters"),p(s)])]),n("li",null,[a("Api："),n("a",g,[a("imgaug dpi"),p(s)])])]),b,n("p",null,[a("通过Sequential将不同的增强器组合到一个管道中，然后将它们全部应用到单个增强调用中。如下面例子我们使用仿射旋转（Affine），添加一些高斯噪声（AdditiveGaussianNoise）并通过从每个图像侧面（Crop）删除0％到20％来裁剪图像。不同增强器的接口见"),n("a",v,[a("Overview of Augmenters "),p(s)]),a("。")]),h,n("ul",null,[n("li",null,[n("a",_,[a("imgaug"),p(s)])]),n("li",null,[n("a",y,[a("imgaug doc"),p(s)])]),n("li",null,[n("a",f,[a("overview of augmenters"),p(s)])]),n("li",null,[n("a",w,[a("imgaug dpi"),p(s)])])])])}const S=e(u,[["render",x],["__file","2020-10-24-_深度学习_ imgaug库使用笔记.html.vue"]]);export{S as default};
