const t=JSON.parse('{"key":"v-565c5776","path":"/blog/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/2023-10-24-_%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96_%20%E5%9F%BA%E4%BA%8EPython%E7%BB%98%E5%88%B6%E7%AE%80%E5%8D%95%E5%8A%A8%E5%9B%BE.html","title":"[数据分析与可视化] 基于Python绘制简单动图","lang":"zh-CN","frontmatter":{"date":"2023-10-24T12:50:50.000Z","category":["数据分析与可视化"],"tag":["Python","数据分析与可视化"],"description":"[数据分析与可视化] 基于Python绘制简单动图 动画是一种高效的可视化工具，能够提升用户的吸引力和视觉体验，有助于以富有意义的方式呈现数据可视化。本文的主要介绍在Python中两种简单制作动图的方法。其中一种方法是使用matplotlib的Animations模块绘制动图，另一种方法是基于Pillow生成GIF动图。 [toc] 1 Animations模块 Matplotlib的Animations模块提供了FuncAnimation和ArtistAnimation类来创建matplotlib绘图动画，FuncAnimation和ArtistAnimation都是Animation类的子类。它们的区别在于实现动画的方式和使用场景不同。FuncAnimation适用于根据时间更新图形状态的动画效果，且更加灵活和常用。而ArtistAnimation适用于将已有的静态图像序列组合成动画的效果。具体区别如下：","head":[["meta",{"property":"og:url","content":"https://luohenyueji.github.io/blog/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/2023-10-24-_%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96_%20%E5%9F%BA%E4%BA%8EPython%E7%BB%98%E5%88%B6%E7%AE%80%E5%8D%95%E5%8A%A8%E5%9B%BE.html"}],["meta",{"property":"og:site_name","content":"落痕月极的博客"}],["meta",{"property":"og:title","content":"[数据分析与可视化] 基于Python绘制简单动图"}],["meta",{"property":"og:description","content":"[数据分析与可视化] 基于Python绘制简单动图 动画是一种高效的可视化工具，能够提升用户的吸引力和视觉体验，有助于以富有意义的方式呈现数据可视化。本文的主要介绍在Python中两种简单制作动图的方法。其中一种方法是使用matplotlib的Animations模块绘制动图，另一种方法是基于Pillow生成GIF动图。 [toc] 1 Animations模块 Matplotlib的Animations模块提供了FuncAnimation和ArtistAnimation类来创建matplotlib绘图动画，FuncAnimation和ArtistAnimation都是Animation类的子类。它们的区别在于实现动画的方式和使用场景不同。FuncAnimation适用于根据时间更新图形状态的动画效果，且更加灵活和常用。而ArtistAnimation适用于将已有的静态图像序列组合成动画的效果。具体区别如下："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"落痕月极"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"数据分析与可视化"}],["meta",{"property":"article:published_time","content":"2023-10-24T12:50:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[数据分析与可视化] 基于Python绘制简单动图\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-24T12:50:50.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"落痕月极\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1 Animations模块","slug":"_1-animations模块","link":"#_1-animations模块","children":[{"level":3,"title":"1.1 FuncAnimation类","slug":"_1-1-funcanimation类","link":"#_1-1-funcanimation类","children":[]},{"level":3,"title":"1.2 ArtistAnimation类","slug":"_1-2-artistanimation类","link":"#_1-2-artistanimation类","children":[]},{"level":3,"title":"1.3 动画保存","slug":"_1-3-动画保存","link":"#_1-3-动画保存","children":[]}]},{"level":2,"title":"2 基于Pillow库生成动图","slug":"_2-基于pillow库生成动图","link":"#_2-基于pillow库生成动图","children":[]},{"level":2,"title":"3 参考","slug":"_3-参考","link":"#_3-参考","children":[]}],"git":{},"readingTime":{"minutes":23.68,"words":7105},"filePathRelative":"blog/数据分析与可视化/2023-10-24-[数据分析与可视化] 基于Python绘制简单动图.md","localizedDate":"2023年10月24日","excerpt":"<h1> [数据分析与可视化] 基于Python绘制简单动图</h1>\\n<p>动画是一种高效的可视化工具，能够提升用户的吸引力和视觉体验，有助于以富有意义的方式呈现数据可视化。本文的主要介绍在Python中两种简单制作动图的方法。其中一种方法是使用matplotlib的Animations模块绘制动图，另一种方法是基于Pillow生成GIF动图。</p>\\n<p>[toc]</p>\\n<h2> 1 Animations模块</h2>\\n<p>Matplotlib的Animations模块提供了FuncAnimation和ArtistAnimation类来创建matplotlib绘图动画，FuncAnimation和ArtistAnimation都是Animation类的子类。它们的区别在于实现动画的方式和使用场景不同。FuncAnimation适用于根据时间更新图形状态的动画效果，且更加灵活和常用。而ArtistAnimation适用于将已有的静态图像序列组合成动画的效果。具体区别如下：</p>","autoDesc":true}');export{t as data};
