import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as l,c as r,a as n,b as s,d as a,e as i}from"./app-MsA2k2kn.js";const p={},u=n("h1",{id:"python-cairosvg使用教程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-cairosvg使用教程","aria-hidden":"true"},"#"),s(" [python] CairoSVG使用教程")],-1),c=n("h2",{id:"_1-cairosvg介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-cairosvg介绍","aria-hidden":"true"},"#"),s(" 1 CairoSVG介绍")],-1),d={href:"https://github.com/luohenyueji/Python-Study-Notes/blob/master/Documents/%5Bpython%5D%20CairoSVG%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.ipynb",target:"_blank",rel:"noopener noreferrer"},v=n("br",null,null,-1),h=n("br",null,null,-1),g=n("blockquote",null,[n("p",null,"pip3 install cairosvg")],-1),m=n("p",null,"本文主要使用2.4.2版本，当前版本的CairoSVG至少需要Python 3.5，但不适用于Python2.x。较旧的CairoSVG（1.x）版本可在Python 2.x中使用，但不再受支持。CairoSVG及其依赖项在安装过程中可能需要其他工具，这些工具的名称取决于您使用的操作系统。具体如下：",-1),_=n("li",null,"在Windows上，您必须安装适用于Python和Cairo的Visual C ++编译器",-1),b=n("li",null,"在macOS上，您必须安装cairo和libffi",-1),f={href:"https://weasyprint.readthedocs.io/en/latest/install.html",target:"_blank",rel:"noopener noreferrer"},k=i(`<h2 id="_2-cairosvg的使用" tabindex="-1"><a class="header-anchor" href="#_2-cairosvg的使用" aria-hidden="true">#</a> 2 CairoSVG的使用</h2><h3 id="_2-1-命令行使用" tabindex="-1"><a class="header-anchor" href="#_2-1-命令行使用" aria-hidden="true">#</a> 2.1 命令行使用</h3><p>通过命令行你就可以使用CairoSVG，以下代码能够将当前目录下的image.svg文件转换为image.png文件：</p><blockquote><p>cairosvg image.svg -o image.png</p></blockquote><p>具体CairoSVG命令行参数如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cairosvg --help
usage: cairosvg [-h] [-v] [-f {pdf,png,ps,svg}] [-d DPI] [-W WIDTH]
                [-H HEIGHT] [-s SCALE] [-u] [--output-width OUTPUT_WIDTH]
                [--output-height OUTPUT_HEIGHT] [-o OUTPUT]
                input

Convert SVG files to other formats

positional arguments:
  input                 input filename or URL 文件名或者url链接名

optional arguments:
  -h, --help            show this help message and exit 帮助
  -v, --version         show program&#39;s version number and exit 版本查看
  -f {pdf,png,ps,svg}   --format {pdf,png,ps,svg} output format 输出格式                      
  -d DPI, --dpi DPI     ratio between 1 inch and 1 pixel 输出图像dpi比率设置 DPI比率介于1英寸和1像素之间
  -W WIDTH, --width WIDTH    width of the parent container in pixels 输入图像宽
  -H HEIGHT, --height HEIGHT  height of the parent container in pixels 输入图像高
  -s SCALE, --scale SCALE    output scaling factor 输出图像缩放比例
  -u, --unsafe          resolve XML entities and allow very large files 解析XML实体
                        (WARNING: vulnerable to XXE attacks and various DoS) 但是有安全问题
  --output-width OUTPUT_WIDTH     desired output width in pixels 期望图像输出宽
  --output-height OUTPUT_HEIGHT   desired output height in pixels 期望图像输出高
  -o OUTPUT, --output OUTPUT     output filename 图像输出名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),S={href:"https://www.w3.org/TR/SVG11/coords.html",target:"_blank",rel:"noopener noreferrer"},G=i(`<h3 id="_2-2-python库使用" tabindex="-1"><a class="header-anchor" href="#_2-2-python库使用" aria-hidden="true">#</a> 2.2 python库使用</h3><p>CairoSVG为Python 3.5+提供了一个模块。该cairosvg模块提供4个功能：</p><ul><li>svg转pdf</li><li>svg转png</li><li>svg转ps</li><li>svg2转svg(svg文件切割)</li></ul><p>这些函数需要以下命名参数之一：</p><ul><li>url，URL或文件名</li><li>file_obj，类似文件的对象</li><li>bytestring，一个包含SVG的字节字符串</li></ul><p>他们还可以接收与命令行选项相对应的这些可选参数：</p><ul><li>parent_width</li><li>parent_height</li><li>dpi</li><li>scale</li><li>unsafe</li></ul><p>如果write_to提供了参数（文件名或类似文件的对象），则将输出写入此处。否则，该函数将返回一个字节字符串。例如：</p><blockquote><p>cairosvg.svg2png(url=&quot;/path/to/input.svg&quot;, write_to=&quot;/tmp/output.png&quot;)<br> cairosvg.svg2pdf(file_obj=open(&quot;/path/to/input.svg&quot;, &quot;rb&quot;), write_to=&quot;/tmp/output.pdf&quot;)<br> output = cairosvg.svg2ps(bytestring=open(&quot;/path/to/input.svg&quot;).read().encode(&#39;utf-8&#39;))</p></blockquote><p>使用实例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>

<span class="token comment"># 导入cairosvg库</span>
<span class="token keyword">import</span> cairosvg

<span class="token comment"># svg转pdf</span>
<span class="token comment"># file_obj输入文件名 write_to输出文件名</span>
cairosvg<span class="token punctuation">.</span>svg2pdf<span class="token punctuation">(</span>file_obj<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;image.svg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> write_to<span class="token operator">=</span><span class="token string">&quot;output.pdf&quot;</span><span class="token punctuation">)</span>  

<span class="token comment"># svg转png</span>
<span class="token comment"># file_obj输入文件名 write_to输出文件名 scale输出图像放大倍数</span>
cairosvg<span class="token punctuation">.</span>svg2png<span class="token punctuation">(</span>file_obj<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;image.svg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> write_to<span class="token operator">=</span><span class="token string">&quot;d:/output.png&quot;</span><span class="token punctuation">,</span>scale<span class="token operator">=</span><span class="token number">3.0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-参考" tabindex="-1"><a class="header-anchor" href="#_3-参考" aria-hidden="true">#</a> 3 参考</h2>`,12),V={href:"https://cairosvg.org/",target:"_blank",rel:"noopener noreferrer"};function y(x,q){const e=o("ExternalLinkIcon");return l(),r("div",null,[u,c,n("p",null,[n("a",d,[s("代码下载地址"),a(e)]),v,s(" CairoSVG是一个将SVG1.1转为PNG，PDF, PS格式的转化。SVG算目前火热的图像文件格式了，它的英文全称为Scalable Vector Graphics，意思为可缩放的矢量图形，但是SVG要专用软件才能编辑打开,通过CairSVG我们就能将SVG格式转换为常用的格式。它为类Unix操作系统（至少Linux和macOS）和Windows提供了命令行界面和Python 3.5+库。它是一个开源软件，具有LGPLv3许可。"),h,s(" CairoSVG用Python编写，基于著名的2D图形库Cairo。它在来自W3C测试套件的 SVG样本上进行了测试。它还依赖tinycss2和 cssselect2来应用CSS，并依赖 defusedxml来检测不安全的SVG文件。嵌入式栅格图像由Pillow处理。 CarioSVG仅支持python3，你可以用pip命令安装，安装代码如下：")]),g,m,n("ul",null,[_,b,n("li",null,[s("在Linux上，你必须安装cairo，python3-dev和libffi-dev（名称可能为你的系统版本有所不同) 如果您不知道如何安装这些工具，则可以按照"),n("a",f,[s("WeasyPrint安装指南"),a(e)]),s("中的简单步骤进行操作：安装WeasyPrint还将安装CairoSVG。")])]),k,n("p",null,[s("支持的输出格式是pdf，ps，png和svg（默认为 pdf）。默认output为标准输出。如果提供了输出文件名，则会根据扩展名自动选择格式。这些dpi选项设置像素与实际单位（例如，毫米和英寸）之间的比率（如"),n("a",S,[s("规范"),a(e)]),s("中所述）。可以为SVG文件提供宽度和高度选项来设置容器大小。此外，如果-用作文件名，CairoSVG将从标准输入中读取SVG字符串。")]),G,n("ul",null,[n("li",null,[n("a",V,[s("CairoSVG官网"),a(e)])])])])}const P=t(p,[["render",y],["__file","2019-12-30-_python_ CairoSVG使用教程.html.vue"]]);export{P as default};
